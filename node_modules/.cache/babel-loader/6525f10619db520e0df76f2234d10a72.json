{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookPage({\n  setSavedBooks,\n  savedBooks,\n  user\n}) {\n  _s();\n\n  const [book, setBook] = useState(null);\n  const params = useParams();\n  let foundBook = null;\n  let bookId = 0;\n  let waitersMapped = null;\n\n  function stripHtml(html) {\n    let tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n\n  useEffect(() => {\n    foundBook = savedBooks.find(book => book.api_id === params.id);\n    setBook(foundBook);\n    console.log(foundBook);\n\n    if (!foundBook) {\n      fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`).then(response => response.json()).then(data => {\n        setBook({\n          title: data.volumeInfo.title,\n          subtitle: data.volumeInfo.subtitle,\n          authors: data.volumeInfo.authors.join(\", \"),\n          publisher: data.volumeInfo.publisher,\n          publishedDate: data.volumeInfo.publishedDate,\n          description: stripHtml(data.volumeInfo.description),\n          image_url: data.volumeInfo.imageLinks.thumbnail,\n          api_id: data.id\n        });\n      });\n    }\n  }, []);\n\n  function waitListRequestAndStoreInDBRequest() {\n    if (user) {\n      let confObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      };\n      fetch('http://localhost:3000/books', confObj).then(response => response.json()).then(data => {\n        setBook(data);\n        bookId = data.id;\n        let confObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: user.id,\n            book_id: bookId\n          })\n        };\n        fetch('http://localhost:3000/waitings', confObj);\n      });\n    } else {\n      alert('Please sign in to wait for a book');\n    }\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/waitings/`).then(response => response.json()).then(data => {\n      console.log(data);\n      let waitersFiltered = data.filter(waiting => waiting.book_id === bookId);\n      waitersMapped = waitersFiltered.map(waiter => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: waiter.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 24\n        }, this);\n      }); // debugger\n    });\n  }, [book]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: book ? book.image_url : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book ? book.title : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: book ? book.subtitle : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"by: \", book ? book.authors : \"N/A\", \" (\", book ? book.publishedDate : \"N/A\", \") \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Publishing House: \", book ? book.publisher : \"N/A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", book ? book.description : \"N/A\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waitlist:  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [waitersMapped, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: waitListRequestAndStoreInDBRequest,\n      children: \"Jump on the Waitlist for this book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BookPage, \"xUFojidmVh29fMHgT2BH+rcU4J8=\", false, function () {\n  return [useParams];\n});\n\n_c = BookPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js"],"names":["useEffect","useState","useParams","BookPage","setSavedBooks","savedBooks","user","book","setBook","params","foundBook","bookId","waitersMapped","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","find","api_id","id","console","log","fetch","then","response","json","data","title","volumeInfo","subtitle","authors","join","publisher","publishedDate","description","image_url","imageLinks","thumbnail","waitListRequestAndStoreInDBRequest","confObj","method","headers","body","JSON","stringify","user_id","book_id","alert","waitersFiltered","filter","waiting","map","waiter","name"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function BookPage({setSavedBooks, savedBooks, user}){\n\n    const[book, setBook] = useState (null)\n    const params = useParams()\n    let foundBook = null\n    let bookId = 0\n    let waitersMapped = null\n    \n    function stripHtml(html)\n        {\n        let tmp = document.createElement(\"DIV\");\n        tmp.innerHTML = html;\n        return tmp.textContent || tmp.innerText || \"\";\n        }\n\n\n    useEffect(()=>{\n        foundBook = savedBooks.find(book=>book.api_id===params.id) \n        setBook(foundBook)\n        console.log(foundBook)\n        \n        if (!foundBook){ \n            fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`)\n            .then(response => response.json())\n            .then(data=>{\n                setBook({\n                    title: data.volumeInfo.title, \n                    subtitle: data.volumeInfo.subtitle, \n                    authors: data.volumeInfo.authors.join(\", \"), \n                    publisher: data.volumeInfo.publisher, \n                    publishedDate: data.volumeInfo.publishedDate, \n                    description: stripHtml(data.volumeInfo.description),\n                    image_url: data.volumeInfo.imageLinks.thumbnail, \n                    api_id: data.id\n                })\n            })\n\n        }\n    \n    },[])\n\n\n\n    function waitListRequestAndStoreInDBRequest (){\n        if (user){\n            let confObj = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(book),\n            }\n            fetch('http://localhost:3000/books', confObj)\n            .then(response=>response.json())\n            .then(data=>{\n                setBook(data)\n                bookId = data.id\n                let confObj = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({user_id: user.id, book_id: bookId}),\n            }\n            fetch('http://localhost:3000/waitings', confObj)\n            })\n        }\n        else{\n            alert('Please sign in to wait for a book')\n        }\n    }\n\n    useEffect(()=>{\n        fetch(`http://localhost:3000/waitings/`)\n        .then(response=>response.json())\n        .then(data=> {\n            console.log(data)\n            let waitersFiltered = data.filter(waiting=>waiting.book_id===bookId)\n            waitersMapped = waitersFiltered.map(waiter=>{\n                return(<li>{waiter.user.name}</li>)\n            })\n            // debugger\n        })\n    },[book])\n\n\n\n    return(\n        <>\n            <img src={ book ? book.image_url: \"N/A\" }></img>\n            <h2>{book? book.title: \"N/A\"}</h2>\n            <h3>{book? book.subtitle: \"N/A\"}</h3>\n            <p>by: {book? book.authors: \"N/A\"} ({book? book.publishedDate: \"N/A\"}) </p>\n            <p>Publishing House: {book? book.publisher: \"N/A\"}</p>\n            <p>Description: {book? book.description: \"N/A\"} </p>\n\n            <p>Waitlist:  </p>\n            <ul>{waitersMapped} </ul>\n\n            <button onClick={waitListRequestAndStoreInDBRequest}>Jump on the Waitlist for this book</button>\n\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}