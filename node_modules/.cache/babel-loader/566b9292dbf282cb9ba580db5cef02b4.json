{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nexport default function Timer() {\n  _s();\n\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  function startTimer() {\n    const countdownDate = new Date('May 30, 2020 00:00:00').getTime(); // debugger\n\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(distance % (1000 * 60 * 60 * 24));\n    }, 1000);\n  }\n\n  startTimer();\n  return null;\n}\n\n_s(Timer, \"GFeGbjCbtvAehMsQvDqitpMPiBk=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/Timer.js"],"names":["React","useState","useRef","Timer","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","startTimer","countdownDate","Date","getTime","interval","setInterval","now","distance","countDownDate","Math","floor"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;;AAEA,WAASW,UAAT,GAAsB;AAClB,UAAMC,aAAa,GAAG,IAAIC,IAAJ,CAAS,uBAAT,EAAkCC,OAAlC,EAAtB,CADkB,CAElB;;AAEAC,IAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAI;AACvB,YAAMC,GAAG,GAAG,IAAIJ,IAAJ,GAAWC,OAAX,EAAZ;AACA,YAAMI,QAAQ,GAAGC,aAAa,GAAGF,GAAjC;AAEA,YAAMd,IAAI,GAAGiB,IAAI,CAACC,KAAL,CAAWH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAgB,EAApB,CAAnB,CAAb;AACA,YAAMb,KAAK,GAAGe,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAgB,EAApB,CAAR,IAAmC,OAAK,EAAL,GAAQ,EAA3C,CAAZ,CAAd;AACA,YAAMX,OAAO,GAAGa,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAR,IAA+B,OAAO,EAAtC,CAAZ,CAAhB;AACA,YAAMT,OAAO,GAAGW,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAgB,EAApB,CAApB,CAAhB;AAGH,KAVqB,EAUnB,IAVmB,CAAtB;AAWH;;AACDP,EAAAA,UAAU;AACV,SAAO,IAAP;AACH;;GAxBuBT,K;;KAAAA,K","sourcesContent":["import React, {useState, useRef} from 'react'\n\nexport default function Timer (){\n    const [days, setDays] = useState(0)\n    const [hours, setHours] = useState(0)\n    const [minutes, setMinutes] = useState(0)\n    const [seconds, setSeconds] = useState(0)\n\n    function startTimer() {\n        const countdownDate = new Date('May 30, 2020 00:00:00').getTime()\n        // debugger\n\n        interval = setInterval(()=>{\n            const now = new Date().getTime()\n            const distance = countDownDate - now\n\n            const days = Math.floor(distance / (1000 * 60 * 60 *24))\n            const hours = Math.floor((distance % (1000 * 60 * 60 *24) / (1000*60*60)))\n            const minutes = Math.floor((distance % (1000 * 60 * 60) / (1000 * 60)))\n            const seconds = Math.floor((distance % (1000 * 60 * 60 *24)))\n            \n\n        }, 1000)\n    }\n    startTimer()\n    return null\n}"]},"metadata":{},"sourceType":"module"}