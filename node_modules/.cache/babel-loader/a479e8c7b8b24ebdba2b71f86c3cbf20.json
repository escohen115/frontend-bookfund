{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/SponsorForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SponsorForm({\n  waitingsMapped,\n  book,\n  user,\n  setUser,\n  waitlistRequest,\n  setWaitlistRequest,\n  setBackEndBook,\n  backEndBook,\n  toggleSponsorForm,\n  setToggleSponsorForm\n}) {\n  _s();\n\n  const [number, setNumber] = useState(0);\n\n  function handleSponsorSubmission(e) {\n    if (!backEndBook) {\n      alert(\"There appears to be no on waiting on this book.\");\n    } else {\n      e.preventDefault();\n      let confObj = {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          num_books_funded: e.target.number.value,\n          sponsor_id: user.id\n        })\n      };\n      fetch(`http://localhost:3000/waitings/sponsor/${book.id}`, confObj).then(response => response.json()).then(data => {\n        setToggleSponsorForm(!toggleSponsorForm);\n        setWaitlistRequest(!waitlistRequest);\n        let body = {\n          username: user.name\n        };\n        let confObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: user.username\n          })\n        };\n        fetch('http://localhost:3000/users/login', confObj).then(response => response.json()).then(data => {\n          setUser(data);\n        });\n      });\n    }\n  }\n\n  if (!backEndBook) {\n    alert(\"There appears to be no one waiting on this book.\");\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signup\",\n      onSubmit: e => handleSponsorSubmission(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Number of copies I'd like to sponsor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"number\",\n        value: number,\n        onChange: e => setNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), number > waitingsMapped.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Please enter a number smaller than the waitlist total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Sponsor\",\n        className: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(SponsorForm, \"G5PFX1wnjBJODPcJAktOglW1raM=\");\n\n_c = SponsorForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SponsorForm\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/SponsorForm.js"],"names":["useState","SponsorForm","waitingsMapped","book","user","setUser","waitlistRequest","setWaitlistRequest","setBackEndBook","backEndBook","toggleSponsorForm","setToggleSponsorForm","number","setNumber","handleSponsorSubmission","e","alert","preventDefault","confObj","method","headers","body","JSON","stringify","num_books_funded","target","value","sponsor_id","id","fetch","then","response","json","data","username","name","length","color"],"mappings":";;;AAAA,SAAQA,QAAR,QAAwB,OAAxB;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA,cAAD;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,IAAvB;AAA6BC,EAAAA,OAA7B;AAAsCC,EAAAA,eAAtC;AAAuDC,EAAAA,kBAAvD;AAA2EC,EAAAA,cAA3E;AAA2FC,EAAAA,WAA3F;AAAwGC,EAAAA,iBAAxG;AAA2HC,EAAAA;AAA3H,CAArB,EAAsK;AAAA;;AAGjL,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAAnC;;AAGA,WAASc,uBAAT,CAAiCC,CAAjC,EAAmC;AAC/B,QAAI,CAACN,WAAL,EAAiB;AACbO,MAAAA,KAAK,CAAC,iDAAD,CAAL;AACH,KAFD,MAGI;AACAD,MAAAA,CAAC,CAACE,cAAF;AACA,UAAIC,OAAO,GAAG;AACVC,QAAAA,MAAM,EAAE,OADE;AAEVC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFC;AAKVC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,gBAAgB,EAAET,CAAC,CAACU,MAAF,CAASb,MAAT,CAAgBc,KAAnC;AAA0CC,UAAAA,UAAU,EAAEvB,IAAI,CAACwB;AAA3D,SAAf;AALI,OAAd;AAOAC,MAAAA,KAAK,CAAE,0CAAyC1B,IAAI,CAACyB,EAAG,EAAnD,EAAsDV,OAAtD,CAAL,CACCY,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAE;AACRtB,QAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACAH,QAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACA,YAAIe,IAAI,GAAG;AAACa,UAAAA,QAAQ,EAAE9B,IAAI,CAAC+B;AAAhB,SAAX;AACA,YAAIjB,OAAO,GAAG;AACVC,UAAAA,MAAM,EAAE,MADE;AAEVC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAFC;AAKVC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACW,YAAAA,QAAQ,EAAE9B,IAAI,CAAC8B;AAAhB,WAAf;AALI,SAAd;AAOAL,QAAAA,KAAK,CAAC,mCAAD,EAAsCX,OAAtC,CAAL,CACCY,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAE;AAAC5B,UAAAA,OAAO,CAAC4B,IAAD,CAAP;AAAc,SAF3B;AAIH,OAjBD;AAkBH;AAGJ;;AACD,MAAI,CAACxB,WAAL,EAAiB;AACTO,IAAAA,KAAK,CAAC,kDAAD,CAAL;AACA,WAAO,IAAP;AACH,GAHL,MAII;AACJ,wBACI;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,QAAQ,EAAED,CAAC,IAAED,uBAAuB,CAACC,CAAD,CAA7D;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,QAA1B;AAAmC,QAAA,KAAK,EAAEH,MAA1C;AAAkD,QAAA,QAAQ,EAAEG,CAAC,IAAEF,SAAS,CAACE,CAAC,CAACU,MAAF,CAASC,KAAV;AAAxE;AAAA;AAAA;AAAA;AAAA,cAFR,EAGSd,MAAM,GAAGV,cAAc,CAACkC,MAAxB,gBACG;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAEG,IALZ,eAMQ;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,SAA3B;AAAqC,QAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cANR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUC;AAEA;;GA1DmBpC,W;;KAAAA,W","sourcesContent":["import {useState } from \"react\";\n\nexport default function SponsorForm({waitingsMapped, book, user, setUser, waitlistRequest, setWaitlistRequest, setBackEndBook, backEndBook, toggleSponsorForm, setToggleSponsorForm}){\n    \n\n    const[number, setNumber] = useState(0)\n\n\n    function handleSponsorSubmission(e){\n        if (!backEndBook){\n            alert(\"There appears to be no on waiting on this book.\")\n        }\n        else{\n            e.preventDefault()\n            let confObj = {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({num_books_funded: e.target.number.value, sponsor_id: user.id })\n            }\n            fetch(`http://localhost:3000/waitings/sponsor/${book.id}`, confObj)\n            .then(response=>response.json())\n            .then(data=>{\n                setToggleSponsorForm(!toggleSponsorForm)\n                setWaitlistRequest(!waitlistRequest)\n                let body = {username: user.name}\n                let confObj = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({username: user.username}),\n                }\n                fetch('http://localhost:3000/users/login', confObj)\n                .then(response=>response.json())\n                .then(data=>{setUser(data)})\n                \n            })\n        }\n   \n\n    }\n    if (!backEndBook){\n            alert(\"There appears to be no one waiting on this book.\")\n            return null\n        }\n    else{\n    return (\n        <form className=\"signup\" onSubmit={e=>handleSponsorSubmission(e)} >\n            <label>Number of copies I'd like to sponsor:</label>\n                <input type=\"number\" name=\"number\" value={number} onChange={e=>setNumber(e.target.value)}/>\n                {number > waitingsMapped.length ? (\n                    <p style={{ color: \"red\" }}>Please enter a number smaller than the waitlist total</p>\n                ) : null}\n                <input type=\"submit\" value=\"Sponsor\" className=\"button\"/>\n        </form>\n    )\n    }\n\n    }\n    "]},"metadata":{},"sourceType":"module"}