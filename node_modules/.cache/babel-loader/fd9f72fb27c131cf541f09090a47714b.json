{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/ReviewForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReviewForm({\n  user,\n  book,\n  setWaitlistRequest,\n  waitlistRequest,\n  backEndBook,\n  setBackEndBook\n}) {\n  _s();\n\n  const [formState, setFormState] = useState({});\n\n  function handleChange(e) {\n    setFormState({ ...formState,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setFormState({ ...formState,\n      user_id: user.id,\n      book_id: book.id\n    });\n    let confObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formState)\n    };\n    fetch('http://localhost:3000/reviews', confObj);\n    setWaitlistRequest(!waitlistRequest);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"review-form\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"rating\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        rows: 3,\n        cols: 25,\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReviewForm, \"dWU4TUveBDw5oemFxsnm4t+y5TM=\");\n\n_c = ReviewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/ReviewForm.js"],"names":["useState","ReviewForm","user","book","setWaitlistRequest","waitlistRequest","backEndBook","setBackEndBook","formState","setFormState","handleChange","e","target","name","value","handleSubmit","preventDefault","user_id","id","book_id","confObj","method","headers","body","JSON","stringify","fetch"],"mappings":";;;AAAA,SAAQA,QAAR,QAAwB,OAAxB;;AAEA,eAAe,SAASC,UAAT,CAAqB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,kBAAb;AAAiCC,EAAAA,eAAjC;AAAkDC,EAAAA,WAAlD;AAA+DC,EAAAA;AAA/D,CAArB,EAAoG;AAAA;;AAE/G,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AAEA,WAASU,YAAT,CAAsBC,CAAtB,EAAwB;AACpBF,IAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFlB,KAAD,CAAZ;AAIH;;AAED,WAASC,YAAT,CAAsBJ,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACK,cAAF;AAECP,IAAAA,YAAY,CAAC,EACV,GAAGD,SADO;AAEVS,MAAAA,OAAO,EAAEf,IAAI,CAACgB,EAFJ;AAGVC,MAAAA,OAAO,EAAEhB,IAAI,CAACe;AAHJ,KAAD,CAAZ;AAMD,QAAIE,OAAO,GAAG;AACNC,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFH;AAKNC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,SAAf;AALA,KAAd;AAOAkB,IAAAA,KAAK,CAAC,+BAAD,EAAkCN,OAAlC,CAAL;AAEAhB,IAAAA,kBAAkB,CAAC,CAACC,eAAF,CAAlB;AACH;;AAED,sBACA;AAAA,2BACI;AAAM,MAAA,EAAE,EAAC,aAAT;AAAuB,MAAA,QAAQ,EAAEM,CAAC,IAAEI,YAAY,CAACJ,CAAD,CAAhD;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,QAA1B;AAAmC,QAAA,QAAQ,EAAEA,CAAC,IAAED,YAAY,CAACC,CAAD;AAA5D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAE,CAFV;AAGI,QAAA,IAAI,EAAE,EAHV;AAII,QAAA,QAAQ,EAAEA,CAAC,IAAED,YAAY,CAACC,CAAD;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAgBH;;GAhDuBV,U;;KAAAA,U","sourcesContent":["import {useState } from \"react\";\n\nexport default function ReviewForm ({user, book, setWaitlistRequest, waitlistRequest, backEndBook, setBackEndBook}){\n\n    const [formState, setFormState] = useState({})\n\n    function handleChange(e){\n        setFormState({\n            ...formState,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    function handleSubmit(e){\n        e.preventDefault()\n        \n         setFormState({\n            ...formState,\n            user_id: user.id, \n            book_id: book.id\n        })\n\n        let confObj = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formState),\n            }\n        fetch('http://localhost:3000/reviews', confObj)\n        \n        setWaitlistRequest(!waitlistRequest)\n    }\n\n    return (\n    <div>\n        <form id=\"review-form\" onSubmit={e=>handleSubmit(e)} >\n            <input type=\"number\" name=\"rating\" onChange={e=>handleChange(e)}/>\n            <textarea   \n                name=\"text\"             \n                rows={3}\n                cols={25}\n                onChange={e=>handleChange(e)}\n            />\n            <button type='submit'> Submit </button>\n        </form>\n        \n    </div> \n    )\n    \n}"]},"metadata":{},"sourceType":"module"}