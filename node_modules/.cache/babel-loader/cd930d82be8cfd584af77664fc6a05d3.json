{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst os = __importStar(require(\"os\"));\n\nconst path = __importStar(require(\"path\"));\n\nconst fs = __importStar(require(\"fs\"));\n\nconst BrowserFetcher_js_1 = require(\"./BrowserFetcher.js\");\n\nconst Browser_js_1 = require(\"../common/Browser.js\");\n\nconst BrowserRunner_js_1 = require(\"./BrowserRunner.js\");\n\nconst util_1 = require(\"util\");\n\nconst mkdtempAsync = util_1.promisify(fs.mkdtemp);\nconst writeFileAsync = util_1.promisify(fs.writeFile);\n/**\n * @internal\n */\n\nclass ChromeLauncher {\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n\n  async launch(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      dumpio = false,\n      executablePath = null,\n      pipe = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {\n        width: 800,\n        height: 600\n      },\n      slowMo = 0,\n      timeout = 30000\n    } = options;\n    const profilePath = path.join(os.tmpdir(), 'puppeteer_dev_chrome_profile-');\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs) chromeArguments.push(...this.defaultArgs(options));else if (Array.isArray(ignoreDefaultArgs)) chromeArguments.push(...this.defaultArgs(options).filter(arg => !ignoreDefaultArgs.includes(arg)));else chromeArguments.push(...args);\n    let temporaryUserDataDir = null;\n    if (!chromeArguments.some(argument => argument.startsWith('--remote-debugging-'))) chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');\n\n    if (!chromeArguments.some(arg => arg.startsWith('--user-data-dir'))) {\n      temporaryUserDataDir = await mkdtempAsync(profilePath);\n      chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);\n    }\n\n    let chromeExecutable = executablePath;\n\n    if (!executablePath) {\n      if (os.arch() === 'arm64') {\n        chromeExecutable = '/usr/bin/chromium-browser';\n      } else {\n        const {\n          missingText,\n          executablePath\n        } = resolveExecutablePath(this);\n        if (missingText) throw new Error(missingText);\n        chromeExecutable = executablePath;\n      }\n    }\n\n    const usePipe = chromeArguments.includes('--remote-debugging-pipe');\n    const runner = new BrowserRunner_js_1.BrowserRunner(chromeExecutable, chromeArguments, temporaryUserDataDir);\n    runner.start({\n      handleSIGHUP,\n      handleSIGTERM,\n      handleSIGINT,\n      dumpio,\n      env,\n      pipe: usePipe\n    });\n\n    try {\n      const connection = await runner.setupConnection({\n        usePipe,\n        timeout,\n        slowMo,\n        preferredRevision: this._preferredRevision\n      });\n      const browser = await Browser_js_1.Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n      await browser.waitForTarget(t => t.type() === 'page');\n      return browser;\n    } catch (error) {\n      runner.kill();\n      throw error;\n    }\n  }\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @returns {!Array<string>}\n   */\n\n\n  defaultArgs(options = {}) {\n    const chromeArguments = ['--disable-background-networking', '--enable-features=NetworkService,NetworkServiceInProcess', '--disable-background-timer-throttling', '--disable-backgrounding-occluded-windows', '--disable-breakpad', '--disable-client-side-phishing-detection', '--disable-component-extensions-with-background-pages', '--disable-default-apps', '--disable-dev-shm-usage', '--disable-extensions', '--disable-features=Translate', '--disable-hang-monitor', '--disable-ipc-flooding-protection', '--disable-popup-blocking', '--disable-prompt-on-repost', '--disable-renderer-backgrounding', '--disable-sync', '--force-color-profile=srgb', '--metrics-recording-only', '--no-first-run', '--enable-automation', '--password-store=basic', '--use-mock-keychain', // TODO(sadym): remove '--enable-blink-features=IdleDetection'\n    // once IdleDetection is turned on by default.\n    '--enable-blink-features=IdleDetection'];\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    if (userDataDir) chromeArguments.push(`--user-data-dir=${path.resolve(userDataDir)}`);\n    if (devtools) chromeArguments.push('--auto-open-devtools-for-tabs');\n\n    if (headless) {\n      chromeArguments.push('--headless', '--hide-scrollbars', '--mute-audio');\n    }\n\n    if (args.every(arg => arg.startsWith('-'))) chromeArguments.push('about:blank');\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n\n  executablePath() {\n    return resolveExecutablePath(this).executablePath;\n  }\n\n  get product() {\n    return 'chrome';\n  }\n\n}\n/**\n * @internal\n */\n\n\nclass FirefoxLauncher {\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n\n  async launch(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      dumpio = false,\n      executablePath = null,\n      pipe = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {\n        width: 800,\n        height: 600\n      },\n      slowMo = 0,\n      timeout = 30000,\n      extraPrefsFirefox = {}\n    } = options;\n    const firefoxArguments = [];\n    if (!ignoreDefaultArgs) firefoxArguments.push(...this.defaultArgs(options));else if (Array.isArray(ignoreDefaultArgs)) firefoxArguments.push(...this.defaultArgs(options).filter(arg => !ignoreDefaultArgs.includes(arg)));else firefoxArguments.push(...args);\n    if (!firefoxArguments.some(argument => argument.startsWith('--remote-debugging-'))) firefoxArguments.push('--remote-debugging-port=0');\n    let temporaryUserDataDir = null;\n\n    if (!firefoxArguments.includes('-profile') && !firefoxArguments.includes('--profile')) {\n      temporaryUserDataDir = await this._createProfile(extraPrefsFirefox);\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(temporaryUserDataDir);\n    }\n\n    await this._updateRevision();\n    let firefoxExecutable = executablePath;\n\n    if (!executablePath) {\n      const {\n        missingText,\n        executablePath\n      } = resolveExecutablePath(this);\n      if (missingText) throw new Error(missingText);\n      firefoxExecutable = executablePath;\n    }\n\n    const runner = new BrowserRunner_js_1.BrowserRunner(firefoxExecutable, firefoxArguments, temporaryUserDataDir);\n    runner.start({\n      handleSIGHUP,\n      handleSIGTERM,\n      handleSIGINT,\n      dumpio,\n      env,\n      pipe\n    });\n\n    try {\n      const connection = await runner.setupConnection({\n        usePipe: pipe,\n        timeout,\n        slowMo,\n        preferredRevision: this._preferredRevision\n      });\n      const browser = await Browser_js_1.Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n      await browser.waitForTarget(t => t.type() === 'page');\n      return browser;\n    } catch (error) {\n      runner.kill();\n      throw error;\n    }\n  }\n\n  executablePath() {\n    return resolveExecutablePath(this).executablePath;\n  }\n\n  async _updateRevision() {\n    // replace 'latest' placeholder with actual downloaded revision\n    if (this._preferredRevision === 'latest') {\n      const browserFetcher = new BrowserFetcher_js_1.BrowserFetcher(this._projectRoot, {\n        product: this.product\n      });\n      const localRevisions = await browserFetcher.localRevisions();\n      if (localRevisions[0]) this._preferredRevision = localRevisions[0];\n    }\n  }\n\n  get product() {\n    return 'firefox';\n  }\n\n  defaultArgs(options = {}) {\n    const firefoxArguments = ['--no-remote', '--foreground'];\n\n    if (os.platform().startsWith('win')) {\n      firefoxArguments.push('--wait-for-browser');\n    }\n\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n\n    if (headless) firefoxArguments.push('--headless');\n    if (devtools) firefoxArguments.push('--devtools');\n    if (args.every(arg => arg.startsWith('-'))) firefoxArguments.push('about:blank');\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n\n  async _createProfile(extraPrefs) {\n    const profilePath = await mkdtempAsync(path.join(os.tmpdir(), 'puppeteer_dev_firefox_profile-'));\n    const prefsJS = [];\n    const userJS = [];\n    const server = 'dummy.test';\n    const defaultPreferences = {\n      // Make sure Shield doesn't hit the network.\n      'app.normandy.api_url': '',\n      // Disable Firefox old build background check\n      'app.update.checkInstallTime': false,\n      // Disable automatically upgrading Firefox\n      'app.update.disabledForTesting': true,\n      // Increase the APZ content response timeout to 1 minute\n      'apz.content_response_timeout': 60000,\n      // Prevent various error message on the console\n      // jest-puppeteer asserts that no error message is emitted by the console\n      'browser.contentblocking.features.standard': '-tp,tpPrivate,cookieBehavior0,-cm,-fp',\n      // Enable the dump function: which sends messages to the system\n      // console\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n      'browser.dom.window.dump.enabled': true,\n      // Disable topstories\n      'browser.newtabpage.activity-stream.feeds.system.topstories': false,\n      // Always display a blank page\n      'browser.newtabpage.enabled': false,\n      // Background thumbnails in particular cause grief: and disabling\n      // thumbnails in general cannot hurt\n      'browser.pagethumbnails.capturing_disabled': true,\n      // Disable safebrowsing components.\n      'browser.safebrowsing.blockedURIs.enabled': false,\n      'browser.safebrowsing.downloads.enabled': false,\n      'browser.safebrowsing.malware.enabled': false,\n      'browser.safebrowsing.passwords.enabled': false,\n      'browser.safebrowsing.phishing.enabled': false,\n      // Disable updates to search engines.\n      'browser.search.update': false,\n      // Do not restore the last open set of tabs if the browser has crashed\n      'browser.sessionstore.resume_from_crash': false,\n      // Skip check for default browser on startup\n      'browser.shell.checkDefaultBrowser': false,\n      // Disable newtabpage\n      'browser.startup.homepage': 'about:blank',\n      // Do not redirect user when a milstone upgrade of Firefox is detected\n      'browser.startup.homepage_override.mstone': 'ignore',\n      // Start with a blank page about:blank\n      'browser.startup.page': 0,\n      // Do not allow background tabs to be zombified on Android: otherwise for\n      // tests that open additional tabs: the test harness tab itself might get\n      // unloaded\n      'browser.tabs.disableBackgroundZombification': false,\n      // Do not warn when closing all other open tabs\n      'browser.tabs.warnOnCloseOtherTabs': false,\n      // Do not warn when multiple tabs will be opened\n      'browser.tabs.warnOnOpen': false,\n      // Disable the UI tour.\n      'browser.uitour.enabled': false,\n      // Turn off search suggestions in the location bar so as not to trigger\n      // network connections.\n      'browser.urlbar.suggest.searches': false,\n      // Disable first run splash page on Windows 10\n      'browser.usedOnWindows10.introURL': '',\n      // Do not warn on quitting Firefox\n      'browser.warnOnQuit': false,\n      // Defensively disable data reporting systems\n      'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n      'datareporting.healthreport.logging.consoleEnabled': false,\n      'datareporting.healthreport.service.enabled': false,\n      'datareporting.healthreport.service.firstRun': false,\n      'datareporting.healthreport.uploadEnabled': false,\n      // Do not show datareporting policy notifications which can interfere with tests\n      'datareporting.policy.dataSubmissionEnabled': false,\n      'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n      // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n      // This doesn't affect Puppeteer but spams console (Bug 1424372)\n      'devtools.jsonview.enabled': false,\n      // Disable popup-blocker\n      'dom.disable_open_during_load': false,\n      // Enable the support for File object creation in the content process\n      // Required for |Page.setFileInputFiles| protocol method.\n      'dom.file.createInChild': true,\n      // Disable the ProcessHangMonitor\n      'dom.ipc.reportProcessHangs': false,\n      // Disable slow script dialogues\n      'dom.max_chrome_script_run_time': 0,\n      'dom.max_script_run_time': 0,\n      // Only load extensions from the application and user profile\n      // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n      'extensions.autoDisableScopes': 0,\n      'extensions.enabledScopes': 5,\n      // Disable metadata caching for installed add-ons by default\n      'extensions.getAddons.cache.enabled': false,\n      // Disable installing any distribution extensions or add-ons.\n      'extensions.installDistroAddons': false,\n      // Disabled screenshots extension\n      'extensions.screenshots.disabled': true,\n      // Turn off extension updates so they do not bother tests\n      'extensions.update.enabled': false,\n      // Turn off extension updates so they do not bother tests\n      'extensions.update.notifyUser': false,\n      // Make sure opening about:addons will not hit the network\n      'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n      // Force disable Fission until the Remote Agent is compatible\n      'fission.autostart': false,\n      // Allow the application to have focus even it runs in the background\n      'focusmanager.testmode': true,\n      // Disable useragent updates\n      'general.useragent.updates.enabled': false,\n      // Always use network provider for geolocation tests so we bypass the\n      // macOS dialog raised by the corelocation provider\n      'geo.provider.testing': true,\n      // Do not scan Wifi\n      'geo.wifi.scan': false,\n      // No hang monitor\n      'hangmonitor.timeout': 0,\n      // Show chrome errors and warnings in the error console\n      'javascript.options.showInConsole': true,\n      // Disable download and usage of OpenH264: and Widevine plugins\n      'media.gmp-manager.updateEnabled': false,\n      // Prevent various error message on the console\n      // jest-puppeteer asserts that no error message is emitted by the console\n      'network.cookie.cookieBehavior': 0,\n      // Disable experimental feature that is only available in Nightly\n      'network.cookie.sameSite.laxByDefault': false,\n      // Do not prompt for temporary redirects\n      'network.http.prompt-temp-redirect': false,\n      // Disable speculative connections so they are not reported as leaking\n      // when they are hanging around\n      'network.http.speculative-parallel-limit': 0,\n      // Do not automatically switch between offline and online\n      'network.manage-offline-status': false,\n      // Make sure SNTP requests do not hit the network\n      'network.sntp.pools': server,\n      // Disable Flash.\n      'plugin.state.flash': 0,\n      'privacy.trackingprotection.enabled': false,\n      // Enable Remote Agent\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1544393\n      'remote.enabled': true,\n      // Don't do network connections for mitm priming\n      'security.certerrors.mitm.priming.enabled': false,\n      // Local documents have access to all other local documents,\n      // including directory listings\n      'security.fileuri.strict_origin_policy': false,\n      // Do not wait for the notification button security delay\n      'security.notification_enable_delay': 0,\n      // Ensure blocklist updates do not hit the network\n      'services.settings.server': `http://${server}/dummy/blocklist/`,\n      // Do not automatically fill sign-in forms with known usernames and\n      // passwords\n      'signon.autofillForms': false,\n      // Disable password capture, so that tests that include forms are not\n      // influenced by the presence of the persistent doorhanger notification\n      'signon.rememberSignons': false,\n      // Disable first-run welcome page\n      'startup.homepage_welcome_url': 'about:blank',\n      // Disable first-run welcome page\n      'startup.homepage_welcome_url.additional': '',\n      // Disable browser animations (tabs, fullscreen, sliding alerts)\n      'toolkit.cosmeticAnimations.enabled': false,\n      // Prevent starting into safe mode after application crashes\n      'toolkit.startup.max_resumed_crashes': -1\n    };\n    Object.assign(defaultPreferences, extraPrefs);\n\n    for (const [key, value] of Object.entries(defaultPreferences)) userJS.push(`user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`);\n\n    await writeFileAsync(path.join(profilePath, 'user.js'), userJS.join('\\n'));\n    await writeFileAsync(path.join(profilePath, 'prefs.js'), prefsJS.join('\\n'));\n    return profilePath;\n  }\n\n}\n\nfunction resolveExecutablePath(launcher) {\n  let downloadPath; // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n\n  if (!launcher._isPuppeteerCore) {\n    const executablePath = process.env.PUPPETEER_EXECUTABLE_PATH || process.env.npm_config_puppeteer_executable_path || process.env.npm_package_config_puppeteer_executable_path;\n\n    if (executablePath) {\n      const missingText = !fs.existsSync(executablePath) ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' + executablePath : null;\n      return {\n        executablePath,\n        missingText\n      };\n    }\n\n    downloadPath = process.env.PUPPETEER_DOWNLOAD_PATH || process.env.npm_config_puppeteer_download_path || process.env.npm_package_config_puppeteer_download_path;\n  }\n\n  const browserFetcher = new BrowserFetcher_js_1.BrowserFetcher(launcher._projectRoot, {\n    product: launcher.product,\n    path: downloadPath\n  });\n\n  if (!launcher._isPuppeteerCore && launcher.product === 'chrome') {\n    const revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n\n    if (revision) {\n      const revisionInfo = browserFetcher.revisionInfo(revision);\n      const missingText = !revisionInfo.local ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' + revisionInfo.executablePath : null;\n      return {\n        executablePath: revisionInfo.executablePath,\n        missingText\n      };\n    }\n  }\n\n  const revisionInfo = browserFetcher.revisionInfo(launcher._preferredRevision);\n  const missingText = !revisionInfo.local ? `Could not find browser revision ${launcher._preferredRevision}. Run \"PUPPETEER_PRODUCT=firefox npm install\" or \"PUPPETEER_PRODUCT=firefox yarn install\" to download a supported Firefox browser binary.` : null;\n  return {\n    executablePath: revisionInfo.executablePath,\n    missingText\n  };\n}\n/**\n * @internal\n */\n\n\nfunction Launcher(projectRoot, preferredRevision, isPuppeteerCore, product) {\n  // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n  if (!product && !isPuppeteerCore) product = process.env.PUPPETEER_PRODUCT || process.env.npm_config_puppeteer_product || process.env.npm_package_config_puppeteer_product;\n\n  switch (product) {\n    case 'firefox':\n      return new FirefoxLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n\n    case 'chrome':\n    default:\n      if (typeof product !== 'undefined' && product !== 'chrome') {\n        /* The user gave us an incorrect product name\n         * we'll default to launching Chrome, but log to the console\n         * to let the user know (they've probably typoed).\n         */\n        console.warn(`Warning: unknown product name ${product}. Falling back to chrome.`);\n      }\n\n      return new ChromeLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n  }\n}\n\nexports.default = Launcher;","map":{"version":3,"sources":["../../../../src/node/Launcher.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst fs = __importStar(require(\"fs\"));\nconst BrowserFetcher_js_1 = require(\"./BrowserFetcher.js\");\nconst Browser_js_1 = require(\"../common/Browser.js\");\nconst BrowserRunner_js_1 = require(\"./BrowserRunner.js\");\nconst util_1 = require(\"util\");\nconst mkdtempAsync = util_1.promisify(fs.mkdtemp);\nconst writeFileAsync = util_1.promisify(fs.writeFile);\n/**\n * @internal\n */\nclass ChromeLauncher {\n    constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n        this._projectRoot = projectRoot;\n        this._preferredRevision = preferredRevision;\n        this._isPuppeteerCore = isPuppeteerCore;\n    }\n    async launch(options = {}) {\n        const { ignoreDefaultArgs = false, args = [], dumpio = false, executablePath = null, pipe = false, env = process.env, handleSIGINT = true, handleSIGTERM = true, handleSIGHUP = true, ignoreHTTPSErrors = false, defaultViewport = { width: 800, height: 600 }, slowMo = 0, timeout = 30000, } = options;\n        const profilePath = path.join(os.tmpdir(), 'puppeteer_dev_chrome_profile-');\n        const chromeArguments = [];\n        if (!ignoreDefaultArgs)\n            chromeArguments.push(...this.defaultArgs(options));\n        else if (Array.isArray(ignoreDefaultArgs))\n            chromeArguments.push(...this.defaultArgs(options).filter((arg) => !ignoreDefaultArgs.includes(arg)));\n        else\n            chromeArguments.push(...args);\n        let temporaryUserDataDir = null;\n        if (!chromeArguments.some((argument) => argument.startsWith('--remote-debugging-')))\n            chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');\n        if (!chromeArguments.some((arg) => arg.startsWith('--user-data-dir'))) {\n            temporaryUserDataDir = await mkdtempAsync(profilePath);\n            chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);\n        }\n        let chromeExecutable = executablePath;\n        if (!executablePath) {\n            if (os.arch() === 'arm64') {\n                chromeExecutable = '/usr/bin/chromium-browser';\n            }\n            else {\n                const { missingText, executablePath } = resolveExecutablePath(this);\n                if (missingText)\n                    throw new Error(missingText);\n                chromeExecutable = executablePath;\n            }\n        }\n        const usePipe = chromeArguments.includes('--remote-debugging-pipe');\n        const runner = new BrowserRunner_js_1.BrowserRunner(chromeExecutable, chromeArguments, temporaryUserDataDir);\n        runner.start({\n            handleSIGHUP,\n            handleSIGTERM,\n            handleSIGINT,\n            dumpio,\n            env,\n            pipe: usePipe,\n        });\n        try {\n            const connection = await runner.setupConnection({\n                usePipe,\n                timeout,\n                slowMo,\n                preferredRevision: this._preferredRevision,\n            });\n            const browser = await Browser_js_1.Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n            await browser.waitForTarget((t) => t.type() === 'page');\n            return browser;\n        }\n        catch (error) {\n            runner.kill();\n            throw error;\n        }\n    }\n    /**\n     * @param {!Launcher.ChromeArgOptions=} options\n     * @returns {!Array<string>}\n     */\n    defaultArgs(options = {}) {\n        const chromeArguments = [\n            '--disable-background-networking',\n            '--enable-features=NetworkService,NetworkServiceInProcess',\n            '--disable-background-timer-throttling',\n            '--disable-backgrounding-occluded-windows',\n            '--disable-breakpad',\n            '--disable-client-side-phishing-detection',\n            '--disable-component-extensions-with-background-pages',\n            '--disable-default-apps',\n            '--disable-dev-shm-usage',\n            '--disable-extensions',\n            '--disable-features=Translate',\n            '--disable-hang-monitor',\n            '--disable-ipc-flooding-protection',\n            '--disable-popup-blocking',\n            '--disable-prompt-on-repost',\n            '--disable-renderer-backgrounding',\n            '--disable-sync',\n            '--force-color-profile=srgb',\n            '--metrics-recording-only',\n            '--no-first-run',\n            '--enable-automation',\n            '--password-store=basic',\n            '--use-mock-keychain',\n            // TODO(sadym): remove '--enable-blink-features=IdleDetection'\n            // once IdleDetection is turned on by default.\n            '--enable-blink-features=IdleDetection',\n        ];\n        const { devtools = false, headless = !devtools, args = [], userDataDir = null, } = options;\n        if (userDataDir)\n            chromeArguments.push(`--user-data-dir=${path.resolve(userDataDir)}`);\n        if (devtools)\n            chromeArguments.push('--auto-open-devtools-for-tabs');\n        if (headless) {\n            chromeArguments.push('--headless', '--hide-scrollbars', '--mute-audio');\n        }\n        if (args.every((arg) => arg.startsWith('-')))\n            chromeArguments.push('about:blank');\n        chromeArguments.push(...args);\n        return chromeArguments;\n    }\n    executablePath() {\n        return resolveExecutablePath(this).executablePath;\n    }\n    get product() {\n        return 'chrome';\n    }\n}\n/**\n * @internal\n */\nclass FirefoxLauncher {\n    constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n        this._projectRoot = projectRoot;\n        this._preferredRevision = preferredRevision;\n        this._isPuppeteerCore = isPuppeteerCore;\n    }\n    async launch(options = {}) {\n        const { ignoreDefaultArgs = false, args = [], dumpio = false, executablePath = null, pipe = false, env = process.env, handleSIGINT = true, handleSIGTERM = true, handleSIGHUP = true, ignoreHTTPSErrors = false, defaultViewport = { width: 800, height: 600 }, slowMo = 0, timeout = 30000, extraPrefsFirefox = {}, } = options;\n        const firefoxArguments = [];\n        if (!ignoreDefaultArgs)\n            firefoxArguments.push(...this.defaultArgs(options));\n        else if (Array.isArray(ignoreDefaultArgs))\n            firefoxArguments.push(...this.defaultArgs(options).filter((arg) => !ignoreDefaultArgs.includes(arg)));\n        else\n            firefoxArguments.push(...args);\n        if (!firefoxArguments.some((argument) => argument.startsWith('--remote-debugging-')))\n            firefoxArguments.push('--remote-debugging-port=0');\n        let temporaryUserDataDir = null;\n        if (!firefoxArguments.includes('-profile') &&\n            !firefoxArguments.includes('--profile')) {\n            temporaryUserDataDir = await this._createProfile(extraPrefsFirefox);\n            firefoxArguments.push('--profile');\n            firefoxArguments.push(temporaryUserDataDir);\n        }\n        await this._updateRevision();\n        let firefoxExecutable = executablePath;\n        if (!executablePath) {\n            const { missingText, executablePath } = resolveExecutablePath(this);\n            if (missingText)\n                throw new Error(missingText);\n            firefoxExecutable = executablePath;\n        }\n        const runner = new BrowserRunner_js_1.BrowserRunner(firefoxExecutable, firefoxArguments, temporaryUserDataDir);\n        runner.start({\n            handleSIGHUP,\n            handleSIGTERM,\n            handleSIGINT,\n            dumpio,\n            env,\n            pipe,\n        });\n        try {\n            const connection = await runner.setupConnection({\n                usePipe: pipe,\n                timeout,\n                slowMo,\n                preferredRevision: this._preferredRevision,\n            });\n            const browser = await Browser_js_1.Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n            await browser.waitForTarget((t) => t.type() === 'page');\n            return browser;\n        }\n        catch (error) {\n            runner.kill();\n            throw error;\n        }\n    }\n    executablePath() {\n        return resolveExecutablePath(this).executablePath;\n    }\n    async _updateRevision() {\n        // replace 'latest' placeholder with actual downloaded revision\n        if (this._preferredRevision === 'latest') {\n            const browserFetcher = new BrowserFetcher_js_1.BrowserFetcher(this._projectRoot, {\n                product: this.product,\n            });\n            const localRevisions = await browserFetcher.localRevisions();\n            if (localRevisions[0])\n                this._preferredRevision = localRevisions[0];\n        }\n    }\n    get product() {\n        return 'firefox';\n    }\n    defaultArgs(options = {}) {\n        const firefoxArguments = ['--no-remote', '--foreground'];\n        if (os.platform().startsWith('win')) {\n            firefoxArguments.push('--wait-for-browser');\n        }\n        const { devtools = false, headless = !devtools, args = [], userDataDir = null, } = options;\n        if (userDataDir) {\n            firefoxArguments.push('--profile');\n            firefoxArguments.push(userDataDir);\n        }\n        if (headless)\n            firefoxArguments.push('--headless');\n        if (devtools)\n            firefoxArguments.push('--devtools');\n        if (args.every((arg) => arg.startsWith('-')))\n            firefoxArguments.push('about:blank');\n        firefoxArguments.push(...args);\n        return firefoxArguments;\n    }\n    async _createProfile(extraPrefs) {\n        const profilePath = await mkdtempAsync(path.join(os.tmpdir(), 'puppeteer_dev_firefox_profile-'));\n        const prefsJS = [];\n        const userJS = [];\n        const server = 'dummy.test';\n        const defaultPreferences = {\n            // Make sure Shield doesn't hit the network.\n            'app.normandy.api_url': '',\n            // Disable Firefox old build background check\n            'app.update.checkInstallTime': false,\n            // Disable automatically upgrading Firefox\n            'app.update.disabledForTesting': true,\n            // Increase the APZ content response timeout to 1 minute\n            'apz.content_response_timeout': 60000,\n            // Prevent various error message on the console\n            // jest-puppeteer asserts that no error message is emitted by the console\n            'browser.contentblocking.features.standard': '-tp,tpPrivate,cookieBehavior0,-cm,-fp',\n            // Enable the dump function: which sends messages to the system\n            // console\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n            'browser.dom.window.dump.enabled': true,\n            // Disable topstories\n            'browser.newtabpage.activity-stream.feeds.system.topstories': false,\n            // Always display a blank page\n            'browser.newtabpage.enabled': false,\n            // Background thumbnails in particular cause grief: and disabling\n            // thumbnails in general cannot hurt\n            'browser.pagethumbnails.capturing_disabled': true,\n            // Disable safebrowsing components.\n            'browser.safebrowsing.blockedURIs.enabled': false,\n            'browser.safebrowsing.downloads.enabled': false,\n            'browser.safebrowsing.malware.enabled': false,\n            'browser.safebrowsing.passwords.enabled': false,\n            'browser.safebrowsing.phishing.enabled': false,\n            // Disable updates to search engines.\n            'browser.search.update': false,\n            // Do not restore the last open set of tabs if the browser has crashed\n            'browser.sessionstore.resume_from_crash': false,\n            // Skip check for default browser on startup\n            'browser.shell.checkDefaultBrowser': false,\n            // Disable newtabpage\n            'browser.startup.homepage': 'about:blank',\n            // Do not redirect user when a milstone upgrade of Firefox is detected\n            'browser.startup.homepage_override.mstone': 'ignore',\n            // Start with a blank page about:blank\n            'browser.startup.page': 0,\n            // Do not allow background tabs to be zombified on Android: otherwise for\n            // tests that open additional tabs: the test harness tab itself might get\n            // unloaded\n            'browser.tabs.disableBackgroundZombification': false,\n            // Do not warn when closing all other open tabs\n            'browser.tabs.warnOnCloseOtherTabs': false,\n            // Do not warn when multiple tabs will be opened\n            'browser.tabs.warnOnOpen': false,\n            // Disable the UI tour.\n            'browser.uitour.enabled': false,\n            // Turn off search suggestions in the location bar so as not to trigger\n            // network connections.\n            'browser.urlbar.suggest.searches': false,\n            // Disable first run splash page on Windows 10\n            'browser.usedOnWindows10.introURL': '',\n            // Do not warn on quitting Firefox\n            'browser.warnOnQuit': false,\n            // Defensively disable data reporting systems\n            'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n            'datareporting.healthreport.logging.consoleEnabled': false,\n            'datareporting.healthreport.service.enabled': false,\n            'datareporting.healthreport.service.firstRun': false,\n            'datareporting.healthreport.uploadEnabled': false,\n            // Do not show datareporting policy notifications which can interfere with tests\n            'datareporting.policy.dataSubmissionEnabled': false,\n            'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n            // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n            // This doesn't affect Puppeteer but spams console (Bug 1424372)\n            'devtools.jsonview.enabled': false,\n            // Disable popup-blocker\n            'dom.disable_open_during_load': false,\n            // Enable the support for File object creation in the content process\n            // Required for |Page.setFileInputFiles| protocol method.\n            'dom.file.createInChild': true,\n            // Disable the ProcessHangMonitor\n            'dom.ipc.reportProcessHangs': false,\n            // Disable slow script dialogues\n            'dom.max_chrome_script_run_time': 0,\n            'dom.max_script_run_time': 0,\n            // Only load extensions from the application and user profile\n            // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n            'extensions.autoDisableScopes': 0,\n            'extensions.enabledScopes': 5,\n            // Disable metadata caching for installed add-ons by default\n            'extensions.getAddons.cache.enabled': false,\n            // Disable installing any distribution extensions or add-ons.\n            'extensions.installDistroAddons': false,\n            // Disabled screenshots extension\n            'extensions.screenshots.disabled': true,\n            // Turn off extension updates so they do not bother tests\n            'extensions.update.enabled': false,\n            // Turn off extension updates so they do not bother tests\n            'extensions.update.notifyUser': false,\n            // Make sure opening about:addons will not hit the network\n            'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n            // Force disable Fission until the Remote Agent is compatible\n            'fission.autostart': false,\n            // Allow the application to have focus even it runs in the background\n            'focusmanager.testmode': true,\n            // Disable useragent updates\n            'general.useragent.updates.enabled': false,\n            // Always use network provider for geolocation tests so we bypass the\n            // macOS dialog raised by the corelocation provider\n            'geo.provider.testing': true,\n            // Do not scan Wifi\n            'geo.wifi.scan': false,\n            // No hang monitor\n            'hangmonitor.timeout': 0,\n            // Show chrome errors and warnings in the error console\n            'javascript.options.showInConsole': true,\n            // Disable download and usage of OpenH264: and Widevine plugins\n            'media.gmp-manager.updateEnabled': false,\n            // Prevent various error message on the console\n            // jest-puppeteer asserts that no error message is emitted by the console\n            'network.cookie.cookieBehavior': 0,\n            // Disable experimental feature that is only available in Nightly\n            'network.cookie.sameSite.laxByDefault': false,\n            // Do not prompt for temporary redirects\n            'network.http.prompt-temp-redirect': false,\n            // Disable speculative connections so they are not reported as leaking\n            // when they are hanging around\n            'network.http.speculative-parallel-limit': 0,\n            // Do not automatically switch between offline and online\n            'network.manage-offline-status': false,\n            // Make sure SNTP requests do not hit the network\n            'network.sntp.pools': server,\n            // Disable Flash.\n            'plugin.state.flash': 0,\n            'privacy.trackingprotection.enabled': false,\n            // Enable Remote Agent\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1544393\n            'remote.enabled': true,\n            // Don't do network connections for mitm priming\n            'security.certerrors.mitm.priming.enabled': false,\n            // Local documents have access to all other local documents,\n            // including directory listings\n            'security.fileuri.strict_origin_policy': false,\n            // Do not wait for the notification button security delay\n            'security.notification_enable_delay': 0,\n            // Ensure blocklist updates do not hit the network\n            'services.settings.server': `http://${server}/dummy/blocklist/`,\n            // Do not automatically fill sign-in forms with known usernames and\n            // passwords\n            'signon.autofillForms': false,\n            // Disable password capture, so that tests that include forms are not\n            // influenced by the presence of the persistent doorhanger notification\n            'signon.rememberSignons': false,\n            // Disable first-run welcome page\n            'startup.homepage_welcome_url': 'about:blank',\n            // Disable first-run welcome page\n            'startup.homepage_welcome_url.additional': '',\n            // Disable browser animations (tabs, fullscreen, sliding alerts)\n            'toolkit.cosmeticAnimations.enabled': false,\n            // Prevent starting into safe mode after application crashes\n            'toolkit.startup.max_resumed_crashes': -1,\n        };\n        Object.assign(defaultPreferences, extraPrefs);\n        for (const [key, value] of Object.entries(defaultPreferences))\n            userJS.push(`user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`);\n        await writeFileAsync(path.join(profilePath, 'user.js'), userJS.join('\\n'));\n        await writeFileAsync(path.join(profilePath, 'prefs.js'), prefsJS.join('\\n'));\n        return profilePath;\n    }\n}\nfunction resolveExecutablePath(launcher) {\n    let downloadPath;\n    // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n    if (!launcher._isPuppeteerCore) {\n        const executablePath = process.env.PUPPETEER_EXECUTABLE_PATH ||\n            process.env.npm_config_puppeteer_executable_path ||\n            process.env.npm_package_config_puppeteer_executable_path;\n        if (executablePath) {\n            const missingText = !fs.existsSync(executablePath)\n                ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' +\n                    executablePath\n                : null;\n            return { executablePath, missingText };\n        }\n        downloadPath =\n            process.env.PUPPETEER_DOWNLOAD_PATH ||\n                process.env.npm_config_puppeteer_download_path ||\n                process.env.npm_package_config_puppeteer_download_path;\n    }\n    const browserFetcher = new BrowserFetcher_js_1.BrowserFetcher(launcher._projectRoot, {\n        product: launcher.product,\n        path: downloadPath,\n    });\n    if (!launcher._isPuppeteerCore && launcher.product === 'chrome') {\n        const revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n        if (revision) {\n            const revisionInfo = browserFetcher.revisionInfo(revision);\n            const missingText = !revisionInfo.local\n                ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' +\n                    revisionInfo.executablePath\n                : null;\n            return { executablePath: revisionInfo.executablePath, missingText };\n        }\n    }\n    const revisionInfo = browserFetcher.revisionInfo(launcher._preferredRevision);\n    const missingText = !revisionInfo.local\n        ? `Could not find browser revision ${launcher._preferredRevision}. Run \"PUPPETEER_PRODUCT=firefox npm install\" or \"PUPPETEER_PRODUCT=firefox yarn install\" to download a supported Firefox browser binary.`\n        : null;\n    return { executablePath: revisionInfo.executablePath, missingText };\n}\n/**\n * @internal\n */\nfunction Launcher(projectRoot, preferredRevision, isPuppeteerCore, product) {\n    // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n    if (!product && !isPuppeteerCore)\n        product =\n            process.env.PUPPETEER_PRODUCT ||\n                process.env.npm_config_puppeteer_product ||\n                process.env.npm_package_config_puppeteer_product;\n    switch (product) {\n        case 'firefox':\n            return new FirefoxLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n        case 'chrome':\n        default:\n            if (typeof product !== 'undefined' && product !== 'chrome') {\n                /* The user gave us an incorrect product name\n                 * we'll default to launching Chrome, but log to the console\n                 * to let the user know (they've probably typoed).\n                 */\n                console.warn(`Warning: unknown product name ${product}. Falling back to chrome.`);\n            }\n            return new ChromeLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n    }\n}\nexports.default = Launcher;\n//# sourceMappingURL=Launcher.js.map"]},"metadata":{},"sourceType":"script"}