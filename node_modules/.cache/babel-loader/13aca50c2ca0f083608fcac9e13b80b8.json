{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/WaitList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WaitList({\n  waitlistMapped\n}) {\n  _s();\n\n  const [waitlistIndex, setWaitlistIndex] = useState(0); //get all unfulfilled waitings for a user\n\n  let waitingsUnfulfilled = user.waitings.filter(waiting => waiting.fulfilled !== true); //create an array of those books by comparing to saved books\n\n  for (let i = 0; i < waitingsUnfulfilled.length; i++) {\n    waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id));\n  }\n\n  if (waitingsMapped.length > 0) {\n    waitlistMapped = waitingsMapped.map(waiting => {\n      //create JSX of books\n      return /*#__PURE__*/_jsxDEV(BackEndBookCard, {\n        book: waiting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  function handleNextClick() {\n    if (waitlistIndex < waitlistMapped.length) {\n      if (waitlistMapped.length - waitlistIndex > 8) {\n        setWaitlistIndex(waitlistIndex + 8);\n      } else {\n        setWaitlistIndex(0);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userpage-book-display\",\n      children: /*#__PURE__*/_jsxDEV(Card.Group, {\n        itemsPerRow: 8,\n        children: waitlistMapped.slice(waitlistIndex, waitlistIndex + 8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"next-back-button\",\n      onClick: handleNextClick,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), waitlistIndex > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n      className: \"next-back-button\",\n      onClick: () => setWaitlistIndex(waitlistIndex - 8),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 34\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(WaitList, \"nO1a8Kz4Wau/bGgtJ5ykF4iTBLI=\");\n\n_c = WaitList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitList\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/WaitList.js"],"names":["React","useState","Card","Button","WaitList","waitlistMapped","waitlistIndex","setWaitlistIndex","waitingsUnfulfilled","user","waitings","filter","waiting","fulfilled","i","length","waitingsMapped","push","savedBooks","find","saved_book","id","book_id","map","handleNextClick","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;;;AAGA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAmC;AAAA;;AAC9C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,CAAD,CAAlD,CAD8C,CAG7C;;AACD,MAAIO,mBAAmB,GAAGC,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqBC,OAAO,IAAEA,OAAO,CAACC,SAAR,KAAoB,IAAlD,CAA1B,CAJ8C,CAK9C;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,mBAAmB,CAACO,MAAlC,EAAyCD,CAAC,EAA1C,EAA6C;AACzCE,IAAAA,cAAc,CAACC,IAAf,CAAoBC,UAAU,CAACC,IAAX,CAAgBC,UAAU,IAAIA,UAAU,CAACC,EAAX,KAAkBb,mBAAmB,CAACM,CAAD,CAAnB,CAAuBQ,OAAvE,CAApB;AACH;;AACD,MAAIN,cAAc,CAACD,MAAf,GAAwB,CAA5B,EAA8B;AAC1BV,IAAAA,cAAc,GAAGW,cAAc,CAACO,GAAf,CAAmBX,OAAO,IAAE;AAAE;AAC3C,0BAAQ,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFgB,CAAjB;AAGH;;AAID,WAASY,eAAT,GAA0B;AACtB,QAAIlB,aAAa,GAAGD,cAAc,CAACU,MAAnC,EAA0C;AACtC,UAAIV,cAAc,CAACU,MAAf,GAAwBT,aAAxB,GAAwC,CAA5C,EAA8C;AAC1CC,QAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AACH,OAFD,MAGI;AACJC,QAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACC;AACJ;AACJ;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,WAAW,EAAE,CAAzB;AAAA,kBACKF,cAAc,CAACoB,KAAf,CAAqBnB,aAArB,EAAoCA,aAAa,GAAC,CAAlD;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAsC,MAAA,OAAO,EAAEkB,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAOKlB,aAAa,GAAG,CAAhB,gBAAoB,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAsC,MAAA,OAAO,EAAE,MAAIC,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApB,GAAyH,IAP9H;AAAA,kBADJ;AAWH;;GAvCuBF,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\"\nimport { Card, Button } from 'semantic-ui-react'\n\n\nexport default function WaitList({waitlistMapped}){\n    const [waitlistIndex, setWaitlistIndex] = useState(0)\n\n     //get all unfulfilled waitings for a user\n    let waitingsUnfulfilled = user.waitings.filter(waiting=>waiting.fulfilled!==true)\n    //create an array of those books by comparing to saved books\n    for(let i=0;i<waitingsUnfulfilled.length;i++){\n        waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id))\n    } \n    if (waitingsMapped.length > 0){\n        waitlistMapped = waitingsMapped.map(waiting=>{ //create JSX of books\n            return (<BackEndBookCard book={waiting}/>)\n        })\n    }\n       \n\n\n    function handleNextClick(){\n        if (waitlistIndex < waitlistMapped.length){\n            if (waitlistMapped.length - waitlistIndex > 8){\n                setWaitlistIndex(waitlistIndex+8)\n            }\n            else{\n            setWaitlistIndex(0)\n            }\n        }\n    }\n    \n    return(\n        <>\n            <div className=\"userpage-book-display\">\n                <Card.Group itemsPerRow={8}>\n                    {waitlistMapped.slice(waitlistIndex, waitlistIndex+8)}  \n                </Card.Group>\n            </div>\n            <Button className=\"next-back-button\"  onClick={handleNextClick}>Next</Button>\n            {waitlistIndex > 0 ? <Button className=\"next-back-button\"  onClick={()=>setWaitlistIndex(waitlistIndex-8)}>Back</Button>: null}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}