{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport SponsorForm from './SponsorForm';\nimport ReviewForm from './ReviewForm';\nimport BookCard from '../BookIndex/BookCard';\nimport { Card, Button } from 'semantic-ui-react';\nimport ReactStars from 'react-stars';\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookPage({\n  setSavedBooks,\n  savedBooks,\n  user,\n  setUser,\n  reviewLeft,\n  setBooksFromSearch,\n  startIndex,\n  setStartIndex\n}) {\n  _s();\n\n  const [book, setBook] = useState({});\n  const [backEndBook, setBackEndBook] = useState(false);\n  const [waitlistRequest, setWaitlistRequest] = useState(false);\n  const [toggleSponsorForm, setToggleSponsorForm] = useState(false);\n  const [similarBooksFromSearch, setsimilarBooksFromSearch] = useState([]);\n  const params = useParams();\n  const [bookId, setBookId] = useState(0); // const [buyLink, setBuyLink] = useState('')\n\n  let waitingsMapped = null;\n  let waitingsFulfilledMapped = null;\n  let reviewsMapped = null;\n  let booksMapped = [];\n  let averageRating = 0;\n  let searchTerms = \"\";\n\n  function stripHtml(html) {\n    let tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  } // useEffect(()=>{\n  //     if (book.title){\n  //         let title = book.title.split(' ').join('+')\n  //         fetch(`http://localhost:3000/books/scrape/${title}`)\n  //         .then(response=>response.json())\n  //         .then(data=>console.log(data))\n  //     }\n  // },[book])\n\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => {\n      let foundBook = null;\n      foundBook = data.find(book => book.api_id === params.id);\n      setBook(foundBook);\n\n      if (foundBook) {\n        setBookId(foundBook.id);\n        setBackEndBook(true);\n      }\n\n      if (!foundBook) {\n        fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`).then(response => response.json()).then(data => {\n          let title = \"\";\n          let subtitle = \"\";\n          let authors = [\"\"];\n          let publisher = \"\";\n          let publishedDate = \"\";\n          let description = \"\";\n          let image_url = \"\";\n\n          if (data.volumeInfo.title) {\n            title = data.volumeInfo.title;\n          }\n\n          if (data.volumeInfo.authors) {\n            authors = data.volumeInfo.authors;\n          }\n\n          if (data.volumeInfo.subtitle) {\n            subtitle = data.volumeInfo.subtitle;\n          }\n\n          if (data.volumeInfo.publisher) {\n            publisher = data.volumeInfo.publisher;\n          }\n\n          if (data.volumeInfo.publishedDate) {\n            publishedDate = data.volumeInfo.publishedDate;\n          }\n\n          if (data.volumeInfo.description) {\n            description = data.volumeInfo.description;\n          }\n\n          if (data.volumeInfo.imageLinks) {\n            image_url = data.volumeInfo.imageLinks.thumbnail;\n          }\n\n          setBook({\n            title: title,\n            subtitle: subtitle,\n            authors: authors.join(\", \"),\n            publisher: publisher,\n            publishedDate: publishedDate,\n            description: stripHtml(description),\n            image_url: image_url,\n            api_id: data.id,\n            waitings: [],\n            reviews: []\n          });\n        });\n      }\n    });\n  }, [waitlistRequest, backEndBook, params.id]);\n  useEffect(() => {\n    if (book) {\n      if (book.title) {\n        searchTerms = book.title.split(\" \").pop();\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchTerms}&maxResults=3`).then(response => response.json()).then(data => {\n          setsimilarBooksFromSearch(data.items);\n        });\n      }\n    }\n  }, [book]);\n\n  function waitListRequestAndStoreInDBRequest() {\n    if (user) {\n      let confObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      };\n      fetch('http://localhost:3000/books', confObj).then(response => response.json()).then(data => {\n        setBook(data);\n        setBookId(data.id);\n        let bookIdea = data.id;\n        let confObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: user.id,\n            book_id: bookIdea,\n            fulfilled: false\n          })\n        };\n        fetch('http://localhost:3000/waitings', confObj).then(response => response.json()).then(data => {\n          setBackEndBook(true);\n          setWaitlistRequest(!waitlistRequest);\n\n          if (data.error) {\n            alert(`${data.error}`);\n          } else {\n            fetch(`http://localhost:3000/users/${user.id}`).then(response => response.json()).then(data => setUser(data));\n            fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => setSavedBooks(data));\n          }\n        });\n      });\n    } else {\n      alert('Please sign in to join a waitlist.');\n    }\n  }\n\n  if (similarBooksFromSearch.length > 0) {\n    booksMapped = similarBooksFromSearch.map(book => {\n      return /*#__PURE__*/_jsxDEV(BookCard, {\n        book: book\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  if (backEndBook === true && book) {\n    waitingsMapped = book.waitings.map(waiting => {\n      if (waiting.fulfilled !== true) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${waiting.user.id}`,\n            children: waiting.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 23\n        }, this);\n      }\n    });\n    waitingsFulfilledMapped = book.waitings.map(waiting => {\n      if (waiting.fulfilled === true) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${waiting.user.id}`,\n            children: waiting.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 23\n        }, this);\n      }\n    });\n    reviewsMapped = book.reviews.map(review => {\n      if (user) {\n        let reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n        averageRating = book.reviews.map(review => review.rating).reduce(reducer) / book.reviews.length;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"review\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${review.user.id}`,\n            children: review.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ReactStars, {\n            className: \"react-stars\",\n            count: 5,\n            value: review.rating,\n            size: 24,\n            color2: '#ffd700',\n            edit: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), review.text, review.user.id === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            id: review.id,\n            onClick: e => handleCommentDelete(e),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 55\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this);\n      } else {\n        let reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n        averageRating = book.reviews.map(review => review.rating).reduce(reducer) / book.reviews.length;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${review.user.id}`,\n            children: review.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ReactStars, {\n            className: \"react-stars\",\n            count: 5,\n            value: review.rating,\n            size: 24,\n            color2: '#ffd700',\n            edit: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), review.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  }\n\n  function handleCommentDelete(e) {\n    let reviewId = parseInt(e.target.id);\n    let confObj = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(`http://localhost:3000/reviews/${reviewId}`, confObj).then(data => setWaitlistRequest(!waitlistRequest));\n  }\n\n  function handleToggleRequest() {\n    if (user) {\n      setToggleSponsorForm(!toggleSponsorForm);\n    } else {\n      alert(\"Please log in to Sponsor\");\n    }\n  }\n\n  function seeMoreRequest() {\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchTerms}&maxResults=8&startIndex=${startIndex}`).then(response => response.json()).then(data => {\n      setsimilarBooksFromSearch(data.items);\n      history.push(`/bookindex`);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookpage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: book ? book.image_url : \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: book ? book.title : \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: book ? book.subtitle : \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), reviewsMapped ? /*#__PURE__*/_jsxDEV(ReactStars, {\n        className: \"react-stars\",\n        count: 5,\n        value: averageRating,\n        size: 24,\n        color2: '#ffd700',\n        edit: false,\n        color2: '#ffd700'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"by: \", book ? book.authors : \"N/A\", \" (\", book ? book.publishedDate : \"N/A\", \") \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Publishing House: \", book ? book.publisher : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", book ? book.description : \"N/A\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), book ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reviews\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), backEndBook && reviewsMapped.length > 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [\" \", reviewsMapped, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this) : \"No one has reviewed this book yet. Be the first!\", /*#__PURE__*/_jsxDEV(ReviewForm, {\n          user: user,\n          book: book,\n          waitlistRequest: waitlistRequest,\n          setWaitlistRequest: setWaitlistRequest,\n          backEndBook: backEndBook,\n          setBackEndBook: setBackEndBook,\n          setSavedBooks: setSavedBooks,\n          waitListRequestAndStoreInDBRequest: waitListRequestAndStoreInDBRequest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookpage-sponsor-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Users who have received this book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), backEndBook && waitingsFulfilledMapped.length > 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [\" \", waitingsFulfilledMapped, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 74\n        }, this) : \"No one has received this book yet. Join the waitlist to be the first!\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleRequest,\n          children: \" Sponsor this Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this), toggleSponsorForm ? /*#__PURE__*/_jsxDEV(SponsorForm, {\n          waitingsMapped: waitingsMapped,\n          book: book,\n          user: user,\n          setUser: setUser,\n          waitlistRequest: waitlistRequest,\n          setWaitlistRequest: setWaitlistRequest,\n          setBackEndBook: setBackEndBook,\n          backEndBook: backEndBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookpage-waiting-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waitlist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [backEndBook && waitingsMapped.length > 0 ? waitingsMapped : \"No one is currently waiting for this book. Be the first!\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: waitListRequestAndStoreInDBRequest,\n          children: \"Jump on the Waitlist for this book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"similar-books\",\n      children: [similarBooksFromSearch.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Group, {\n        itemsPerRow: 3,\n        children: booksMapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        onClick: seeMoreRequest,\n        children: \"See More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookPage, \"uGbHXNtcUbCLTFYJrMkeQhwFfJI=\", false, function () {\n  return [useParams];\n});\n\n_c = BookPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js"],"names":["useEffect","useState","useParams","Link","SponsorForm","ReviewForm","BookCard","Card","Button","ReactStars","Redirect","useHistory","BookPage","setSavedBooks","savedBooks","user","setUser","reviewLeft","setBooksFromSearch","startIndex","setStartIndex","book","setBook","backEndBook","setBackEndBook","waitlistRequest","setWaitlistRequest","toggleSponsorForm","setToggleSponsorForm","similarBooksFromSearch","setsimilarBooksFromSearch","params","bookId","setBookId","waitingsMapped","waitingsFulfilledMapped","reviewsMapped","booksMapped","averageRating","searchTerms","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","fetch","then","response","json","data","foundBook","find","api_id","id","title","subtitle","authors","publisher","publishedDate","description","image_url","volumeInfo","imageLinks","thumbnail","join","waitings","reviews","split","pop","items","waitListRequestAndStoreInDBRequest","confObj","method","headers","body","JSON","stringify","bookIdea","user_id","book_id","fulfilled","error","alert","length","map","waiting","username","review","reducer","accumulator","currentValue","rating","reduce","text","e","handleCommentDelete","reviewId","parseInt","target","handleToggleRequest","seeMoreRequest","history","push"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport SponsorForm from './SponsorForm'\nimport ReviewForm from './ReviewForm'\nimport BookCard from '../BookIndex/BookCard'\nimport { Card, Button } from 'semantic-ui-react'\nimport ReactStars from 'react-stars'\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nexport default function BookPage({setSavedBooks, savedBooks, user, setUser, reviewLeft, setBooksFromSearch, startIndex, setStartIndex}){\n \n    const [book, setBook] = useState ({})\n    const [backEndBook, setBackEndBook] = useState(false)\n    const [waitlistRequest, setWaitlistRequest] = useState(false)\n    const [toggleSponsorForm, setToggleSponsorForm] = useState(false)\n    const [similarBooksFromSearch, setsimilarBooksFromSearch] = useState([])\n    const params = useParams()\n    const [bookId, setBookId] = useState(0)\n    // const [buyLink, setBuyLink] = useState('')\n\n    let waitingsMapped = null\n    let waitingsFulfilledMapped = null\n    let reviewsMapped = null\n    let booksMapped = []\n    let averageRating = 0\n    let searchTerms = \"\"\n    \n    \n    function stripHtml(html){\n        let tmp = document.createElement(\"DIV\");\n        tmp.innerHTML = html;\n        return tmp.textContent || tmp.innerText || \"\";\n    }\n\n    // useEffect(()=>{\n    //     if (book.title){\n    //         let title = book.title.split(' ').join('+')\n    //         fetch(`http://localhost:3000/books/scrape/${title}`)\n    //         .then(response=>response.json())\n    //         .then(data=>console.log(data))\n    //     }\n\n    // },[book])\n\n    useEffect(()=>{\n        fetch(`http://localhost:3000/books`)\n        .then(response=>response.json())\n        .then(data=>{\n\n            let foundBook = null\n            foundBook = data.find(book=>book.api_id===params.id)\n            setBook(foundBook)\n\n            if (foundBook){\n                setBookId (foundBook.id)\n                setBackEndBook(true)\n            }\n            if (!foundBook){\n                fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`)\n                .then(response => response.json())\n                .then(data=>{\n                    let title = \"\"\n                    let subtitle = \"\"\n                    let authors = [\"\"]\n                    let publisher = \"\"\n                    let publishedDate = \"\"\n                    let description = \"\"\n                    let image_url = \"\"\n                    if (data.volumeInfo.title){\n                        title = data.volumeInfo.title\n                    }\n                    if (data.volumeInfo.authors){\n                        authors = data.volumeInfo.authors\n                    }\n                    if (data.volumeInfo.subtitle){\n                        subtitle = data.volumeInfo.subtitle\n                    }\n                    if (data.volumeInfo.publisher){\n                        publisher = data.volumeInfo.publisher\n                    }\n                    if (data.volumeInfo.publishedDate){\n                        publishedDate = data.volumeInfo.publishedDate\n                    }\n                    if (data.volumeInfo.description){\n                        description = data.volumeInfo.description\n                    }\n                    if (data.volumeInfo.imageLinks){\n                        image_url = data.volumeInfo.imageLinks.thumbnail\n                    }\n                    setBook({\n                        title: title, \n                        subtitle: subtitle, \n                        authors: authors.join(\", \"), \n                        publisher: publisher, \n                        publishedDate: publishedDate, \n                        description: stripHtml(description),\n                        image_url: image_url, \n                        api_id: data.id, \n                        waitings: [],\n                        reviews: []\n                    })\n                })\n            }\n        })\n    },[waitlistRequest, backEndBook, params.id])\n\n    useEffect(()=>{\n        if (book){\n            if (book.title){\n                searchTerms = book.title.split(\" \").pop()\n                fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchTerms}&maxResults=3`)\n                .then(response=>response.json())\n                .then(data=>{\n                    setsimilarBooksFromSearch(data.items)\n                })\n            }\n        }\n    },[book])\n\n   \n\n    function waitListRequestAndStoreInDBRequest (){\n        if (user){\n            let confObj = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(book),\n            }\n            fetch('http://localhost:3000/books', confObj)\n            .then(response=>response.json())\n            .then(data=>{\n                setBook(data)\n                setBookId(data.id)\n                let bookIdea = data.id\n                let confObj = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({user_id: user.id, book_id: bookIdea, fulfilled: false}),\n                }\n                fetch('http://localhost:3000/waitings', confObj)\n                .then(response=>response.json())\n                .then(data=>{                  \n                    setBackEndBook(true)\n                    setWaitlistRequest(!waitlistRequest)\n                    if (data.error){\n                        alert(`${data.error}`)\n                    }\n                    else{\n                        fetch(`http://localhost:3000/users/${user.id}`)\n                        .then(response=>response.json())\n                        .then(data=>setUser(data))\n                \n                        fetch(`http://localhost:3000/books`)\n                        .then(response=>response.json())\n                        .then(data=>setSavedBooks(data))\n\n                    }\n                })\n            })\n        }\n\n        else{\n            alert('Please sign in to join a waitlist.')\n        }\n    }\n\n    if (similarBooksFromSearch.length > 0){\n         booksMapped = similarBooksFromSearch.map(book=>{\n            return(\n                <BookCard book ={book}/>\n            )\n        })\n    }\n    \n\n    if (backEndBook === true && book){\n         \n        waitingsMapped = book.waitings.map(waiting=>{\n            if (waiting.fulfilled !== true){\n                return<li><Link to={`/otheruserpage/${waiting.user.id}`}>{waiting.user.username}</Link></li>\n            }\n        })\n        \n        waitingsFulfilledMapped = book.waitings.map(waiting=>{\n            if (waiting.fulfilled === true){\n                return<li><Link to={`/otheruserpage/${waiting.user.id}`}>{waiting.user.username}</Link></li>\n            }\n        })\n\n        reviewsMapped = book.reviews.map(review=>{  \n            if (user){\n                let reducer = (accumulator, currentValue) => accumulator + currentValue;\n                averageRating = book.reviews.map(review=>review.rating).reduce(reducer)/book.reviews.length\n                return(\n                    <li className=\"review\">\n                        <Link to={`/otheruserpage/${review.user.id}`}>{review.user.username}</Link> \n                        <ReactStars\n                            className=\"react-stars\"\n                            count={5}\n                            value={review.rating}\n                            size={24}\n                            color2={'#ffd700'}\n                            edit={false}\n                        />\n                        {review.text} \n                        {review.user.id === user.id ? <button id={review.id} onClick={e=>handleCommentDelete(e)}>X</button> :null}\n                    </li>\n                )   \n            }\n            else{\n                let reducer = (accumulator, currentValue) => accumulator + currentValue;\n                averageRating = book.reviews.map(review=>review.rating).reduce(reducer)/book.reviews.length\n                return(\n                    <li>\n                        <Link to={`/otheruserpage/${review.user.id}`}>{review.user.username}</Link> \n                        <ReactStars\n                            className=\"react-stars\"\n                            count={5}\n                            value={review.rating}\n                            size={24}\n                            color2={'#ffd700'}\n                            edit={false}\n                        />\n                        {review.text} \n                    </li>\n                )   \n            }\n        })\n    }\n\n    function handleCommentDelete(e){\n        let reviewId = parseInt(e.target.id)\n        let confObj = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n        fetch(`http://localhost:3000/reviews/${reviewId}`, confObj)\n        .then(data=>setWaitlistRequest(!waitlistRequest))\n\n    }\n\n    function handleToggleRequest(){\n        if (user){\n        setToggleSponsorForm(!toggleSponsorForm)\n        }\n        else{\n        alert(\"Please log in to Sponsor\")\n        }\n    }\n\n    function seeMoreRequest(){\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchTerms}&maxResults=8&startIndex=${startIndex}`)\n        .then(response=>response.json())\n        .then(data=>{\n            setsimilarBooksFromSearch(data.items)\n            history.push(`/bookindex`)\n        })\n    }\n\n    \n    return(\n        <div className=\"bookpage\">\n            <div className=\"book-info\">\n                <img src={ book ? book.image_url: \"N/A\" }></img>\n                {/* <button onClick={handleScrapeRequest}>Scrape</button> */}\n\n                <h2>{book? book.title: \"N/A\"}</h2>\n                <h3>{book? book.subtitle: \"N/A\"}</h3>\n                {reviewsMapped ? \n                    <ReactStars\n                        className=\"react-stars\"\n                        count={5}\n                        value={averageRating}\n                        size={24}\n                        color2={'#ffd700'}\n                        edit={false}\n                        color2={'#ffd700'}\n                    />\n                : null}\n                <p>by: {book? book.authors: \"N/A\"} ({book? book.publishedDate: \"N/A\"}) </p>\n                <p>Publishing House: {book? book.publisher: \"N/A\"}</p>\n                <p>Description: {book? book.description: \"N/A\"} </p>\n            </div>\n            \n\n            \n            { book ?\n            <>\n                <div className=\"reviews\">\n                    <h3>Reviews</h3>\n                    {backEndBook && reviewsMapped.length > 0 ? \n                        <ol > {reviewsMapped} </ol> \n                    : \"No one has reviewed this book yet. Be the first!\"} \n                    <ReviewForm \n                    user={user} \n                    book={book} \n                    waitlistRequest={waitlistRequest} \n                    setWaitlistRequest={setWaitlistRequest}\n                    backEndBook={backEndBook}\n                    setBackEndBook={setBackEndBook}\n                    setSavedBooks={setSavedBooks}\n                    waitListRequestAndStoreInDBRequest={waitListRequestAndStoreInDBRequest}/>\n                </div>\n\n                <div className=\"bookpage-sponsor-list\">\n                    <p>Users who have received this book</p>\n                    {backEndBook && waitingsFulfilledMapped.length > 0 ? <ol> {waitingsFulfilledMapped}  </ol>: \"No one has received this book yet. Join the waitlist to be the first!\"}\n                        <button onClick={handleToggleRequest}> Sponsor this Book</button>\n                        {toggleSponsorForm ? \n                            <SponsorForm \n                                waitingsMapped={waitingsMapped} \n                                book={book} \n                                user={user}\n                                setUser={setUser}\n                                waitlistRequest={waitlistRequest}\n                                setWaitlistRequest={setWaitlistRequest}\n                                setBackEndBook={setBackEndBook}\n                                backEndBook={backEndBook}\n                            /> \n                        : null}\n                </div>\n                <div className= \"bookpage-waiting-list\">\n                    <p>Waitlist:</p>\n                    <ol>{ backEndBook && waitingsMapped.length > 0 ? waitingsMapped: \"No one is currently waiting for this book. Be the first!\"} </ol>\n                    <button onClick={waitListRequestAndStoreInDBRequest}>Jump on the Waitlist for this book</button>\n                </div>\n                \n                </>\n            : null\n            }\n            <div className = \"similar-books\">\n                {similarBooksFromSearch.length > 0 ? \n                    <Card.Group itemsPerRow={3}>\n                        {booksMapped}  \n                    </Card.Group>\n                : null}\n                <Button onClick={seeMoreRequest}>See More</Button>\n            </div>\n        </div>\n    )\n\n}\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}