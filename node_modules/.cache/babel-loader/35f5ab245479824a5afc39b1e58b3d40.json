{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/Mod5/frontend-bookfund/src/components/pages/UserPage/WaitList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button } from 'semantic-ui-react';\nimport BackEndBookCard from '../BookIndex/BackEndBookCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WaitList({\n  waitlistMapped,\n  user,\n  setUser,\n  savedBooks\n}) {\n  _s();\n\n  const [waitlistIndex, setWaitlistIndex] = useState(0);\n  let waitingsMapped = [];\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/users/${user.id}`).then(response => response.json()).then(data => setUser(data));\n  }, []); //get all unfulfilled waitings for a user\n\n  let waitingsUnfulfilled = user.waitings.filter(waiting => waiting.fulfilled !== true);\n\n  for (let i = 0; i < waitingsUnfulfilled.length; i++) {\n    waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id));\n  }\n\n  if (waitingsMapped.length > 0) {\n    waitlistMapped = waitingsMapped.map(waiting => {\n      //create JSX of books\n      return /*#__PURE__*/_jsxDEV(BackEndBookCard, {\n        book: waiting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  function handleNextClick() {\n    if (waitlistIndex < waitlistMapped.length) {\n      if (waitlistMapped.length - waitlistIndex > 8) {\n        setWaitlistIndex(waitlistIndex + 8);\n      } else {\n        setWaitlistIndex(0);\n      }\n    }\n  }\n\n  if (waitingsMapped.length > 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userpage-book-display\",\n        children: /*#__PURE__*/_jsxDEV(Card.Group, {\n          itemsPerRow: 8,\n          children: waitlistMapped.slice(waitlistIndex, waitlistIndex + 8)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"next-back-button\",\n        onClick: handleNextClick,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), waitlistIndex > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"next-back-button\",\n        onClick: () => setWaitlistIndex(waitlistIndex - 8),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 34\n      }, this) : null]\n    }, void 0, true);\n  } else {\n    return null;\n  }\n}\n\n_s(WaitList, \"vrkq0uTBGw4NZhZ3qmLIa/CxsB4=\");\n\n_c = WaitList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitList\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/Mod5/frontend-bookfund/src/components/pages/UserPage/WaitList.js"],"names":["React","useState","useEffect","Card","Button","BackEndBookCard","WaitList","waitlistMapped","user","setUser","savedBooks","waitlistIndex","setWaitlistIndex","waitingsMapped","fetch","process","env","REACT_APP_API_BASE_URL","id","then","response","json","data","waitingsUnfulfilled","waitings","filter","waiting","fulfilled","i","length","push","find","saved_book","book_id","map","handleNextClick","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Card, Button } from 'semantic-ui-react'\nimport BackEndBookCard from '../BookIndex/BackEndBookCard'\n\nexport default function WaitList({waitlistMapped, user, setUser, savedBooks}){\n    const [waitlistIndex, setWaitlistIndex] = useState(0)\n\n    let waitingsMapped = []\n\n\n    useEffect(()=>{\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/users/${user.id}`)\n        .then(response=>response.json())\n        .then(data=>setUser(data))\n    },[])\n\n\n     //get all unfulfilled waitings for a user\n    let waitingsUnfulfilled = user.waitings.filter(waiting=>waiting.fulfilled!==true)\n    for(let i=0;i<waitingsUnfulfilled.length;i++){\n        waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id))\n    } \n    if (waitingsMapped.length > 0){\n        waitlistMapped = waitingsMapped.map(waiting=>{ //create JSX of books\n            return (<BackEndBookCard book={waiting}/>)\n        })\n    }       \n\n    function handleNextClick(){\n        if (waitlistIndex < waitlistMapped.length){\n            if (waitlistMapped.length - waitlistIndex > 8){\n                setWaitlistIndex(waitlistIndex+8)\n            }\n            else{\n            setWaitlistIndex(0)\n            }\n        }\n    }\n    if (waitingsMapped.length > 0 ){\n        return(\n        <>\n            <div className=\"userpage-book-display\">\n                <Card.Group itemsPerRow={8}>\n                    {waitlistMapped.slice(waitlistIndex, waitlistIndex+8)}  \n                </Card.Group>\n            </div>\n            <Button className=\"next-back-button\"  onClick={handleNextClick}>Next</Button>\n            {waitlistIndex > 0 ? <Button className=\"next-back-button\"  onClick={()=>setWaitlistIndex(waitlistIndex-8)}>Back</Button>: null}\n        </>\n        ) \n    }    \n    else{\n        return null\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}