{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LifecycleWatcher = void 0;\n\nconst assert_js_1 = require(\"./assert.js\");\n\nconst helper_js_1 = require(\"./helper.js\");\n\nconst Errors_js_1 = require(\"./Errors.js\");\n\nconst FrameManager_js_1 = require(\"./FrameManager.js\");\n\nconst NetworkManager_js_1 = require(\"./NetworkManager.js\");\n\nconst Connection_js_1 = require(\"./Connection.js\");\n\nconst puppeteerToProtocolLifecycle = new Map([['load', 'load'], ['domcontentloaded', 'DOMContentLoaded'], ['networkidle0', 'networkIdle'], ['networkidle2', 'networkAlmostIdle']]);\n/**\n * @internal\n */\n\nclass LifecycleWatcher {\n  constructor(frameManager, frame, waitUntil, timeout) {\n    if (Array.isArray(waitUntil)) waitUntil = waitUntil.slice();else if (typeof waitUntil === 'string') waitUntil = [waitUntil];\n    this._expectedLifecycle = waitUntil.map(value => {\n      const protocolEvent = puppeteerToProtocolLifecycle.get(value);\n      assert_js_1.assert(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n      return protocolEvent;\n    });\n    this._frameManager = frameManager;\n    this._frame = frame;\n    this._initialLoaderId = frame._loaderId;\n    this._timeout = timeout;\n    this._navigationRequest = null;\n    this._eventListeners = [helper_js_1.helper.addEventListener(frameManager._client, Connection_js_1.CDPSessionEmittedEvents.Disconnected, () => this._terminate(new Error('Navigation failed because browser has disconnected!'))), helper_js_1.helper.addEventListener(this._frameManager, FrameManager_js_1.FrameManagerEmittedEvents.LifecycleEvent, this._checkLifecycleComplete.bind(this)), helper_js_1.helper.addEventListener(this._frameManager, FrameManager_js_1.FrameManagerEmittedEvents.FrameNavigatedWithinDocument, this._navigatedWithinDocument.bind(this)), helper_js_1.helper.addEventListener(this._frameManager, FrameManager_js_1.FrameManagerEmittedEvents.FrameDetached, this._onFrameDetached.bind(this)), helper_js_1.helper.addEventListener(this._frameManager.networkManager(), NetworkManager_js_1.NetworkManagerEmittedEvents.Request, this._onRequest.bind(this))];\n    this._sameDocumentNavigationPromise = new Promise(fulfill => {\n      this._sameDocumentNavigationCompleteCallback = fulfill;\n    });\n    this._lifecyclePromise = new Promise(fulfill => {\n      this._lifecycleCallback = fulfill;\n    });\n    this._newDocumentNavigationPromise = new Promise(fulfill => {\n      this._newDocumentNavigationCompleteCallback = fulfill;\n    });\n    this._timeoutPromise = this._createTimeoutPromise();\n    this._terminationPromise = new Promise(fulfill => {\n      this._terminationCallback = fulfill;\n    });\n\n    this._checkLifecycleComplete();\n  }\n\n  _onRequest(request) {\n    if (request.frame() !== this._frame || !request.isNavigationRequest()) return;\n    this._navigationRequest = request;\n  }\n\n  _onFrameDetached(frame) {\n    if (this._frame === frame) {\n      this._terminationCallback.call(null, new Error('Navigating frame was detached'));\n\n      return;\n    }\n\n    this._checkLifecycleComplete();\n  }\n\n  navigationResponse() {\n    return this._navigationRequest ? this._navigationRequest.response() : null;\n  }\n\n  _terminate(error) {\n    this._terminationCallback.call(null, error);\n  }\n\n  sameDocumentNavigationPromise() {\n    return this._sameDocumentNavigationPromise;\n  }\n\n  newDocumentNavigationPromise() {\n    return this._newDocumentNavigationPromise;\n  }\n\n  lifecyclePromise() {\n    return this._lifecyclePromise;\n  }\n\n  timeoutOrTerminationPromise() {\n    return Promise.race([this._timeoutPromise, this._terminationPromise]);\n  }\n\n  _createTimeoutPromise() {\n    if (!this._timeout) return new Promise(() => {});\n    const errorMessage = 'Navigation timeout of ' + this._timeout + ' ms exceeded';\n    return new Promise(fulfill => this._maximumTimer = setTimeout(fulfill, this._timeout)).then(() => new Errors_js_1.TimeoutError(errorMessage));\n  }\n\n  _navigatedWithinDocument(frame) {\n    if (frame !== this._frame) return;\n    this._hasSameDocumentNavigation = true;\n\n    this._checkLifecycleComplete();\n  }\n\n  _checkLifecycleComplete() {\n    // We expect navigation to commit.\n    if (!checkLifecycle(this._frame, this._expectedLifecycle)) return;\n\n    this._lifecycleCallback();\n\n    if (this._frame._loaderId === this._initialLoaderId && !this._hasSameDocumentNavigation) return;\n    if (this._hasSameDocumentNavigation) this._sameDocumentNavigationCompleteCallback();\n    if (this._frame._loaderId !== this._initialLoaderId) this._newDocumentNavigationCompleteCallback();\n    /**\n     * @param {!Frame} frame\n     * @param {!Array<string>} expectedLifecycle\n     * @returns {boolean}\n     */\n\n    function checkLifecycle(frame, expectedLifecycle) {\n      for (const event of expectedLifecycle) {\n        if (!frame._lifecycleEvents.has(event)) return false;\n      }\n\n      for (const child of frame.childFrames()) {\n        if (!checkLifecycle(child, expectedLifecycle)) return false;\n      }\n\n      return true;\n    }\n  }\n\n  dispose() {\n    helper_js_1.helper.removeEventListeners(this._eventListeners);\n    clearTimeout(this._maximumTimer);\n  }\n\n}\n\nexports.LifecycleWatcher = LifecycleWatcher;","map":{"version":3,"sources":["../../../../src/common/LifecycleWatcher.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LifecycleWatcher = void 0;\nconst assert_js_1 = require(\"./assert.js\");\nconst helper_js_1 = require(\"./helper.js\");\nconst Errors_js_1 = require(\"./Errors.js\");\nconst FrameManager_js_1 = require(\"./FrameManager.js\");\nconst NetworkManager_js_1 = require(\"./NetworkManager.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst puppeteerToProtocolLifecycle = new Map([\n    ['load', 'load'],\n    ['domcontentloaded', 'DOMContentLoaded'],\n    ['networkidle0', 'networkIdle'],\n    ['networkidle2', 'networkAlmostIdle'],\n]);\n/**\n * @internal\n */\nclass LifecycleWatcher {\n    constructor(frameManager, frame, waitUntil, timeout) {\n        if (Array.isArray(waitUntil))\n            waitUntil = waitUntil.slice();\n        else if (typeof waitUntil === 'string')\n            waitUntil = [waitUntil];\n        this._expectedLifecycle = waitUntil.map((value) => {\n            const protocolEvent = puppeteerToProtocolLifecycle.get(value);\n            assert_js_1.assert(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n            return protocolEvent;\n        });\n        this._frameManager = frameManager;\n        this._frame = frame;\n        this._initialLoaderId = frame._loaderId;\n        this._timeout = timeout;\n        this._navigationRequest = null;\n        this._eventListeners = [\n            helper_js_1.helper.addEventListener(frameManager._client, Connection_js_1.CDPSessionEmittedEvents.Disconnected, () => this._terminate(new Error('Navigation failed because browser has disconnected!'))),\n            helper_js_1.helper.addEventListener(this._frameManager, FrameManager_js_1.FrameManagerEmittedEvents.LifecycleEvent, this._checkLifecycleComplete.bind(this)),\n            helper_js_1.helper.addEventListener(this._frameManager, FrameManager_js_1.FrameManagerEmittedEvents.FrameNavigatedWithinDocument, this._navigatedWithinDocument.bind(this)),\n            helper_js_1.helper.addEventListener(this._frameManager, FrameManager_js_1.FrameManagerEmittedEvents.FrameDetached, this._onFrameDetached.bind(this)),\n            helper_js_1.helper.addEventListener(this._frameManager.networkManager(), NetworkManager_js_1.NetworkManagerEmittedEvents.Request, this._onRequest.bind(this)),\n        ];\n        this._sameDocumentNavigationPromise = new Promise((fulfill) => {\n            this._sameDocumentNavigationCompleteCallback = fulfill;\n        });\n        this._lifecyclePromise = new Promise((fulfill) => {\n            this._lifecycleCallback = fulfill;\n        });\n        this._newDocumentNavigationPromise = new Promise((fulfill) => {\n            this._newDocumentNavigationCompleteCallback = fulfill;\n        });\n        this._timeoutPromise = this._createTimeoutPromise();\n        this._terminationPromise = new Promise((fulfill) => {\n            this._terminationCallback = fulfill;\n        });\n        this._checkLifecycleComplete();\n    }\n    _onRequest(request) {\n        if (request.frame() !== this._frame || !request.isNavigationRequest())\n            return;\n        this._navigationRequest = request;\n    }\n    _onFrameDetached(frame) {\n        if (this._frame === frame) {\n            this._terminationCallback.call(null, new Error('Navigating frame was detached'));\n            return;\n        }\n        this._checkLifecycleComplete();\n    }\n    navigationResponse() {\n        return this._navigationRequest ? this._navigationRequest.response() : null;\n    }\n    _terminate(error) {\n        this._terminationCallback.call(null, error);\n    }\n    sameDocumentNavigationPromise() {\n        return this._sameDocumentNavigationPromise;\n    }\n    newDocumentNavigationPromise() {\n        return this._newDocumentNavigationPromise;\n    }\n    lifecyclePromise() {\n        return this._lifecyclePromise;\n    }\n    timeoutOrTerminationPromise() {\n        return Promise.race([this._timeoutPromise, this._terminationPromise]);\n    }\n    _createTimeoutPromise() {\n        if (!this._timeout)\n            return new Promise(() => { });\n        const errorMessage = 'Navigation timeout of ' + this._timeout + ' ms exceeded';\n        return new Promise((fulfill) => (this._maximumTimer = setTimeout(fulfill, this._timeout))).then(() => new Errors_js_1.TimeoutError(errorMessage));\n    }\n    _navigatedWithinDocument(frame) {\n        if (frame !== this._frame)\n            return;\n        this._hasSameDocumentNavigation = true;\n        this._checkLifecycleComplete();\n    }\n    _checkLifecycleComplete() {\n        // We expect navigation to commit.\n        if (!checkLifecycle(this._frame, this._expectedLifecycle))\n            return;\n        this._lifecycleCallback();\n        if (this._frame._loaderId === this._initialLoaderId &&\n            !this._hasSameDocumentNavigation)\n            return;\n        if (this._hasSameDocumentNavigation)\n            this._sameDocumentNavigationCompleteCallback();\n        if (this._frame._loaderId !== this._initialLoaderId)\n            this._newDocumentNavigationCompleteCallback();\n        /**\n         * @param {!Frame} frame\n         * @param {!Array<string>} expectedLifecycle\n         * @returns {boolean}\n         */\n        function checkLifecycle(frame, expectedLifecycle) {\n            for (const event of expectedLifecycle) {\n                if (!frame._lifecycleEvents.has(event))\n                    return false;\n            }\n            for (const child of frame.childFrames()) {\n                if (!checkLifecycle(child, expectedLifecycle))\n                    return false;\n            }\n            return true;\n        }\n    }\n    dispose() {\n        helper_js_1.helper.removeEventListeners(this._eventListeners);\n        clearTimeout(this._maximumTimer);\n    }\n}\nexports.LifecycleWatcher = LifecycleWatcher;\n//# sourceMappingURL=LifecycleWatcher.js.map"]},"metadata":{},"sourceType":"script"}