{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/UserPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Timer from './Timer';\nimport BackEndBookCard from '../BookIndex/BackEndBookCard';\nimport { Card } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserPage({\n  user,\n  savedBooks,\n  timeLeft,\n  setTimeLeft,\n  reviewLeft,\n  setReviewLeft\n}) {\n  let waitingsMapped = [];\n  let waitingsFulFilledMapped = [];\n  let mostRecent = {};\n  let foundBook = null;\n  let foundReview = null;\n  let receivedMapped = null;\n  let waitlistMapped = null;\n  console.log('hello');\n\n  if (user) {\n    let waitingsUnfulfilled = user.waitings.filter(waiting => waiting.fulfilled !== true); //get all unfulfilled waitings for a user\n\n    for (let i = 0; i < waitingsUnfulfilled.length; i++) {\n      waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id)); //create an array of those books by comparing to saved books\n    }\n\n    if (waitingsMapped.length > 0) {\n      waitlistMapped = waitingsMapped.map(waiting => {\n        //create JSX of books\n        return /*#__PURE__*/_jsxDEV(BackEndBookCard, {\n          book: waiting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this);\n      });\n    }\n\n    let waitingsFulfilled = user.waitings.filter(waiting => waiting.fulfilled === true); //get all fulfilled waitings for a user\n\n    for (let i = 0; i < waitingsFulfilled.length; i++) {\n      waitingsFulFilledMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsFulfilled[i].book_id)); //create an array of those books by comparing to saved books\n    }\n\n    if (savedBooks.length > 0) {\n      receivedMapped = waitingsFulFilledMapped.map(waiting => {\n        //create JSX of books\n        return /*#__PURE__*/_jsxDEV(BackEndBookCard, {\n          book: waiting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [waitingsFulfilled.length > 0 ? /*#__PURE__*/_jsxDEV(Timer, {\n        mostRecent: mostRecent,\n        timeLeft: timeLeft,\n        setTimeLeft: setTimeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this) : \"Looks like you're eligible for your next book!\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profile_pic ? user.profile_pic : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name:\", user.name ? user.name : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"email:\", user.email ? user.email : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"username:\", user.username ? user.username : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bio:\", user.bio ? user.bio : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), reviewLeft === false ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"please leave a review for: \", /*#__PURE__*/_jsxDEV(BackEndBookCard, {\n          book: foundBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 71\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"waitlist:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), waitingsMapped.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Group, {\n        itemsPerRow: 8,\n        children: waitlistMapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"received:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), waitingsFulFilledMapped.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Group, {\n        itemsPerRow: 8,\n        children: receivedMapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"sponsored list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/UserPage.js"],"names":["React","useState","useEffect","Link","Timer","BackEndBookCard","Card","UserPage","user","savedBooks","timeLeft","setTimeLeft","reviewLeft","setReviewLeft","waitingsMapped","waitingsFulFilledMapped","mostRecent","foundBook","foundReview","receivedMapped","waitlistMapped","console","log","waitingsUnfulfilled","waitings","filter","waiting","fulfilled","i","length","push","find","saved_book","id","book_id","map","waitingsFulfilled","profile_pic","name","email","username","bio"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport Timer from './Timer'\nimport BackEndBookCard from '../BookIndex/BackEndBookCard'\nimport { Card } from 'semantic-ui-react'\n\nexport default function UserPage({user, savedBooks, timeLeft, setTimeLeft, reviewLeft, setReviewLeft}){\n\n    let waitingsMapped = []\n    let waitingsFulFilledMapped = []\n    let mostRecent = {}\n    let foundBook = null\n    let foundReview = null\n    let receivedMapped = null\n    let waitlistMapped = null\n    \n    console.log('hello')\n    \n    if (user){ \n\n        let waitingsUnfulfilled = user.waitings.filter(waiting=>waiting.fulfilled!==true)//get all unfulfilled waitings for a user\n        for(let i=0;i<waitingsUnfulfilled.length;i++){\n            waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id))//create an array of those books by comparing to saved books\n        } \n        if (waitingsMapped.length > 0){\n            waitlistMapped = waitingsMapped.map(waiting=>{ //create JSX of books\n                return (<BackEndBookCard book={waiting}/>)\n            })\n        }\n        let waitingsFulfilled = user.waitings.filter(waiting=>waiting.fulfilled===true) //get all fulfilled waitings for a user\n        \n\n        for(let i=0;i<waitingsFulfilled.length;i++){\n            waitingsFulFilledMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsFulfilled[i].book_id)) //create an array of those books by comparing to saved books\n        } \n\n        if (savedBooks.length > 0){\n            receivedMapped = waitingsFulFilledMapped.map(waiting=>{ //create JSX of books\n                return (<BackEndBookCard book={waiting}/>)\n            })\n        }\n\n\n        return(\n            <div> \n            {waitingsFulfilled.length > 0 ?\n                <Timer \n                    mostRecent={mostRecent}\n                    timeLeft={timeLeft} \n                    setTimeLeft={setTimeLeft}\n                />\n            : \"Looks like you're eligible for your next book!\"}\n                <img src={user.profile_pic ? user.profile_pic : null}></img>\n                <p>name:{user.name ? user.name : null}</p>\n                <p>email:{user.email ? user.email : null}</p>\n                <p>username:{user.username ? user.username : null }</p>\n                <p>bio:{user.bio ? user.bio : null}</p>\n                {reviewLeft === false ? <p>please leave a review for: <BackEndBookCard book={foundBook}/> </p>: null}\n                <p>waitlist:</p>\n                {waitingsMapped.length>0 ? \n                    <Card.Group itemsPerRow={8}>\n                        {waitlistMapped}  \n                    </Card.Group>\n                :null}\n\n                <p>received:</p>\n                {waitingsFulFilledMapped.length > 0 ? \n                    <Card.Group itemsPerRow={8}>\n                        {receivedMapped}  \n                    </Card.Group>\n                :null}\n                <p>sponsored list</p>\n\n            </div>\n        )\n    }\n    else{\n        return null\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}