{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookPage({\n  setSavedBooks,\n  savedBooks,\n  user\n}) {\n  _s();\n\n  const [book, setBook] = useState(null);\n  const [waiters, setWaiters] = useState([]);\n  const params = useParams();\n  let foundBook = null;\n  let bookId = 0;\n\n  function stripHtml(html) {\n    let tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n\n  useEffect(() => {\n    foundBook = savedBooks.find(book => book.api_id === params.id);\n    setBook(foundBook);\n\n    if (!foundBook) {\n      fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`).then(response => response.json()).then(data => {\n        setBook({\n          title: data.volumeInfo.title,\n          subtitle: data.volumeInfo.subtitle,\n          authors: data.volumeInfo.authors.join(\", \"),\n          publisher: data.volumeInfo.publisher,\n          publishedDate: data.volumeInfo.publishedDate,\n          description: stripHtml(data.volumeInfo.description),\n          image_url: data.volumeInfo.imageLinks.thumbnail,\n          api_id: data.id\n        });\n      });\n    }\n  }, []);\n\n  function waitListRequestAndStoreInDBRequest() {\n    if (user) {\n      let confObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      };\n      fetch('http://localhost:3000/books', confObj).then(response => response.json()).then(data => {\n        setBook(data);\n        bookId = data.id;\n        let confObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: user.id,\n            book_id: bookId\n          })\n        };\n        fetch('http://localhost:3000/waitings', confObj);\n      });\n    } else {\n      alert('Please sign in to wait for a book');\n    }\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/waitings/`).then(response => response.json()).then(data => {\n      console.log(data);\n      setWaiters(data.select(waiting => waiting.book_id === bookId));\n      let waitersMapped = waiters.map(waiter => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: waiter.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 24\n        }, this);\n      });\n    });\n  }, [book]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: book ? book.image_url : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book ? book.title : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: book ? book.subtitle : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"by: \", book ? book.authors : \"N/A\", \" (\", book ? book.publishedDate : \"N/A\", \") \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Publishing House: \", book ? book.publisher : \"N/A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", book ? book.description : \"N/A\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waitlist:  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: \"    \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: waitListRequestAndStoreInDBRequest,\n      children: \"Jump on the Waitlist for this book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BookPage, \"SlJbigdA7LSuYxFz5cEi4B4ai3c=\", false, function () {\n  return [useParams];\n});\n\n_c = BookPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js"],"names":["useEffect","useState","useParams","BookPage","setSavedBooks","savedBooks","user","book","setBook","waiters","setWaiters","params","foundBook","bookId","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","find","api_id","id","fetch","then","response","json","data","title","volumeInfo","subtitle","authors","join","publisher","publishedDate","description","image_url","imageLinks","thumbnail","waitListRequestAndStoreInDBRequest","confObj","method","headers","body","JSON","stringify","user_id","book_id","alert","console","log","select","waiting","waitersMapped","map","waiter","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA;AAA5B,CAAlB,EAAoD;AAAA;;AAE/D,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAE,IAAF,CAA/B;AACA,QAAK,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAArC;AACA,QAAMU,MAAM,GAAGT,SAAS,EAAxB;AACA,MAAIU,SAAS,GAAG,IAAhB;AACA,MAAIC,MAAM,GAAG,CAAb;;AAEA,WAASC,SAAT,CAAmBC,IAAnB,EACI;AACA,QAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAF,IAAAA,GAAG,CAACG,SAAJ,GAAgBJ,IAAhB;AACA,WAAOC,GAAG,CAACI,WAAJ,IAAmBJ,GAAG,CAACK,SAAvB,IAAoC,EAA3C;AACC;;AAGLrB,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,SAAS,GAAGP,UAAU,CAACiB,IAAX,CAAgBf,IAAI,IAAEA,IAAI,CAACgB,MAAL,KAAcZ,MAAM,CAACa,EAA3C,CAAZ;AACAhB,IAAAA,OAAO,CAACI,SAAD,CAAP;;AAEA,QAAI,CAACA,SAAL,EAAe;AACXa,MAAAA,KAAK,CAAE,+CAA8Cd,MAAM,CAACa,EAAG,EAA1D,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAE;AACRrB,QAAAA,OAAO,CAAC;AACJsB,UAAAA,KAAK,EAAED,IAAI,CAACE,UAAL,CAAgBD,KADnB;AAEJE,UAAAA,QAAQ,EAAEH,IAAI,CAACE,UAAL,CAAgBC,QAFtB;AAGJC,UAAAA,OAAO,EAAEJ,IAAI,CAACE,UAAL,CAAgBE,OAAhB,CAAwBC,IAAxB,CAA6B,IAA7B,CAHL;AAIJC,UAAAA,SAAS,EAAEN,IAAI,CAACE,UAAL,CAAgBI,SAJvB;AAKJC,UAAAA,aAAa,EAAEP,IAAI,CAACE,UAAL,CAAgBK,aAL3B;AAMJC,UAAAA,WAAW,EAAEvB,SAAS,CAACe,IAAI,CAACE,UAAL,CAAgBM,WAAjB,CANlB;AAOJC,UAAAA,SAAS,EAAET,IAAI,CAACE,UAAL,CAAgBQ,UAAhB,CAA2BC,SAPlC;AAQJjB,UAAAA,MAAM,EAAEM,IAAI,CAACL;AART,SAAD,CAAP;AAUH,OAbD;AAeH;AAEJ,GAtBQ,EAsBP,EAtBO,CAAT;;AA0BA,WAASiB,kCAAT,GAA8C;AAC1C,QAAInC,IAAJ,EAAS;AACL,UAAIoC,OAAO,GAAG;AACVC,QAAAA,MAAM,EAAE,MADE;AAEVC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFC;AAKVC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAexC,IAAf;AALI,OAAd;AAOAkB,MAAAA,KAAK,CAAC,6BAAD,EAAgCiB,OAAhC,CAAL,CACChB,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAE;AACRrB,QAAAA,OAAO,CAACqB,IAAD,CAAP;AACAhB,QAAAA,MAAM,GAAGgB,IAAI,CAACL,EAAd;AACA,YAAIkB,OAAO,GAAG;AACdC,UAAAA,MAAM,EAAE,MADM;AAEdC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAFK;AAKdC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,YAAAA,OAAO,EAAE1C,IAAI,CAACkB,EAAf;AAAmByB,YAAAA,OAAO,EAAEpC;AAA5B,WAAf;AALQ,SAAd;AAOJY,QAAAA,KAAK,CAAC,gCAAD,EAAmCiB,OAAnC,CAAL;AACC,OAbD;AAcH,KAtBD,MAuBI;AACAQ,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACH;AACJ;;AAEDlD,EAAAA,SAAS,CAAC,MAAI;AACVyB,IAAAA,KAAK,CAAE,iCAAF,CAAL,CACCC,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAG;AACTsB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AAEAnB,MAAAA,UAAU,CAACmB,IAAI,CAACwB,MAAL,CAAYC,OAAO,IAAEA,OAAO,CAACL,OAAR,KAAkBpC,MAAvC,CAAD,CAAV;AAEA,UAAI0C,aAAa,GAAG9C,OAAO,CAAC+C,GAAR,CAAYC,MAAM,IAAE;AACpC,4BAAO;AAAA,oBAAKA,MAAM,CAACnD,IAAP,CAAYoD;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFmB,CAApB;AAGH,KAVD;AAYH,GAbQ,EAaP,CAACnD,IAAD,CAbO,CAAT;AAiBA,sBACI;AAAA,4BACI;AAAK,MAAA,GAAG,EAAGA,IAAI,GAAGA,IAAI,CAAC+B,SAAR,GAAmB;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAK/B,IAAI,GAAEA,IAAI,CAACuB,KAAP,GAAc;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKvB,IAAI,GAAEA,IAAI,CAACyB,QAAP,GAAiB;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,yBAAQzB,IAAI,GAAEA,IAAI,CAAC0B,OAAP,GAAgB,KAA5B,QAAqC1B,IAAI,GAAEA,IAAI,CAAC6B,aAAP,GAAsB,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,uCAAsB7B,IAAI,GAAEA,IAAI,CAAC4B,SAAP,GAAkB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,kCAAiB5B,IAAI,GAAEA,IAAI,CAAC8B,WAAP,GAAoB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAWI;AAAQ,MAAA,OAAO,EAAEI,kCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADJ;AAiBH;;GAzGuBtC,Q;UAILD,S;;;KAJKC,Q","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function BookPage({setSavedBooks, savedBooks, user}){\n\n    const[book, setBook] = useState (null)\n    const[waiters, setWaiters] = useState([])\n    const params = useParams()\n    let foundBook = null\n    let bookId = 0\n    \n    function stripHtml(html)\n        {\n        let tmp = document.createElement(\"DIV\");\n        tmp.innerHTML = html;\n        return tmp.textContent || tmp.innerText || \"\";\n        }\n\n\n    useEffect(()=>{\n        foundBook = savedBooks.find(book=>book.api_id===params.id) \n        setBook(foundBook)\n    \n        if (!foundBook){ \n            fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`)\n            .then(response => response.json())\n            .then(data=>{\n                setBook({\n                    title: data.volumeInfo.title, \n                    subtitle: data.volumeInfo.subtitle, \n                    authors: data.volumeInfo.authors.join(\", \"), \n                    publisher: data.volumeInfo.publisher, \n                    publishedDate: data.volumeInfo.publishedDate, \n                    description: stripHtml(data.volumeInfo.description),\n                    image_url: data.volumeInfo.imageLinks.thumbnail, \n                    api_id: data.id\n                })\n            })\n\n        }\n    \n    },[])\n\n\n\n    function waitListRequestAndStoreInDBRequest (){\n        if (user){\n            let confObj = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(book),\n            }\n            fetch('http://localhost:3000/books', confObj)\n            .then(response=>response.json())\n            .then(data=>{\n                setBook(data)\n                bookId = data.id\n                let confObj = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({user_id: user.id, book_id: bookId}),\n            }\n            fetch('http://localhost:3000/waitings', confObj)\n            })\n        }\n        else{\n            alert('Please sign in to wait for a book')\n        }\n    }\n\n    useEffect(()=>{\n        fetch(`http://localhost:3000/waitings/`)\n        .then(response=>response.json())\n        .then(data=> {\n            console.log(data)\n\n            setWaiters(data.select(waiting=>waiting.book_id===bookId))\n\n            let waitersMapped = waiters.map(waiter=>{\n                return(<li>{waiter.user.name}</li>)\n            })\n        })\n\n    },[book])\n\n\n\n    return(\n        <>\n            <img src={ book ? book.image_url: \"N/A\" }></img>\n            <h2>{book? book.title: \"N/A\"}</h2>\n            <h3>{book? book.subtitle: \"N/A\"}</h3>\n            <p>by: {book? book.authors: \"N/A\"} ({book? book.publishedDate: \"N/A\"}) </p>\n            <p>Publishing House: {book? book.publisher: \"N/A\"}</p>\n            <p>Description: {book? book.description: \"N/A\"} </p>\n\n            <p>Waitlist:  </p>\n            <ul>    </ul>\n\n            <button onClick={waitListRequestAndStoreInDBRequest}>Jump on the Waitlist for this book</button>\n\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}