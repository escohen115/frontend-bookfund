{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport SponsorForm from './SponsorForm';\nimport ReviewForm from './ReviewForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookPage({\n  setSavedBooks,\n  savedBooks,\n  user,\n  setUser,\n  timeLeft,\n  reviewLeft\n}) {\n  _s();\n\n  const [book, setBook] = useState({});\n  const [backEndBook, setBackEndBook] = useState(false);\n  const [waitlistRequest, setWaitlistRequest] = useState(false);\n  const [toggleSponsorForm, setToggleSponsorForm] = useState(false);\n  const [bookId, setBookId] = useState(0);\n  const [buyLink, setBuyLink] = useState('');\n  const params = useParams();\n  let waitingsMapped = null;\n  let waitingsFulfilledMapped = null;\n  let reviewsMapped = null;\n\n  function stripHtml(html) {\n    let tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  } // useEffect(()=>{\n  //     if (book.title){\n  //         let title = book.title.split(' ').join('+')\n  //         fetch(`http://localhost:3000/books/scrape/${title}`)\n  //         .then(response=>response.json())\n  //         .then(data=>console.log(data))\n  //     }\n  // },[book])\n\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => {\n      let foundBook = data.find(book => book.api_id === params.id);\n      setBook(foundBook);\n\n      if (foundBook) {\n        setBookId(foundBook.id);\n        setBackEndBook(true);\n      }\n\n      if (!foundBook) {\n        fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`).then(response => response.json()).then(data => {\n          setBook({\n            title: data.volumeInfo.title,\n            subtitle: data.volumeInfo.subtitle,\n            authors: data.volumeInfo.authors.join(\", \"),\n            publisher: data.volumeInfo.publisher,\n            publishedDate: data.volumeInfo.publishedDate,\n            description: stripHtml(data.volumeInfo.description),\n            image_url: data.volumeInfo.imageLinks.thumbnail,\n            api_id: data.id\n          });\n        });\n      }\n    });\n  }, [waitlistRequest, backEndBook, params.id]);\n\n  function waitListRequestAndStoreInDBRequest() {\n    if (user) {\n      if (timeLeft === false && reviewLeft === true) {\n        let confObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(book)\n        };\n        fetch('http://localhost:3000/books', confObj).then(response => response.json()).then(data => {\n          setBook(data);\n          setBookId(data.id);\n          let bookIdea = data.id;\n          let confObj = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user_id: user.id,\n              book_id: bookIdea,\n              fulfilled: false\n            })\n          };\n          fetch('http://localhost:3000/waitings', confObj).then(response => response.json()).then(data => {\n            setBackEndBook(true);\n            setWaitlistRequest(!waitlistRequest);\n\n            if (data.error) {\n              alert(`${data.error}`);\n            } else {\n              fetch(`http://localhost:3000/users/${user.id}`).then(response => response.json()).then(data => setUser(data));\n              fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => setSavedBooks(data));\n            }\n          });\n        });\n      } else {\n        alert(\"Please leave a review on your last book received or check your timer \");\n      }\n    } else {\n      alert('Please sign in to join a waitlist.');\n    }\n  }\n\n  if (backEndBook) {\n    waitingsMapped = book.waitings.map(waiting => {\n      if (waiting.fulfilled !== true) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${waiting.user.id}`,\n            children: waiting.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }, this);\n      }\n    });\n    waitingsFulfilledMapped = book.waitings.map(waiting => {\n      if (waiting.fulfilled === true) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${waiting.user.id}`,\n            children: waiting.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 23\n        }, this);\n      }\n    });\n    reviewsMapped = book.reviews.map(review => {\n      if (user) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [review.text, \" - \", review.rating, \" stars - \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${review.user.id}`,\n            children: review.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 65\n          }, this), review.user.id === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            id: review.id,\n            onClick: e => handleCommentDelete(e),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 55\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [review.text, \" - \", review.rating, \" stars - \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${review.user.id}`,\n            children: review.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  }\n\n  function handleCommentDelete(e) {\n    let reviewId = parseInt(e.target.id);\n    let confObj = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(`http://localhost:3000/reviews/${reviewId}`, confObj).then(data => setWaitlistRequest(!waitlistRequest));\n  }\n\n  function handleToggleRequest() {\n    if (user) {\n      setToggleSponsorForm(!toggleSponsorForm);\n    } else {\n      alert(\"Please log in to Sponsor\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: book ? book.image_url : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://www.google.com/\",\n      children: \"google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book ? book.title : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: book ? book.subtitle : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"by: \", book ? book.authors : \"N/A\", \" (\", book ? book.publishedDate : \"N/A\", \") \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Publishing House: \", book ? book.publisher : \"N/A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", book ? book.description : \"N/A\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: waitListRequestAndStoreInDBRequest,\n      children: \"Jump on the Waitlist for this book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), backEndBook ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waitlist:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [waitingsMapped.length > 0 ? waitingsMapped : \"No one is currently waiting for this book. Be the first!\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleRequest,\n        children: \" Sponsor this Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), toggleSponsorForm ? /*#__PURE__*/_jsxDEV(SponsorForm, {\n        waitingsMapped: waitingsMapped,\n        book: book,\n        user: user,\n        setUser: setUser,\n        waitlistRequest: waitlistRequest,\n        setWaitlistRequest: setWaitlistRequest,\n        setBackEndBook: setBackEndBook,\n        backEndBook: backEndBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Users who have received this book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this), waitingsFulfilledMapped.length > 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [\" \", waitingsFulfilledMapped, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 51\n      }, this) : \"No one has received this book yet. Join the waitlist to be the first!\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Reviews:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this), reviewsMapped.length > 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [\" \", reviewsMapped, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 41\n      }, this) : \"No one has reviewed this book yet. Be the first!\", /*#__PURE__*/_jsxDEV(ReviewForm, {\n        user: user,\n        book: book,\n        waitlistRequest: waitlistRequest,\n        setWaitlistRequest: setWaitlistRequest,\n        backEndBook: backEndBook,\n        setBackEndBook: setBackEndBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n}\n\n_s(BookPage, \"prUee/IxiEn1bqzpC0a8lwRM9i4=\", false, function () {\n  return [useParams];\n});\n\n_c = BookPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js"],"names":["useEffect","useState","useParams","Link","SponsorForm","ReviewForm","BookPage","setSavedBooks","savedBooks","user","setUser","timeLeft","reviewLeft","book","setBook","backEndBook","setBackEndBook","waitlistRequest","setWaitlistRequest","toggleSponsorForm","setToggleSponsorForm","bookId","setBookId","buyLink","setBuyLink","params","waitingsMapped","waitingsFulfilledMapped","reviewsMapped","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","fetch","then","response","json","data","foundBook","find","api_id","id","title","volumeInfo","subtitle","authors","join","publisher","publishedDate","description","image_url","imageLinks","thumbnail","waitListRequestAndStoreInDBRequest","confObj","method","headers","body","JSON","stringify","bookIdea","user_id","book_id","fulfilled","error","alert","waitings","map","waiting","username","reviews","review","text","rating","e","handleCommentDelete","reviewId","parseInt","target","handleToggleRequest","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport SponsorForm from './SponsorForm'\nimport ReviewForm from './ReviewForm'\n\n\nexport default function BookPage({setSavedBooks, savedBooks, user, setUser, timeLeft, reviewLeft}){\n\n    const [book, setBook] = useState ({})\n    const [backEndBook, setBackEndBook] = useState(false)\n    const [waitlistRequest, setWaitlistRequest] = useState(false)\n    const [toggleSponsorForm, setToggleSponsorForm] = useState(false)\n    const [bookId, setBookId] = useState(0)\n    const [buyLink, setBuyLink] = useState('')\n    const params = useParams()\n\n    let waitingsMapped = null\n    let waitingsFulfilledMapped = null\n    let reviewsMapped = null\n    \n    function stripHtml(html){\n        let tmp = document.createElement(\"DIV\");\n        tmp.innerHTML = html;\n        return tmp.textContent || tmp.innerText || \"\";\n    }\n\n    // useEffect(()=>{\n    //     if (book.title){\n    //         let title = book.title.split(' ').join('+')\n    //         fetch(`http://localhost:3000/books/scrape/${title}`)\n    //         .then(response=>response.json())\n    //         .then(data=>console.log(data))\n    //     }\n\n    // },[book])\n\n    useEffect(()=>{\n\n    fetch(`http://localhost:3000/books`)\n    .then(response=>response.json())\n    .then(data=>{\n\n        let foundBook = data.find(book=>book.api_id===params.id)\n        setBook(foundBook)\n\n        if (foundBook){\n            setBookId (foundBook.id )\n            setBackEndBook(true)\n        }\n        if (!foundBook){ \n            fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`)\n            .then(response => response.json())\n            .then(data=>{\n                setBook({\n                    title: data.volumeInfo.title, \n                    subtitle: data.volumeInfo.subtitle, \n                    authors: data.volumeInfo.authors.join(\", \"), \n                    publisher: data.volumeInfo.publisher, \n                    publishedDate: data.volumeInfo.publishedDate, \n                    description: stripHtml(data.volumeInfo.description),\n                    image_url: data.volumeInfo.imageLinks.thumbnail, \n                    api_id: data.id\n                })\n            })\n        }\n\n        })\n    },[waitlistRequest, backEndBook, params.id])\n\n   \n\n    function waitListRequestAndStoreInDBRequest (){\n        \n        if (user){\n            if (timeLeft === false && reviewLeft === true){\n                let confObj = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(book),\n                }\n                fetch('http://localhost:3000/books', confObj)\n                .then(response=>response.json())\n                .then(data=>{\n                    setBook(data)\n                    setBookId(data.id)\n                    let bookIdea = data.id\n                    let confObj = {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({user_id: user.id, book_id: bookIdea, fulfilled: false}),\n                    }\n                    fetch('http://localhost:3000/waitings', confObj)\n                    .then(response=>response.json())\n                    .then(data=>{                  \n                        setBackEndBook(true)\n                        setWaitlistRequest(!waitlistRequest)\n                        if (data.error){\n                            alert(`${data.error}`)\n                        }\n                        else{\n                            fetch(`http://localhost:3000/users/${user.id}`)\n                            .then(response=>response.json())\n                            .then(data=>setUser(data))\n                    \n                            fetch(`http://localhost:3000/books`)\n                            .then(response=>response.json())\n                            .then(data=>setSavedBooks(data))\n\n                        }\n                    })\n                })\n            }\n            else\n            {\n                alert(\"Please leave a review on your last book received or check your timer \")\n            }\n        }\n\n        else{\n            alert('Please sign in to join a waitlist.')\n        }\n    }\n    \n\n    if (backEndBook){\n        waitingsMapped = book.waitings.map(waiting=>{\n            if (waiting.fulfilled !== true){\n                return<li><Link to={`/otheruserpage/${waiting.user.id}`}>{waiting.user.username}</Link></li>\n            }\n        })\n\n        waitingsFulfilledMapped = book.waitings.map(waiting=>{\n            if (waiting.fulfilled === true){\n                return<li><Link to={`/otheruserpage/${waiting.user.id}`}>{waiting.user.username}</Link></li>\n            }\n        })\n\n        reviewsMapped = book.reviews.map(review=>{  \n            if (user){\n                return(\n                    <li>\n                        {review.text} - {review.rating} stars - <Link to={`/otheruserpage/${review.user.id}`}>{review.user.username}</Link> \n                \n                        {review.user.id === user.id ? <button id={review.id} onClick={e=>handleCommentDelete(e)}>X</button> :null}\n                    </li>\n                )   \n            }\n            else{\n                return(\n                    <li>\n                        \n                        {review.text} - {review.rating} stars - <Link to={`/otheruserpage/${review.user.id}`}>{review.user.username}</Link> \n                        \n                    </li>\n                )   \n                    \n            }\n        })\n        \n    }\n\n    function handleCommentDelete(e){\n        let reviewId = parseInt(e.target.id)\n        let confObj = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n        fetch(`http://localhost:3000/reviews/${reviewId}`, confObj)\n        .then(data=>setWaitlistRequest(!waitlistRequest))\n\n    }\n\n    function handleToggleRequest(){\n        if (user){\n        setToggleSponsorForm(!toggleSponsorForm)\n        }\n        else{\n        alert(\"Please log in to Sponsor\")\n        }\n    }\n\n    \n    return(\n        <>\n            <img src={ book ? book.image_url: \"N/A\" }></img>\n\n            {/* <button onClick={handleScrapeRequest}>Scrape</button> */}\n            <a href =\"https://www.google.com/\" >google</a>\n\n            <h2>{book? book.title: \"N/A\"}</h2>\n            <h3>{book? book.subtitle: \"N/A\"}</h3>\n            <p>by: {book? book.authors: \"N/A\"} ({book? book.publishedDate: \"N/A\"}) </p>\n            <p>Publishing House: {book? book.publisher: \"N/A\"}</p>\n            <p>Description: {book? book.description: \"N/A\"} </p>\n            <button onClick={waitListRequestAndStoreInDBRequest}>Jump on the Waitlist for this book</button>\n            \n            \n\n            \n        { backEndBook ?\n        <>\n            <p>Waitlist:</p>\n\n            <ol>{ waitingsMapped.length > 0 ? waitingsMapped: \"No one is currently waiting for this book. Be the first!\"} </ol>\n\n            \n            <button onClick={handleToggleRequest}> Sponsor this Book</button>\n            {toggleSponsorForm ? \n                <SponsorForm \n                    waitingsMapped={waitingsMapped} \n                    book={book} \n                    user={user}\n                    setUser={setUser}\n                    waitlistRequest={waitlistRequest}\n                    setWaitlistRequest={setWaitlistRequest}\n                    setBackEndBook={setBackEndBook}\n                    backEndBook={backEndBook}\n                /> \n            : null}\n\n            \n            <p>Users who have received this book</p>\n            {waitingsFulfilledMapped.length > 0 ? <ol> {waitingsFulfilledMapped}  </ol>: \"No one has received this book yet. Join the waitlist to be the first!\"}\n\n            <p>Reviews:</p>\n            {reviewsMapped.length > 0 ? <ol> {reviewsMapped} </ol> : \"No one has reviewed this book yet. Be the first!\"} \n\n            <ReviewForm \n                user={user} \n                book={book} \n                waitlistRequest={waitlistRequest} \n                setWaitlistRequest={setWaitlistRequest}\n                backEndBook={backEndBook}\n                setBackEndBook={setBackEndBook}/>\n            </>\n        : null\n        }\n\n        </>\n    )\n\n}\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}