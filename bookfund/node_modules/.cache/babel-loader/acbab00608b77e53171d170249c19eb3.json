{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nexport default function Timer() {\n  _s();\n\n  const [timerDays, setTimerDays] = useState(0);\n  const [timerHours, setTimerHours] = useState(0);\n  const [timerMinutes, setTimerMinutes] = useState(0);\n  const [timerSeconds, setTimerSeconds] = useState(0);\n\n  function startTimer() {\n    const countDownDate = new Date('May 30, 2020 00:00:00').getTime(); // debugger\n\n    let interval = setInterval(() => {\n      const now = new Date().getTime();\n      const timeLeft = countDownDate - now;\n      const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(timeLeft % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(timeLeft % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(timeLeft % (1000 * 60) / 1000);\n\n      if (timeLeft < 0) {\n        // stop our timer\n        clearInterval(interval.current);\n      } else {\n        //update timer\n        setTimerDays(days);\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n    }, 1000);\n  }\n\n  startTimer();\n  return null;\n}\n\n_s(Timer, \"6cWSlIMgLuFT+Lf5PY380/oUOm4=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/Timer.js"],"names":["React","useState","useRef","Timer","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","startTimer","countDownDate","Date","getTime","interval","setInterval","now","timeLeft","days","Math","floor","hours","minutes","seconds","clearInterval","current"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,CAAD,CAAhD;;AAEA,WAASW,UAAT,GAAsB;AAClB,UAAMC,aAAa,GAAG,IAAIC,IAAJ,CAAS,uBAAT,EAAkCC,OAAlC,EAAtB,CADkB,CAElB;;AAEA,QAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAI;AAC3B,YAAMC,GAAG,GAAG,IAAIJ,IAAJ,GAAWC,OAAX,EAAZ;AACA,YAAMI,QAAQ,GAAGN,aAAa,GAAGK,GAAjC;AAEA,YAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAgB,EAApB,CAAnB,CAAb;AACA,YAAMI,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAgB,EAApB,CAAR,IAAmC,OAAK,EAAL,GAAQ,EAA3C,CAAZ,CAAd;AACA,YAAMK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAR,IAA+B,OAAO,EAAtC,CAAZ,CAAhB;AACA,YAAMM,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAhB;;AAEA,UAAIA,QAAQ,GAAG,CAAf,EAAiB;AACb;AACAO,QAAAA,aAAa,CAACV,QAAQ,CAACW,OAAV,CAAb;AACH,OAHD,MAII;AACA;AACAtB,QAAAA,YAAY,CAACe,IAAD,CAAZ;AACAb,QAAAA,aAAa,CAACgB,KAAD,CAAb;AACAd,QAAAA,eAAe,CAACe,OAAD,CAAf;AACAb,QAAAA,eAAe,CAACc,OAAD,CAAf;AACH;AAEJ,KArByB,EAqBvB,IArBuB,CAA1B;AAsBH;;AACDb,EAAAA,UAAU;AACV,SAAO,IAAP;AACH;;GAnCuBT,K;;KAAAA,K","sourcesContent":["import React, {useState, useRef} from 'react'\n\nexport default function Timer (){\n    const [timerDays, setTimerDays] = useState(0)\n    const [timerHours, setTimerHours] = useState(0)\n    const [timerMinutes, setTimerMinutes] = useState(0)\n    const [timerSeconds, setTimerSeconds] = useState(0)\n\n    function startTimer() {\n        const countDownDate = new Date('May 30, 2020 00:00:00').getTime()\n        // debugger\n\n        let interval = setInterval(()=>{\n            const now = new Date().getTime()\n            const timeLeft = countDownDate - now\n\n            const days = Math.floor(timeLeft / (1000 * 60 * 60 *24))\n            const hours = Math.floor((timeLeft % (1000 * 60 * 60 *24) / (1000*60*60)))\n            const minutes = Math.floor((timeLeft % (1000 * 60 * 60) / (1000 * 60)))\n            const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000)\n            \n            if (timeLeft < 0){\n                // stop our timer\n                clearInterval(interval.current)\n            }\n            else{\n                //update timer\n                setTimerDays(days)\n                setTimerHours(hours)\n                setTimerMinutes(minutes)\n                setTimerSeconds(seconds)\n            }\n\n        }, 1000)\n    }\n    startTimer()\n    return null\n}"]},"metadata":{},"sourceType":"module"}