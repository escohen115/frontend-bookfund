{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = ({\n  mostRecent,\n  timeLeft,\n  setTimeLeft\n}) => {\n  _s();\n\n  const [timerDays, setTimerDays] = useState(0);\n  const [timerHours, setTimerHours] = useState(0);\n  const [timerMinutes, setTimerMinutes] = useState(0);\n  const [timerSeconds, setTimerSeconds] = useState(0);\n  let interval = useRef();\n\n  const startTimer = () => {\n    // const countDownDate = new Date(parseInt(mostRecent.sponsor_date)+1209600000)\n    // const countDownDate = new Date(parseInt(mostRecent.sponsor_date)+180000)\n    const countDownDate = new Date(parseInt(mostRecent.sponsor_date) + 20000);\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const timeLeft = countDownDate - now;\n      const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(timeLeft % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(timeLeft % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(timeLeft % (1000 * 60) / 1000);\n\n      if (timeLeft < 0) {\n        setTimeLeft(false);\n        clearInterval(interval.current);\n      } else {\n        //update timer\n        setTimerDays(days);\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    startTimer();\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"days:\", timerDays]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"hours:\", timerHours]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"minutes:\", timerMinutes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"seconds:\", timerSeconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Timer, \"lI7B1ryibPW7YMeHsYk2WazqT5Y=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/Timer.js"],"names":["React","useState","useRef","useEffect","Timer","mostRecent","timeLeft","setTimeLeft","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","startTimer","countDownDate","Date","parseInt","sponsor_date","setInterval","now","getTime","days","Math","floor","hours","minutes","seconds","clearInterval","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA;AAAvB,CAAD,KAAwC;AAAA;;AAElD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,CAAD,CAAhD;AAGA,MAAIe,QAAQ,GAAGd,MAAM,EAArB;;AAEA,QAAMe,UAAU,GAAG,MAAM;AAErB;AACA;AACA,UAAMC,aAAa,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACf,UAAU,CAACgB,YAAZ,CAAR,GAAkC,KAA3C,CAAtB;AAGAL,IAAAA,QAAQ,GAAGM,WAAW,CAAC,MAAI;AACvB,YAAMC,GAAG,GAAG,IAAIJ,IAAJ,GAAWK,OAAX,EAAZ;AACA,YAAMlB,QAAQ,GAAGY,aAAa,GAAGK,GAAjC;AAEA,YAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWrB,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAgB,EAApB,CAAnB,CAAb;AACA,YAAMsB,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAYrB,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAgB,EAApB,CAAR,IAAmC,OAAK,EAAL,GAAQ,EAA3C,CAAZ,CAAd;AACA,YAAMuB,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYrB,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAR,IAA+B,OAAO,EAAtC,CAAZ,CAAhB;AACA,YAAMwB,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYrB,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAhB;;AAEA,UAAIA,QAAQ,GAAG,CAAf,EAAiB;AACbC,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAwB,QAAAA,aAAa,CAACf,QAAQ,CAACgB,OAAV,CAAb;AACH,OAHD,MAII;AACA;AACAvB,QAAAA,YAAY,CAACgB,IAAD,CAAZ;AACAd,QAAAA,aAAa,CAACiB,KAAD,CAAb;AACAf,QAAAA,eAAe,CAACgB,OAAD,CAAf;AACAd,QAAAA,eAAe,CAACe,OAAD,CAAf;AACH;AAEJ,KArBqB,EAqBnB,IArBmB,CAAtB;AAsBH,GA7BD;;AA+BA3B,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,UAAU;AACV,WAAM,MAAI;AACNc,MAAAA,aAAa,CAACf,QAAQ,CAACgB,OAAV,CAAb;AACH,KAFD;AAGH,GALQ,CAAT;AAOA,sBACI;AAAA,4BAEI;AAAA,0BAASxB,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,2BAAUE,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,6BAAYE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,6BAAYE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1DD;;GAAMV,K;;KAAAA,K;AA4DN,eAAeA,KAAf","sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\n\n \nconst Timer = ({mostRecent, timeLeft, setTimeLeft })=>{\n    \n    const [timerDays, setTimerDays] = useState(0)\n    const [timerHours, setTimerHours] = useState(0)\n    const [timerMinutes, setTimerMinutes] = useState(0)\n    const [timerSeconds, setTimerSeconds] = useState(0)\n\n\n    let interval = useRef()\n\n    const startTimer = () => {\n\n        // const countDownDate = new Date(parseInt(mostRecent.sponsor_date)+1209600000)\n        // const countDownDate = new Date(parseInt(mostRecent.sponsor_date)+180000)\n        const countDownDate = new Date(parseInt(mostRecent.sponsor_date)+20000)\n\n   \n        interval = setInterval(()=>{\n            const now = new Date().getTime()\n            const timeLeft = countDownDate - now\n\n            const days = Math.floor(timeLeft / (1000 * 60 * 60 *24))\n            const hours = Math.floor((timeLeft % (1000 * 60 * 60 *24) / (1000*60*60)))\n            const minutes = Math.floor((timeLeft % (1000 * 60 * 60) / (1000 * 60)))\n            const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000)\n            \n            if (timeLeft < 0){\n                setTimeLeft(false)\n                clearInterval(interval.current)\n            }\n            else{\n                //update timer\n                setTimerDays(days)\n                setTimerHours(hours)\n                setTimerMinutes(minutes)\n                setTimerSeconds(seconds)\n            }\n\n        }, 1000)\n    }\n\n    useEffect(()=>{\n        startTimer()\n        return()=>{\n            clearInterval(interval.current)\n        }\n    })\n    \n    return (\n        <div>\n      \n            <p>days:{timerDays}</p>\n            <p>hours:{timerHours}</p>\n            <p>minutes:{timerMinutes}</p>\n            <p>seconds:{timerSeconds}</p>\n           \n        </div> \n    )\n}\n\nexport default Timer\n\n\n\n "]},"metadata":{},"sourceType":"module"}