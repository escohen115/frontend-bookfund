{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookPage({\n  setSavedBooks,\n  savedBooks,\n  user\n}) {\n  _s();\n\n  const [book, setBook] = useState({});\n  const [backEndBook, setBackEndBook] = useState(false);\n  const [waitlistRequest, setWaitlistRequest] = useState(false);\n  const params = useParams();\n  let bookId = 0;\n  let waitersMapped = null;\n\n  function stripHtml(html) {\n    let tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => {\n      let foundBook = data.find(book => book.api_id === params.id);\n      setBook(foundBook);\n\n      if (foundBook) {\n        bookId = foundBook.id;\n        setBackEndBook(!backEndBookbackEndBook);\n      }\n\n      if (!foundBook) {\n        fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`).then(response => response.json()).then(data => {\n          setBook({\n            title: data.volumeInfo.title,\n            subtitle: data.volumeInfo.subtitle,\n            authors: data.volumeInfo.authors.join(\", \"),\n            publisher: data.volumeInfo.publisher,\n            publishedDate: data.volumeInfo.publishedDate,\n            description: stripHtml(data.volumeInfo.description),\n            image_url: data.volumeInfo.imageLinks.thumbnail,\n            api_id: data.id\n          });\n        });\n      }\n    });\n  }, [waitlistRequest]);\n\n  function waitListRequestAndStoreInDBRequest() {\n    setWaitlistRequest(!waitlistRequest);\n\n    if (user) {\n      let confObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      };\n      fetch('http://localhost:3000/books', confObj).then(response => response.json()).then(data => {\n        setBook(data);\n        bookId = data.id;\n        setBackEndBook(!backEndBook);\n        let confObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: user.id,\n            book_id: bookId\n          })\n        };\n        fetch('http://localhost:3000/waitings', confObj);\n      });\n    } else {\n      alert('Please sign in to wait for a book');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: book ? book.image_url : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book ? book.title : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: book ? book.subtitle : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"by: \", book ? book.authors : \"N/A\", \" (\", book ? book.publishedDate : \"N/A\", \") \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Publishing House: \", book ? book.publisher : \"N/A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", book ? book.description : \"N/A\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waitlist:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [backEndBook ? book.waitings.length : \"false\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: waitListRequestAndStoreInDBRequest,\n      children: \"Jump on the Waitlist for this book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BookPage, \"tCXdwjFvFczNHDDVQblZ6sFl5vg=\", false, function () {\n  return [useParams];\n});\n\n_c = BookPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js"],"names":["useEffect","useState","useParams","BookPage","setSavedBooks","savedBooks","user","book","setBook","backEndBook","setBackEndBook","waitlistRequest","setWaitlistRequest","params","bookId","waitersMapped","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","fetch","then","response","json","data","foundBook","find","api_id","id","backEndBookbackEndBook","title","volumeInfo","subtitle","authors","join","publisher","publishedDate","description","image_url","imageLinks","thumbnail","waitListRequestAndStoreInDBRequest","confObj","method","headers","body","JSON","stringify","user_id","book_id","alert","waitings","length"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA;AAA5B,CAAlB,EAAoD;AAAA;;AAE/D,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAE,EAAF,CAA/B;AACA,QAAK,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAK,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAArD;AACA,QAAMY,MAAM,GAAGX,SAAS,EAAxB;AACA,MAAIY,MAAM,GAAG,CAAb;AACA,MAAIC,aAAa,GAAG,IAApB;;AAEA,WAASC,SAAT,CAAmBC,IAAnB,EAAwB;AACpB,QAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAF,IAAAA,GAAG,CAACG,SAAJ,GAAgBJ,IAAhB;AACA,WAAOC,GAAG,CAACI,WAAJ,IAAmBJ,GAAG,CAACK,SAAvB,IAAoC,EAA3C;AACH;;AAEDvB,EAAAA,SAAS,CAAC,MAAI;AACdwB,IAAAA,KAAK,CAAE,6BAAF,CAAL,CACCC,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAE;AACR,UAAIC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUvB,IAAI,IAAEA,IAAI,CAACwB,MAAL,KAAclB,MAAM,CAACmB,EAArC,CAAhB;AACAxB,MAAAA,OAAO,CAACqB,SAAD,CAAP;;AAEA,UAAIA,SAAJ,EAAc;AACVf,QAAAA,MAAM,GAAGe,SAAS,CAACG,EAAnB;AACAtB,QAAAA,cAAc,CAAC,CAACuB,sBAAF,CAAd;AACH;;AACD,UAAI,CAACJ,SAAL,EAAe;AACXL,QAAAA,KAAK,CAAE,+CAA8CX,MAAM,CAACmB,EAAG,EAA1D,CAAL,CACCP,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAE;AACRpB,UAAAA,OAAO,CAAC;AACJ0B,YAAAA,KAAK,EAAEN,IAAI,CAACO,UAAL,CAAgBD,KADnB;AAEJE,YAAAA,QAAQ,EAAER,IAAI,CAACO,UAAL,CAAgBC,QAFtB;AAGJC,YAAAA,OAAO,EAAET,IAAI,CAACO,UAAL,CAAgBE,OAAhB,CAAwBC,IAAxB,CAA6B,IAA7B,CAHL;AAIJC,YAAAA,SAAS,EAAEX,IAAI,CAACO,UAAL,CAAgBI,SAJvB;AAKJC,YAAAA,aAAa,EAAEZ,IAAI,CAACO,UAAL,CAAgBK,aAL3B;AAMJC,YAAAA,WAAW,EAAEzB,SAAS,CAACY,IAAI,CAACO,UAAL,CAAgBM,WAAjB,CANlB;AAOJC,YAAAA,SAAS,EAAEd,IAAI,CAACO,UAAL,CAAgBQ,UAAhB,CAA2BC,SAPlC;AAQJb,YAAAA,MAAM,EAAEH,IAAI,CAACI;AART,WAAD,CAAP;AAUH,SAbD;AAcH;AAEA,KA3BL;AA4BC,GA7BQ,EA6BP,CAACrB,eAAD,CA7BO,CAAT;;AAgCA,WAASkC,kCAAT,GAA8C;AAC1CjC,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;;AACA,QAAIL,IAAJ,EAAS;AACL,UAAIwC,OAAO,GAAG;AACVC,QAAAA,MAAM,EAAE,MADE;AAEVC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFC;AAKVC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe5C,IAAf;AALI,OAAd;AAOAiB,MAAAA,KAAK,CAAC,6BAAD,EAAgCsB,OAAhC,CAAL,CACCrB,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAE;AACRpB,QAAAA,OAAO,CAACoB,IAAD,CAAP;AACAd,QAAAA,MAAM,GAAGc,IAAI,CAACI,EAAd;AACAtB,QAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AAEA,YAAIqC,OAAO,GAAG;AACdC,UAAAA,MAAM,EAAE,MADM;AAEdC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAFK;AAKdC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,YAAAA,OAAO,EAAE9C,IAAI,CAAC0B,EAAf;AAAmBqB,YAAAA,OAAO,EAAEvC;AAA5B,WAAf;AALQ,SAAd;AAOJU,QAAAA,KAAK,CAAC,gCAAD,EAAmCsB,OAAnC,CAAL;AACC,OAfD;AAgBH,KAxBD,MAyBI;AACAQ,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACH;AACJ;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,GAAG,EAAG/C,IAAI,GAAGA,IAAI,CAACmC,SAAR,GAAmB;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKnC,IAAI,GAAEA,IAAI,CAAC2B,KAAP,GAAc;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAK3B,IAAI,GAAEA,IAAI,CAAC6B,QAAP,GAAiB;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,yBAAQ7B,IAAI,GAAEA,IAAI,CAAC8B,OAAP,GAAgB,KAA5B,QAAqC9B,IAAI,GAAEA,IAAI,CAACiC,aAAP,GAAsB,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,uCAAsBjC,IAAI,GAAEA,IAAI,CAACgC,SAAP,GAAkB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,kCAAiBhC,IAAI,GAAEA,IAAI,CAACkC,WAAP,GAAoB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAUI;AAAA,iBAAKhC,WAAW,GAAGF,IAAI,CAACgD,QAAL,CAAcC,MAAjB,GAAyB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAYI;AAAQ,MAAA,OAAO,EAAEX,kCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA,kBADJ;AAkBH;;GAjGuB1C,Q;UAKLD,S;;;KALKC,Q","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function BookPage({setSavedBooks, savedBooks, user}){\n\n    const[book, setBook] = useState ({})\n    const[backEndBook, setBackEndBook] = useState(false)\n    const[waitlistRequest, setWaitlistRequest] = useState(false)\n    const params = useParams()\n    let bookId = 0\n    let waitersMapped = null\n    \n    function stripHtml(html){\n        let tmp = document.createElement(\"DIV\");\n        tmp.innerHTML = html;\n        return tmp.textContent || tmp.innerText || \"\";\n    }\n\n    useEffect(()=>{\n    fetch(`http://localhost:3000/books`)\n    .then(response=>response.json())\n    .then(data=>{\n        let foundBook = data.find(book=>book.api_id===params.id)\n        setBook(foundBook)\n\n        if (foundBook){\n            bookId = foundBook.id \n            setBackEndBook(!backEndBookbackEndBook)\n        }\n        if (!foundBook){ \n            fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`)\n            .then(response => response.json())\n            .then(data=>{\n                setBook({\n                    title: data.volumeInfo.title, \n                    subtitle: data.volumeInfo.subtitle, \n                    authors: data.volumeInfo.authors.join(\", \"), \n                    publisher: data.volumeInfo.publisher, \n                    publishedDate: data.volumeInfo.publishedDate, \n                    description: stripHtml(data.volumeInfo.description),\n                    image_url: data.volumeInfo.imageLinks.thumbnail, \n                    api_id: data.id\n                })\n            })\n        }\n\n        })\n    },[waitlistRequest])\n\n\n    function waitListRequestAndStoreInDBRequest (){\n        setWaitlistRequest(!waitlistRequest)\n        if (user){\n            let confObj = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(book),\n            }\n            fetch('http://localhost:3000/books', confObj)\n            .then(response=>response.json())\n            .then(data=>{\n                setBook(data)\n                bookId = data.id\n                setBackEndBook(!backEndBook)\n\n                let confObj = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({user_id: user.id, book_id: bookId}),\n            }\n            fetch('http://localhost:3000/waitings', confObj)\n            })\n        }\n        else{\n            alert('Please sign in to wait for a book')\n        }\n    }\n\n    return(\n        <>\n            <img src={ book ? book.image_url: \"N/A\" }></img>\n            <h2>{book? book.title: \"N/A\"}</h2>\n            <h3>{book? book.subtitle: \"N/A\"}</h3>\n            <p>by: {book? book.authors: \"N/A\"} ({book? book.publishedDate: \"N/A\"}) </p>\n            <p>Publishing House: {book? book.publisher: \"N/A\"}</p>\n            <p>Description: {book? book.description: \"N/A\"} </p>\n\n            <p>Waitlist:</p>\n\n            <p>{ backEndBook ? book.waitings.length: \"false\"} </p>\n\n            <button onClick={waitListRequestAndStoreInDBRequest}>Jump on the Waitlist for this book</button>\n\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}