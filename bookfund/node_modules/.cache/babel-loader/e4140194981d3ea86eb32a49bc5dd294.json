{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connectToBrowser = void 0;\n\nconst Browser_js_1 = require(\"./Browser.js\");\n\nconst assert_js_1 = require(\"./assert.js\");\n\nconst helper_js_1 = require(\"../common/helper.js\");\n\nconst Connection_js_1 = require(\"./Connection.js\");\n\nconst fetch_js_1 = require(\"./fetch.js\");\n\nconst environment_js_1 = require(\"../environment.js\");\n\nconst getWebSocketTransportClass = async () => {\n  return environment_js_1.isNode ? (await Promise.resolve().then(() => __importStar(require('../node/NodeWebSocketTransport.js')))).NodeWebSocketTransport : (await Promise.resolve().then(() => __importStar(require('./BrowserWebSocketTransport.js')))).BrowserWebSocketTransport;\n};\n/**\n * Users should never call this directly; it's called when calling\n * `puppeteer.connect`.\n * @internal\n */\n\n\nexports.connectToBrowser = async options => {\n  const {\n    browserWSEndpoint,\n    browserURL,\n    ignoreHTTPSErrors = false,\n    defaultViewport = {\n      width: 800,\n      height: 600\n    },\n    transport,\n    slowMo = 0\n  } = options;\n  assert_js_1.assert(Number(!!browserWSEndpoint) + Number(!!browserURL) + Number(!!transport) === 1, 'Exactly one of browserWSEndpoint, browserURL or transport must be passed to puppeteer.connect');\n  let connection = null;\n\n  if (transport) {\n    connection = new Connection_js_1.Connection('', transport, slowMo);\n  } else if (browserWSEndpoint) {\n    const WebSocketClass = await getWebSocketTransportClass();\n    const connectionTransport = await WebSocketClass.create(browserWSEndpoint);\n    connection = new Connection_js_1.Connection(browserWSEndpoint, connectionTransport, slowMo);\n  } else if (browserURL) {\n    const connectionURL = await getWSEndpoint(browserURL);\n    const WebSocketClass = await getWebSocketTransportClass();\n    const connectionTransport = await WebSocketClass.create(connectionURL);\n    connection = new Connection_js_1.Connection(connectionURL, connectionTransport, slowMo);\n  }\n\n  const {\n    browserContextIds\n  } = await connection.send('Target.getBrowserContexts');\n  return Browser_js_1.Browser.create(connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, null, () => connection.send('Browser.close').catch(helper_js_1.debugError));\n};\n\nasync function getWSEndpoint(browserURL) {\n  const endpointURL = new URL('/json/version', browserURL);\n  const fetch = await fetch_js_1.getFetch();\n\n  try {\n    const result = await fetch(endpointURL.toString(), {\n      method: 'GET'\n    });\n\n    if (!result.ok) {\n      throw new Error(`HTTP ${result.statusText}`);\n    }\n\n    const data = await result.json();\n    return data.webSocketDebuggerUrl;\n  } catch (error) {\n    error.message = `Failed to fetch browser webSocket URL from ${endpointURL}: ` + error.message;\n    throw error;\n  }\n}","map":{"version":3,"sources":["../../../../src/common/BrowserConnector.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectToBrowser = void 0;\nconst Browser_js_1 = require(\"./Browser.js\");\nconst assert_js_1 = require(\"./assert.js\");\nconst helper_js_1 = require(\"../common/helper.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst fetch_js_1 = require(\"./fetch.js\");\nconst environment_js_1 = require(\"../environment.js\");\nconst getWebSocketTransportClass = async () => {\n    return environment_js_1.isNode\n        ? (await Promise.resolve().then(() => __importStar(require('../node/NodeWebSocketTransport.js')))).NodeWebSocketTransport\n        : (await Promise.resolve().then(() => __importStar(require('./BrowserWebSocketTransport.js'))))\n            .BrowserWebSocketTransport;\n};\n/**\n * Users should never call this directly; it's called when calling\n * `puppeteer.connect`.\n * @internal\n */\nexports.connectToBrowser = async (options) => {\n    const { browserWSEndpoint, browserURL, ignoreHTTPSErrors = false, defaultViewport = { width: 800, height: 600 }, transport, slowMo = 0, } = options;\n    assert_js_1.assert(Number(!!browserWSEndpoint) + Number(!!browserURL) + Number(!!transport) ===\n        1, 'Exactly one of browserWSEndpoint, browserURL or transport must be passed to puppeteer.connect');\n    let connection = null;\n    if (transport) {\n        connection = new Connection_js_1.Connection('', transport, slowMo);\n    }\n    else if (browserWSEndpoint) {\n        const WebSocketClass = await getWebSocketTransportClass();\n        const connectionTransport = await WebSocketClass.create(browserWSEndpoint);\n        connection = new Connection_js_1.Connection(browserWSEndpoint, connectionTransport, slowMo);\n    }\n    else if (browserURL) {\n        const connectionURL = await getWSEndpoint(browserURL);\n        const WebSocketClass = await getWebSocketTransportClass();\n        const connectionTransport = await WebSocketClass.create(connectionURL);\n        connection = new Connection_js_1.Connection(connectionURL, connectionTransport, slowMo);\n    }\n    const { browserContextIds } = await connection.send('Target.getBrowserContexts');\n    return Browser_js_1.Browser.create(connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, null, () => connection.send('Browser.close').catch(helper_js_1.debugError));\n};\nasync function getWSEndpoint(browserURL) {\n    const endpointURL = new URL('/json/version', browserURL);\n    const fetch = await fetch_js_1.getFetch();\n    try {\n        const result = await fetch(endpointURL.toString(), {\n            method: 'GET',\n        });\n        if (!result.ok) {\n            throw new Error(`HTTP ${result.statusText}`);\n        }\n        const data = await result.json();\n        return data.webSocketDebuggerUrl;\n    }\n    catch (error) {\n        error.message =\n            `Failed to fetch browser webSocket URL from ${endpointURL}: ` +\n                error.message;\n        throw error;\n    }\n}\n//# sourceMappingURL=BrowserConnector.js.map"]},"metadata":{},"sourceType":"script"}