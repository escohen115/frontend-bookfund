{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport SponsorForm from './SponsorForm';\nimport ReviewForm from './ReviewForm';\nimport BookCard from '../BookIndex/BookCard';\nimport { Card } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookPage({\n  setSavedBooks,\n  savedBooks,\n  user,\n  setUser,\n  reviewLeft\n}) {\n  _s();\n\n  const [book, setBook] = useState({});\n  const [backEndBook, setBackEndBook] = useState(false);\n  const [waitlistRequest, setWaitlistRequest] = useState(false);\n  const [toggleSponsorForm, setToggleSponsorForm] = useState(false);\n  const [booksFromSearch, setBooksFromSearch] = useState([]);\n  const params = useParams();\n  const [bookId, setBookId] = useState(0); // const [buyLink, setBuyLink] = useState('')\n\n  let waitingsMapped = null;\n  let waitingsFulfilledMapped = null;\n  let reviewsMapped = null;\n  let booksMapped = []; // let linkedBookTest = null\n  // let linkedBook = false\n\n  function stripHtml(html) {\n    let tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  } // useEffect(()=>{\n  //     if (book.title){\n  //         let title = book.title.split(' ').join('+')\n  //         fetch(`http://localhost:3000/books/scrape/${title}`)\n  //         .then(response=>response.json())\n  //         .then(data=>console.log(data))\n  //     }\n  // },[book])\n\n\n  useEffect(() => {\n    linkedBookTest = savedBooks.find(book => book.api_id === params.id); // if (!linkedBookTest)\n    // {\n    //     linkedBook = true\n    // }\n\n    fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => {\n      let foundBook = data.find(book => book.api_id === params.id);\n      setBook(foundBook);\n\n      if (foundBook) {\n        setBookId(foundBook.id);\n        setBackEndBook(true);\n      }\n\n      if (!foundBook) {\n        linkedBook = true;\n        fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`).then(response => response.json()).then(data => {\n          let title = \"\";\n          let subtitle = \"\";\n          let authors = [\"\"];\n          let publisher = \"\";\n          let publishedDate = \"\";\n          let description = \"\";\n          let image_url = \"\";\n          let api_id = \"\";\n\n          if (data.volumeInfo.title) {\n            title = data.volumeInfo.title;\n          }\n\n          if (data.volumeInfo.authors) {\n            authors = data.volumeInfo.authors;\n          }\n\n          if (data.volumeInfo.subtitle) {\n            subtitle = data.volumeInfo.subtitle;\n          }\n\n          if (data.volumeInfo.publisher) {\n            publisher = data.volumeInfo.publisher;\n          }\n\n          if (data.volumeInfo.publishedDate) {\n            publishedDate = data.volumeInfo.publishedDate;\n          }\n\n          if (data.volumeInfo.description) {\n            description = data.volumeInfo.description;\n          }\n\n          if (data.volumeInfo.imageLinks) {\n            image_url = data.volumeInfo.imageLinks.thumbnail;\n          }\n\n          if (data.volumeInfo.api_id) {\n            api_id = data.volumeInfo.api_id;\n          }\n\n          setBook({\n            title: title,\n            subtitle: subtitle,\n            authors: authors.join(\", \"),\n            publisher: publisher,\n            publishedDate: publishedDate,\n            description: stripHtml(description),\n            image_url: image_url,\n            api_id: api_id,\n            waitings: [],\n            reviews: []\n          });\n        });\n      }\n    });\n  }, [waitlistRequest, backEndBook, params]);\n  useEffect(() => {\n    if (book) {\n      if (book.title) {\n        let searchTerms = book.title.split(\" \").pop();\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchTerms}&maxResults=3`).then(response => response.json()).then(data => {\n          setBooksFromSearch(data.items);\n        });\n      }\n    }\n  }, [book]);\n\n  function waitListRequestAndStoreInDBRequest() {\n    if (user) {\n      let confObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      };\n      fetch('http://localhost:3000/books', confObj).then(response => response.json()).then(data => {\n        setBook(data);\n        setBookId(data.id);\n        let bookIdea = data.id;\n        let confObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: user.id,\n            book_id: bookIdea,\n            fulfilled: false\n          })\n        };\n        fetch('http://localhost:3000/waitings', confObj).then(response => response.json()).then(data => {\n          setBackEndBook(true);\n          setWaitlistRequest(!waitlistRequest);\n\n          if (data.error) {\n            alert(`${data.error}`);\n          } else {\n            fetch(`http://localhost:3000/users/${user.id}`).then(response => response.json()).then(data => setUser(data));\n            fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => setSavedBooks(data));\n          }\n        });\n      });\n    } else {\n      alert('Please sign in to join a waitlist.');\n    }\n  }\n\n  if (booksFromSearch.length > 0) {\n    booksMapped = booksFromSearch.map(book => {\n      return /*#__PURE__*/_jsxDEV(BookCard, {\n        book: book\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  if (backEndBook === true && linkedBook === false && book) {\n    waitingsMapped = book.waitings.map(waiting => {\n      if (waiting.fulfilled !== true) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${waiting.user.id}`,\n            children: waiting.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 27\n        }, this);\n      }\n    });\n    waitingsFulfilledMapped = book.waitings.map(waiting => {\n      if (waiting.fulfilled === true) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${waiting.user.id}`,\n            children: waiting.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 23\n        }, this);\n      }\n    });\n    reviewsMapped = book.reviews.map(review => {\n      if (user) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [review.text, \" - \", review.rating, \" stars - \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${review.user.id}`,\n            children: review.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 65\n          }, this), review.user.id === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            id: review.id,\n            onClick: e => handleCommentDelete(e),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 55\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [review.text, \" - \", review.rating, \" stars - \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/otheruserpage/${review.user.id}`,\n            children: review.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  }\n\n  function handleCommentDelete(e) {\n    let reviewId = parseInt(e.target.id);\n    let confObj = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(`http://localhost:3000/reviews/${reviewId}`, confObj).then(data => setWaitlistRequest(!waitlistRequest));\n  }\n\n  function handleToggleRequest() {\n    if (user) {\n      setToggleSponsorForm(!toggleSponsorForm);\n    } else {\n      alert(\"Please log in to Sponsor\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookpage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: book ? book.image_url : \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.google.com/\",\n        children: \"google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: book ? book.title : \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: book ? book.subtitle : \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"by: \", book ? book.authors : \"N/A\", \" (\", book ? book.publishedDate : \"N/A\", \") \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Publishing House: \", book ? book.publisher : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", book ? book.description : \"N/A\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: waitListRequestAndStoreInDBRequest,\n        children: \"Jump on the Waitlist for this book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), backEndBook && linkedBook == false && book ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reviews\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Reviews:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }, this), reviewsMapped.length > 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [\" \", reviewsMapped, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this) : \"No one has reviewed this book yet. Be the first!\", /*#__PURE__*/_jsxDEV(ReviewForm, {\n          user: user,\n          book: book,\n          waitlistRequest: waitlistRequest,\n          setWaitlistRequest: setWaitlistRequest,\n          backEndBook: backEndBook,\n          setBackEndBook: setBackEndBook,\n          setSavedBooks: setSavedBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookpage-sponsor-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Users who have received this book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this), waitingsFulfilledMapped.length > 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [\" \", waitingsFulfilledMapped, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 55\n        }, this) : \"No one has received this book yet. Join the waitlist to be the first!\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleRequest,\n          children: \" Sponsor this Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), toggleSponsorForm ? /*#__PURE__*/_jsxDEV(SponsorForm, {\n          waitingsMapped: waitingsMapped,\n          book: book,\n          user: user,\n          setUser: setUser,\n          waitlistRequest: waitlistRequest,\n          setWaitlistRequest: setWaitlistRequest,\n          setBackEndBook: setBackEndBook,\n          backEndBook: backEndBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookpage-waiting-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waitlist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [waitingsMapped.length > 0 ? waitingsMapped : \"No one is currently waiting for this book. Be the first!\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"similar-books\",\n      children: booksFromSearch.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Group, {\n        itemsPerRow: 3,\n        children: booksMapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookPage, \"QKa09Rn6OR8KPazLpEgP9959plk=\", false, function () {\n  return [useParams];\n});\n\n_c = BookPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/BookPage.js"],"names":["useEffect","useState","useParams","Link","SponsorForm","ReviewForm","BookCard","Card","BookPage","setSavedBooks","savedBooks","user","setUser","reviewLeft","book","setBook","backEndBook","setBackEndBook","waitlistRequest","setWaitlistRequest","toggleSponsorForm","setToggleSponsorForm","booksFromSearch","setBooksFromSearch","params","bookId","setBookId","waitingsMapped","waitingsFulfilledMapped","reviewsMapped","booksMapped","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","linkedBookTest","find","api_id","id","fetch","then","response","json","data","foundBook","linkedBook","title","subtitle","authors","publisher","publishedDate","description","image_url","volumeInfo","imageLinks","thumbnail","join","waitings","reviews","searchTerms","split","pop","items","waitListRequestAndStoreInDBRequest","confObj","method","headers","body","JSON","stringify","bookIdea","user_id","book_id","fulfilled","error","alert","length","map","waiting","username","review","text","rating","e","handleCommentDelete","reviewId","parseInt","target","handleToggleRequest"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport SponsorForm from './SponsorForm'\nimport ReviewForm from './ReviewForm'\nimport BookCard from '../BookIndex/BookCard'\nimport { Card } from 'semantic-ui-react'\n\n\nexport default function BookPage({setSavedBooks, savedBooks, user, setUser, reviewLeft}){\n \n    const [book, setBook] = useState ({})\n    const [backEndBook, setBackEndBook] = useState(false)\n    const [waitlistRequest, setWaitlistRequest] = useState(false)\n    const [toggleSponsorForm, setToggleSponsorForm] = useState(false)\n    const [booksFromSearch, setBooksFromSearch] = useState([])\n    const params = useParams()\n    const [bookId, setBookId] = useState(0)\n    // const [buyLink, setBuyLink] = useState('')\n\n    let waitingsMapped = null\n    let waitingsFulfilledMapped = null\n    let reviewsMapped = null\n    let booksMapped = []\n    // let linkedBookTest = null\n    // let linkedBook = false\n    \n    function stripHtml(html){\n        let tmp = document.createElement(\"DIV\");\n        tmp.innerHTML = html;\n        return tmp.textContent || tmp.innerText || \"\";\n    }\n\n    // useEffect(()=>{\n    //     if (book.title){\n    //         let title = book.title.split(' ').join('+')\n    //         fetch(`http://localhost:3000/books/scrape/${title}`)\n    //         .then(response=>response.json())\n    //         .then(data=>console.log(data))\n    //     }\n\n    // },[book])\n\n    useEffect(()=>{\n\n        linkedBookTest = savedBooks.find(book=>book.api_id===params.id)\n        // if (!linkedBookTest)\n        // {\n        //     linkedBook = true\n        // }\n\n        fetch(`http://localhost:3000/books`)\n        .then(response=>response.json())\n        .then(data=>{\n\n            let foundBook = data.find(book=>book.api_id===params.id)\n            setBook(foundBook)\n\n            if (foundBook){\n                setBookId (foundBook.id )\n                setBackEndBook(true)\n            }\n            if (!foundBook){\n                 \n                linkedBook = true\n                fetch(`https://www.googleapis.com/books/v1/volumes/${params.id}`)\n                .then(response => response.json())\n                .then(data=>{\n                    let title = \"\"\n                    let subtitle = \"\"\n                    let authors = [\"\"]\n                    let publisher = \"\"\n                    let publishedDate = \"\"\n                    let description = \"\"\n                    let image_url = \"\"\n                    let api_id = \"\"\n                    if (data.volumeInfo.title){\n                        title = data.volumeInfo.title\n                    }\n                    if (data.volumeInfo.authors){\n                        authors = data.volumeInfo.authors\n                    }\n                    if (data.volumeInfo.subtitle){\n                        subtitle = data.volumeInfo.subtitle\n                    }\n                    if (data.volumeInfo.publisher){\n                        publisher = data.volumeInfo.publisher\n                    }\n                    if (data.volumeInfo.publishedDate){\n                        publishedDate = data.volumeInfo.publishedDate\n                    }\n                    if (data.volumeInfo.description){\n                        description = data.volumeInfo.description\n                    }\n                    if (data.volumeInfo.imageLinks){\n                        image_url = data.volumeInfo.imageLinks.thumbnail\n                    }\n                    if (data.volumeInfo.api_id){\n                        api_id = data.volumeInfo.api_id\n                    }\n                    setBook({\n                        title: title, \n                        subtitle: subtitle, \n                        authors: authors.join(\", \"), \n                        publisher: publisher, \n                        publishedDate: publishedDate, \n                        description: stripHtml(description),\n                        image_url: image_url, \n                        api_id: api_id, \n                        waitings: [],\n                        reviews: []\n                    })\n                })\n            }\n        })\n    },[waitlistRequest, backEndBook, params])\n\n    useEffect(()=>{\n        if (book){\n            if (book.title){\n                let searchTerms = book.title.split(\" \").pop()\n                fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchTerms}&maxResults=3`)\n                .then(response=>response.json())\n                .then(data=>{\n                    setBooksFromSearch(data.items)\n                })\n            }\n        }\n    },[book])\n\n   \n\n    function waitListRequestAndStoreInDBRequest (){\n        if (user){\n                let confObj = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(book),\n                }\n                fetch('http://localhost:3000/books', confObj)\n                .then(response=>response.json())\n                .then(data=>{\n                    setBook(data)\n                    setBookId(data.id)\n                    let bookIdea = data.id\n                    let confObj = {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({user_id: user.id, book_id: bookIdea, fulfilled: false}),\n                    }\n                    fetch('http://localhost:3000/waitings', confObj)\n                    .then(response=>response.json())\n                    .then(data=>{                  \n                        setBackEndBook(true)\n                        setWaitlistRequest(!waitlistRequest)\n                        if (data.error){\n                            alert(`${data.error}`)\n                        }\n                        else{\n                            fetch(`http://localhost:3000/users/${user.id}`)\n                            .then(response=>response.json())\n                            .then(data=>setUser(data))\n                    \n                            fetch(`http://localhost:3000/books`)\n                            .then(response=>response.json())\n                            .then(data=>setSavedBooks(data))\n\n                        }\n                    })\n                })\n        }\n\n        else{\n            alert('Please sign in to join a waitlist.')\n        }\n    }\n\n    if (booksFromSearch.length > 0){\n         booksMapped = booksFromSearch.map(book=>{\n            return(\n                <BookCard book ={book}/>\n            )\n        })\n    }\n    \n\n    if ((backEndBook === true) && (linkedBook === false) && book ){\n\n            waitingsMapped = book.waitings.map(waiting=>{\n                if (waiting.fulfilled !== true){\n                    return<li><Link to={`/otheruserpage/${waiting.user.id}`}>{waiting.user.username}</Link></li>\n                }\n            })\n        \n        waitingsFulfilledMapped = book.waitings.map(waiting=>{\n            if (waiting.fulfilled === true){\n                return<li><Link to={`/otheruserpage/${waiting.user.id}`}>{waiting.user.username}</Link></li>\n            }\n        })\n\n        reviewsMapped = book.reviews.map(review=>{  \n            if (user){\n                return(\n                    <li>\n                        {review.text} - {review.rating} stars - <Link to={`/otheruserpage/${review.user.id}`}>{review.user.username}</Link> \n                \n                        {review.user.id === user.id ? <button id={review.id} onClick={e=>handleCommentDelete(e)}>X</button> :null}\n                    </li>\n                )   \n            }\n            else{\n                return(\n                    <li>\n                        \n                        {review.text} - {review.rating} stars - <Link to={`/otheruserpage/${review.user.id}`}>{review.user.username}</Link> \n                        \n                    </li>\n                )   \n                    \n            }\n        })\n        \n    }\n\n    function handleCommentDelete(e){\n        let reviewId = parseInt(e.target.id)\n        let confObj = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n        fetch(`http://localhost:3000/reviews/${reviewId}`, confObj)\n        .then(data=>setWaitlistRequest(!waitlistRequest))\n\n    }\n\n    function handleToggleRequest(){\n        if (user){\n        setToggleSponsorForm(!toggleSponsorForm)\n        }\n        else{\n        alert(\"Please log in to Sponsor\")\n        }\n    }\n\n    \n    return(\n        <div className=\"bookpage\">\n            <div className=\"book-info\">\n                <img src={ book ? book.image_url: \"N/A\" }></img>\n\n                {/* <button onClick={handleScrapeRequest}>Scrape</button> */}\n                <a href =\"https://www.google.com/\" >google</a>\n\n                <h2>{book? book.title: \"N/A\"}</h2>\n                <h3>{book? book.subtitle: \"N/A\"}</h3>\n                <p>by: {book? book.authors: \"N/A\"} ({book? book.publishedDate: \"N/A\"}) </p>\n                <p>Publishing House: {book? book.publisher: \"N/A\"}</p>\n                <p>Description: {book? book.description: \"N/A\"} </p>\n                <button onClick={waitListRequestAndStoreInDBRequest}>Jump on the Waitlist for this book</button>\n                \n            </div>\n            \n\n            \n        { backEndBook && linkedBook == false && book?\n        <>\n            <div className=\"reviews\">\n                <p>Reviews:</p>\n                {reviewsMapped.length > 0 ? \n                    <ol > {reviewsMapped} </ol> \n                : \"No one has reviewed this book yet. Be the first!\"} \n                <ReviewForm \n                user={user} \n                book={book} \n                waitlistRequest={waitlistRequest} \n                setWaitlistRequest={setWaitlistRequest}\n                backEndBook={backEndBook}\n                setBackEndBook={setBackEndBook}\n                setSavedBooks={setSavedBooks}/>\n            </div>\n\n            <div className=\"bookpage-sponsor-list\">\n                <p>Users who have received this book</p>\n                {waitingsFulfilledMapped.length > 0 ? <ol> {waitingsFulfilledMapped}  </ol>: \"No one has received this book yet. Join the waitlist to be the first!\"}\n                    <button onClick={handleToggleRequest}> Sponsor this Book</button>\n                    {toggleSponsorForm ? \n                        <SponsorForm \n                            waitingsMapped={waitingsMapped} \n                            book={book} \n                            user={user}\n                            setUser={setUser}\n                            waitlistRequest={waitlistRequest}\n                            setWaitlistRequest={setWaitlistRequest}\n                            setBackEndBook={setBackEndBook}\n                            backEndBook={backEndBook}\n                        /> \n                    : null}\n            </div>\n\n            <div className= \"bookpage-waiting-list\">\n                <p>Waitlist:</p>\n                <ol>{ waitingsMapped.length > 0 ? waitingsMapped: \"No one is currently waiting for this book. Be the first!\"} </ol>\n            </div>\n           \n            </>\n        : null\n        }\n\n        <div className = \"similar-books\">\n            {booksFromSearch.length > 0 ? \n                <Card.Group itemsPerRow={3}>\n                    {booksMapped}  \n                </Card.Group>\n            : null}\n        </div>\n\n        </div>\n    )\n\n}\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}