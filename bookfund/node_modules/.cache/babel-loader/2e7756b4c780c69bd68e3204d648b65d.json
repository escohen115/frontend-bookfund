{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConsoleMessage = void 0;\n/**\n * ConsoleMessage objects are dispatched by page via the 'console' event.\n * @public\n */\n\nclass ConsoleMessage {\n  /**\n   * @public\n   */\n  constructor(type, text, args, stackTraceLocations) {\n    this._type = type;\n    this._text = text;\n    this._args = args;\n    this._stackTraceLocations = stackTraceLocations;\n  }\n  /**\n   * @returns The type of the console message.\n   */\n\n\n  type() {\n    return this._type;\n  }\n  /**\n   * @returns The text of the console message.\n   */\n\n\n  text() {\n    return this._text;\n  }\n  /**\n   * @returns An array of arguments passed to the console.\n   */\n\n\n  args() {\n    return this._args;\n  }\n  /**\n   * @returns The location of the console message.\n   */\n\n\n  location() {\n    return this._stackTraceLocations.length ? this._stackTraceLocations[0] : {};\n  }\n  /**\n   * @returns The array of locations on the stack of the console message.\n   */\n\n\n  stackTrace() {\n    return this._stackTraceLocations;\n  }\n\n}\n\nexports.ConsoleMessage = ConsoleMessage;","map":{"version":3,"sources":["../../../../src/common/ConsoleMessage.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;AAgDH;;;AAGG;;AACH,MAAa,cAAb,CAA2B;AAMzB;;AAEG;AACH,EAAA,WAAA,CACE,IADF,EAEE,IAFF,EAGE,IAHF,EAIE,mBAJF,EAI+C;AAE7C,SAAK,KAAL,GAAa,IAAb;AACA,SAAK,KAAL,GAAa,IAAb;AACA,SAAK,KAAL,GAAa,IAAb;AACA,SAAK,oBAAL,GAA4B,mBAA5B;AACD;AAED;;AAEG;;;AACH,EAAA,IAAI,GAAA;AACF,WAAO,KAAK,KAAZ;AACD;AAED;;AAEG;;;AACH,EAAA,IAAI,GAAA;AACF,WAAO,KAAK,KAAZ;AACD;AAED;;AAEG;;;AACH,EAAA,IAAI,GAAA;AACF,WAAO,KAAK,KAAZ;AACD;AAED;;AAEG;;;AACH,EAAA,QAAQ,GAAA;AACN,WAAO,KAAK,oBAAL,CAA0B,MAA1B,GAAmC,KAAK,oBAAL,CAA0B,CAA1B,CAAnC,GAAkE,EAAzE;AACD;AAED;;AAEG;;;AACH,EAAA,UAAU,GAAA;AACR,WAAO,KAAK,oBAAZ;AACD;;AAtDwB;;AAA3B,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleMessage = void 0;\n/**\n * ConsoleMessage objects are dispatched by page via the 'console' event.\n * @public\n */\nclass ConsoleMessage {\n    /**\n     * @public\n     */\n    constructor(type, text, args, stackTraceLocations) {\n        this._type = type;\n        this._text = text;\n        this._args = args;\n        this._stackTraceLocations = stackTraceLocations;\n    }\n    /**\n     * @returns The type of the console message.\n     */\n    type() {\n        return this._type;\n    }\n    /**\n     * @returns The text of the console message.\n     */\n    text() {\n        return this._text;\n    }\n    /**\n     * @returns An array of arguments passed to the console.\n     */\n    args() {\n        return this._args;\n    }\n    /**\n     * @returns The location of the console message.\n     */\n    location() {\n        return this._stackTraceLocations.length ? this._stackTraceLocations[0] : {};\n    }\n    /**\n     * @returns The array of locations on the stack of the console message.\n     */\n    stackTrace() {\n        return this._stackTraceLocations;\n    }\n}\nexports.ConsoleMessage = ConsoleMessage;\n//# sourceMappingURL=ConsoleMessage.js.map"]},"metadata":{},"sourceType":"script"}