{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/ReviewForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ReactStars from 'react-stars';\nimport { Button, Comment, Form, Header } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReviewForm({\n  user,\n  book,\n  setSavedBooks,\n  setWaitlistRequest,\n  waitlistRequest,\n  waitListRequestAndStoreInDBRequest,\n  backEndBook,\n  setBackEndBook,\n  setToggleSponsorForm,\n  toggleSponsorForm\n}) {\n  _s();\n\n  const [formState, setFormState] = useState({\n    text: \"\",\n    rating: 0\n  });\n\n  function handleChange(e) {\n    if (user && backEndBook) {\n      setFormState({\n        user_id: user.id,\n        book_id: book.id,\n        ...formState,\n        [e.target.name]: e.target.value\n      });\n    } else {\n      setFormState({});\n      alert(\"Please sign in to leave a review.\");\n    }\n  }\n\n  function ratingChanged(e) {\n    if (user && backEndBook) {\n      setFormState({ ...formState,\n        rating: e\n      });\n    } else {\n      setFormState({});\n      alert(\"Please sign in to leave a rating.\");\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (formState.text.length < 100) {\n      alert(\"Please leave a review with more than 100 characters.\");\n    }\n\n    if (formState.text.length > 100) {\n      let confObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formState)\n      };\n      fetch('http://localhost:3000/reviews', confObj).then(data => {\n        setWaitlistRequest(!waitlistRequest);\n        setBackEndBook(true);\n        fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => {\n          setSavedBooks(data);\n        });\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Leave A Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactStars, {\n      className: \"react-stars\",\n      count: 5,\n      onChange: ratingChanged,\n      size: 20,\n      color2: '#ffd700',\n      value: formState.rating,\n      name: \"rating\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      reply: true,\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Form.TextArea, {\n        value: formState.text,\n        name: \"text\",\n        rows: 3,\n        cols: 25,\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        content: \"Add Review\",\n        labelPosition: \"left\",\n        icon: \"edit\",\n        primary: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReviewForm, \"XLR+wPr7m34RpcwZfxpltVf0OfE=\");\n\n_c = ReviewForm;\n{\n  /* {formState.text.length < 100 ? (\n  <p style={{ color: \"red\" }}>Please leave a review with more than 100 characters</p>\n  ) : null} */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/ReviewForm.js"],"names":["useState","ReactStars","Button","Comment","Form","Header","ReviewForm","user","book","setSavedBooks","setWaitlistRequest","waitlistRequest","waitListRequestAndStoreInDBRequest","backEndBook","setBackEndBook","setToggleSponsorForm","toggleSponsorForm","formState","setFormState","text","rating","handleChange","e","user_id","id","book_id","target","name","value","alert","ratingChanged","handleSubmit","preventDefault","length","confObj","method","headers","body","JSON","stringify","fetch","then","data","response","json"],"mappings":"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","sourcesContent":["import {useState } from \"react\";\nimport ReactStars from 'react-stars'\nimport { Button, Comment, Form, Header } from 'semantic-ui-react'\n\nexport default function ReviewForm ({user, book, setSavedBooks, setWaitlistRequest, waitlistRequest, waitListRequestAndStoreInDBRequest, backEndBook, setBackEndBook, setToggleSponsorForm, toggleSponsorForm}){\n\n    \n    const [formState, setFormState] = useState({\n        text: \"\",\n        rating: 0\n    })\n\n    function handleChange(e){    \n        if (user && backEndBook){\n            setFormState({\n                user_id: user.id, \n                book_id: book.id,\n                ...formState,\n                [e.target.name] : e.target.value\n            })\n        }\n        else{\n            setFormState({})\n            alert(\"Please sign in to leave a review.\")\n        }\n    }\n\n    function ratingChanged(e){\n         if (user && backEndBook){\n            setFormState({\n                ...formState,\n                rating: e\n            })\n        }\n        else{\n            setFormState({})\n            alert(\"Please sign in to leave a rating.\")\n        }\n    }\n\n    function handleSubmit(e){\n        e.preventDefault()\n        if (formState.text.length < 100){\n            alert(\"Please leave a review with more than 100 characters.\")\n        }\n        if (formState.text.length > 100){\n            let confObj = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(formState),\n                }\n            fetch('http://localhost:3000/reviews', confObj)\n            .then(data=>{\n                setWaitlistRequest(!waitlistRequest)\n                setBackEndBook(true)\n                fetch(`http://localhost:3000/books`)\n                .then(response=>response.json())\n                .then(data=>{setSavedBooks(data)})\n            })\n            \n        }\n    }\n\n    return (\n    <div>\n        <h3>Leave A Review</h3>\n        <ReactStars\n            className=\"react-stars\"\n            count={5}\n            onChange={ratingChanged}\n            size={20}\n            color2={'#ffd700'} \n            value={formState.rating}\n            name=\"rating\"/>\n{/* \n        <form id=\"review-form\" onSubmit={e=>handleSubmit(e)} >\n            <textarea   \n                value={formState.text}\n                name=\"text\"             \n                rows={3}\n                cols={25}\n                onChange={e=>handleChange(e)}\n            />\n            <button type='submit'> Submit </button>\n        </form> */}\n\n        <Form reply onSubmit={e=>handleSubmit(e)}>\n            <Form.TextArea \n                value={formState.text}\n                name=\"text\"             \n                rows={3}\n                cols={25}\n                onChange={e=>handleChange(e)}/>\n            <Button type='submit' content='Add Review' labelPosition='left' icon='edit' primary />\n        </Form>\n        \n    </div> \n    )\n    \n}\n{/* {formState.text.length < 100 ? (\n<p style={{ color: \"red\" }}>Please leave a review with more than 100 characters</p>\n) : null} */}"]},"metadata":{},"sourceType":"module"}