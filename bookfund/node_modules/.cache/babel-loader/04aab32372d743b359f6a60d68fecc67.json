{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Timer = ({\n  mostRecent\n}) => {\n  _s();\n\n  const [timerDays, setTimerDays] = useState(0);\n  const [timerHours, setTimerHours] = useState(0);\n  const [timerMinutes, setTimerMinutes] = useState(0);\n  const [timerSeconds, setTimerSeconds] = useState(0);\n  const [timer, setTimer] = useState(true);\n  let interval = useRef();\n\n  const startTimer = () => {\n    // const countDownDate = new Date(parseInt(mostRecent)+1209600000)\n    const countDownDate = new Date(parseInt(mostRecent) + 1209600000);\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const timeLeft = countDownDate - now;\n      const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(timeLeft % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(timeLeft % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(timeLeft % (1000 * 60) / 1000);\n\n      if (timeLeft < 0) {\n        setTimer(false);\n        clearInterval(interval.current);\n      } else {\n        //update timer\n        setTimerDays(days);\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    startTimer();\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"days:\", timerDays]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"hours:\", timerHours]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"minutes:\", timerMinutes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"seconds:\", timerSeconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : \"Looks like there's no time remaining until your next book!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Timer, \"av5iiODoqtzw7sd/yCuGy/uh3D0=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/Timer.js"],"names":["React","useState","useRef","useEffect","Timer","mostRecent","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","timer","setTimer","interval","startTimer","countDownDate","Date","parseInt","setInterval","now","getTime","timeLeft","days","Math","floor","hours","minutes","seconds","clearInterval","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,CAAD,CAAhD;AAEA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AAEA,MAAIe,QAAQ,GAAGd,MAAM,EAArB;;AAEA,QAAMe,UAAU,GAAG,MAAM;AAErB;AAEA,UAAMC,aAAa,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACf,UAAD,CAAR,GAAqB,UAA9B,CAAtB;AAKAW,IAAAA,QAAQ,GAAGK,WAAW,CAAC,MAAI;AACvB,YAAMC,GAAG,GAAG,IAAIH,IAAJ,GAAWI,OAAX,EAAZ;AACA,YAAMC,QAAQ,GAAGN,aAAa,GAAGI,GAAjC;AAEA,YAAMG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAgB,EAApB,CAAnB,CAAb;AACA,YAAMI,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAgB,EAApB,CAAR,IAAmC,OAAK,EAAL,GAAQ,EAA3C,CAAZ,CAAd;AACA,YAAMK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAR,IAA+B,OAAO,EAAtC,CAAZ,CAAhB;AACA,YAAMM,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAhB;;AAEA,UAAIA,QAAQ,GAAG,CAAf,EAAiB;AACbT,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAgB,QAAAA,aAAa,CAACf,QAAQ,CAACgB,OAAV,CAAb;AACH,OAHD,MAII;AACA;AACAzB,QAAAA,YAAY,CAACkB,IAAD,CAAZ;AACAhB,QAAAA,aAAa,CAACmB,KAAD,CAAb;AACAjB,QAAAA,eAAe,CAACkB,OAAD,CAAf;AACAhB,QAAAA,eAAe,CAACiB,OAAD,CAAf;AACH;AAEJ,KArBqB,EAqBnB,IArBmB,CAAtB;AAsBH,GA/BD;;AAiCA3B,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,UAAU;AACV,WAAM,MAAI;AACNc,MAAAA,aAAa,CAACf,QAAQ,CAACgB,OAAV,CAAb;AACH,KAFD;AAGH,GALQ,CAAT;AAOA,sBACI;AAAA,cACElB,KAAK,gBACH;AAAA,8BACA;AAAA,4BAASR,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,6BAAUE,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,+BAAYE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAA,+BAAYE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA,oBADG,GAOD;AARN;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA/DD;;GAAMR,K;;KAAAA,K;AAiEN,eAAeA,KAAf","sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\n\n \nconst Timer = ({mostRecent})=>{\n    \n    const [timerDays, setTimerDays] = useState(0)\n    const [timerHours, setTimerHours] = useState(0)\n    const [timerMinutes, setTimerMinutes] = useState(0)\n    const [timerSeconds, setTimerSeconds] = useState(0)\n\n    const [timer, setTimer] = useState(true)\n\n    let interval = useRef()\n\n    const startTimer = () => {\n\n        // const countDownDate = new Date(parseInt(mostRecent)+1209600000)\n        \n        const countDownDate = new Date(parseInt(mostRecent)+1209600000)\n\n\n\n   \n        interval = setInterval(()=>{\n            const now = new Date().getTime()\n            const timeLeft = countDownDate - now\n\n            const days = Math.floor(timeLeft / (1000 * 60 * 60 *24))\n            const hours = Math.floor((timeLeft % (1000 * 60 * 60 *24) / (1000*60*60)))\n            const minutes = Math.floor((timeLeft % (1000 * 60 * 60) / (1000 * 60)))\n            const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000)\n            \n            if (timeLeft < 0){\n                setTimer(false)\n                clearInterval(interval.current)\n            }\n            else{\n                //update timer\n                setTimerDays(days)\n                setTimerHours(hours)\n                setTimerMinutes(minutes)\n                setTimerSeconds(seconds)\n            }\n\n        }, 1000)\n    }\n\n    useEffect(()=>{\n        startTimer()\n        return()=>{\n            clearInterval(interval.current)\n        }\n    })\n    \n    return (\n        <div>\n        { timer ?  \n            <>\n            <p>days:{timerDays}</p>\n            <p>hours:{timerHours}</p>\n            <p>minutes:{timerMinutes}</p>\n            <p>seconds:{timerSeconds}</p>\n            </>\n            : \"Looks like there's no time remaining until your next book!\"}\n        </div> \n    )\n}\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}