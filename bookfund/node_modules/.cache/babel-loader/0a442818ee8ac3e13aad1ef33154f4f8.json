{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserPage({\n  user\n}) {\n  _s();\n\n  const [userWaitings, setUserWaitings] = useState([]);\n  const [savedBooks, setSavedBooks] = useState([]);\n  let waitingsMapped = [];\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => setSavedBooks(data));\n  }, []);\n\n  if (user) {\n    //     let waitlistMapped = waitingsUnfulfilled.map(waiting=>{\n    //         return <li>a</li>\n    //     })\n    let waitingsUnfulfilled = user.waitings.filter(waiting => waiting.fulfilled !== true);\n\n    for (let i = 0; i < waitingsUnfulfilled.length; i++) {\n      let foundCopy = savedBooks.find(saved_book => saved_book.id = waitingsUnfulfilled[i].book_id);\n      waitingsMapped.push(foundCopy);\n    }\n\n    console.log(waitingsMapped);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profile_pic ? user.profile_pic : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name:\", user.name ? user.name : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"email:\", user.email ? user.email : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"username:\", user.username ? user.username : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bio:\", user.bio ? user.bio : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"waitlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"sponsored list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"received list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(UserPage, \"jbUGyUKxW/ehCG6zMrg0OWKcSXU=\");\n\n_c = UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/UserPage.js"],"names":["React","useState","useEffect","UserPage","user","userWaitings","setUserWaitings","savedBooks","setSavedBooks","waitingsMapped","fetch","then","response","json","data","waitingsUnfulfilled","waitings","filter","waiting","fulfilled","i","length","foundCopy","find","saved_book","id","book_id","push","console","log","profile_pic","name","email","username","bio"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAyB;AAAA;;AAEpC,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAIQ,cAAc,GAAG,EAArB;AAEAP,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,KAAK,CAAE,6BAAF,CAAL,CACCC,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAEN,aAAa,CAACM,IAAD,CAFzB;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAMA,MAAIV,IAAJ,EAAS;AAET;AACA;AACA;AAGA,QAAIW,mBAAmB,GAAGX,IAAI,CAACY,QAAL,CAAcC,MAAd,CAAqBC,OAAO,IAAEA,OAAO,CAACC,SAAR,KAAoB,IAAlD,CAA1B;;AAEA,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAACL,mBAAmB,CAACM,MAAnC,EAA0CD,CAAC,EAA3C,EAA8C;AAC1C,UAAIE,SAAS,GAAGf,UAAU,CAACgB,IAAX,CAAgBC,UAAU,IAAGA,UAAU,CAACC,EAAX,GAAgBV,mBAAmB,CAACK,CAAD,CAAnB,CAAuBM,OAApE,CAAhB;AACAjB,MAAAA,cAAc,CAACkB,IAAf,CAAoBL,SAApB;AACH;;AAEDM,IAAAA,OAAO,CAACC,GAAR,CAAYpB,cAAZ;AAUA,wBACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEL,IAAI,CAAC0B,WAAL,GAAmB1B,IAAI,CAAC0B,WAAxB,GAAsC;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,4BAAS1B,IAAI,CAAC2B,IAAL,GAAY3B,IAAI,CAAC2B,IAAjB,GAAwB,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,6BAAU3B,IAAI,CAAC4B,KAAL,GAAa5B,IAAI,CAAC4B,KAAlB,GAA0B,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,gCAAa5B,IAAI,CAAC6B,QAAL,GAAgB7B,IAAI,CAAC6B,QAArB,GAAgC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,2BAAQ7B,IAAI,CAAC8B,GAAL,GAAW9B,IAAI,CAAC8B,GAAhB,GAAsB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYE,GApCF,MAqCI;AACA,WAAO,IAAP;AACH;AACJ;;GApDuB/B,Q;;KAAAA,Q","sourcesContent":["\nimport React, { useState, useEffect } from \"react\"\n\nexport default function UserPage({user}){\n    \n    const[userWaitings, setUserWaitings] = useState([])\n    const [savedBooks, setSavedBooks] = useState([])\n    let waitingsMapped = []\n\n    useEffect(()=>{\n        fetch(`http://localhost:3000/books`)\n        .then(response=>response.json())\n        .then(data=>setSavedBooks(data))\n    },[])\n\n    if (user){\n\n    //     let waitlistMapped = waitingsUnfulfilled.map(waiting=>{\n    //         return <li>a</li>\n    //     })\n\n        \n    let waitingsUnfulfilled = user.waitings.filter(waiting=>waiting.fulfilled!==true)\n\n    for(let i =0;i<waitingsUnfulfilled.length;i++){\n        let foundCopy = savedBooks.find(saved_book=> saved_book.id = waitingsUnfulfilled[i].book_id)\n        waitingsMapped.push(foundCopy)\n    }   \n\n    console.log(waitingsMapped)\n\n    \n\n\n\n\n    \n\n\n    return(\n        <div> \n            <img src={user.profile_pic ? user.profile_pic : null}></img>\n            <p>name:{user.name ? user.name : null}</p>\n            <p>email:{user.email ? user.email : null}</p>\n            <p>username:{user.username ? user.username : null }</p>\n            <p>bio:{user.bio ? user.bio : null}</p>\n            <p>waitlist</p>\n            <ul></ul>\n            <p>sponsored list</p>\n            <p>received list</p>\n        </div>\n    )}\n    else{\n        return null\n    }\n}"]},"metadata":{},"sourceType":"module"}