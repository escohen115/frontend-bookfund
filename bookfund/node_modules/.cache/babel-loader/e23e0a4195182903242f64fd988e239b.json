{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/ReviewForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ReactStars from 'react-stars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReviewForm({\n  user,\n  book,\n  setSavedBooks,\n  setWaitlistRequest,\n  waitlistRequest,\n  waitListRequestAndStoreInDBRequest,\n  backEndBook,\n  setBackEndBook\n}) {\n  _s();\n\n  const [formState, setFormState] = useState({\n    text: \"\"\n  });\n\n  function handleChange(e) {\n    // waitListRequestAndStoreInDBRequest()\n    if (user && backEndBook) {\n      setFormState({\n        user_id: user.id,\n        book_id: book.id,\n        ...formState,\n        [e.target.name]: e.target.value\n      });\n    } else {\n      setFormState({});\n      alert(\"please sign in to leave a review\");\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (formState.text.length > 100) {\n      alert(\"Please leave a review with more than 100 characters.\");\n    }\n\n    if (formState.text.length > 100) {\n      let confObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formState)\n      };\n      fetch('http://localhost:3000/reviews', confObj).then(data => {\n        setWaitlistRequest(!waitlistRequest);\n        setBackEndBook(true);\n        fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => {\n          setSavedBooks(data);\n        });\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Leave A Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactStars, {\n      className: \"react-stars\",\n      count: 5,\n      onChange: e => console.log(e),\n      size: 24,\n      color2: '#ffd700'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"review-form\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: formState.text,\n        name: \"text\",\n        rows: 3,\n        cols: 25,\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReviewForm, \"pvv3H2EsiXe9A6PBXj6GDtKBtLw=\");\n\n_c = ReviewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/BookPage/ReviewForm.js"],"names":["useState","ReactStars","ReviewForm","user","book","setSavedBooks","setWaitlistRequest","waitlistRequest","waitListRequestAndStoreInDBRequest","backEndBook","setBackEndBook","formState","setFormState","text","handleChange","e","user_id","id","book_id","target","name","value","alert","handleSubmit","preventDefault","length","confObj","method","headers","body","JSON","stringify","fetch","then","data","response","json","console","log"],"mappings":"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","sourcesContent":["import {useState } from \"react\";\nimport ReactStars from 'react-stars'\n\nexport default function ReviewForm ({user, book, setSavedBooks, setWaitlistRequest, waitlistRequest, waitListRequestAndStoreInDBRequest, backEndBook, setBackEndBook}){\n\n    \n    const [formState, setFormState] = useState({\n        text: \"\"\n    })\n\n    function handleChange(e){\n        // waitListRequestAndStoreInDBRequest()\n    \n        if (user && backEndBook){\n            setFormState({\n                user_id: user.id, \n                book_id: book.id,\n                ...formState,\n                [e.target.name] : e.target.value\n            })\n        }\n        else{\n            setFormState({})\n            alert(\"please sign in to leave a review\")\n        }\n    }\n\n    function handleSubmit(e){\n        e.preventDefault()\n        if (formState.text.length > 100){\n            alert(\"Please leave a review with more than 100 characters.\")\n        }\n        if (formState.text.length > 100){\n            let confObj = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(formState),\n                }\n            fetch('http://localhost:3000/reviews', confObj)\n            .then(data=>{\n                setWaitlistRequest(!waitlistRequest)\n                setBackEndBook(true)\n                fetch(`http://localhost:3000/books`)\n                .then(response=>response.json())\n                .then(data=>{setSavedBooks(data)})\n            })\n            \n        }\n    }\n\n    return (\n    <div>\n        <h3>Leave A Review</h3>\n        <ReactStars\n            className=\"react-stars\"\n            count={5}\n            onChange={e=>console.log(e)}\n            size={24}\n            color2={'#ffd700'} />\n\n        <form id=\"review-form\" onSubmit={e=>handleSubmit(e)} >\n            <textarea   \n                value={formState.text}\n                name=\"text\"             \n                rows={3}\n                cols={25}\n                onChange={e=>handleChange(e)}\n            />\n            {/* {formState.text.length < 100 ? (\n            <p style={{ color: \"red\" }}>Please leave a review with more than 100 characters</p>\n            ) : null} */}\n            <button type='submit'> Submit </button>\n        </form>\n        \n    </div> \n    )\n    \n}"]},"metadata":{},"sourceType":"module"}