{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserPage({\n  user\n}) {\n  _s();\n\n  debugger;\n  const [userWaitings, setUserWaitings] = useState([]);\n  const [savedBooks, setSavedBooks] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`).then(response => response.json()).then(data => setSavedBooks(data));\n  }, []);\n\n  if (user) {\n    // fetch(`http://localhost:3000/waitings/user/${user.id}`)\n    // .then(response=>response.json())\n    // .then(data=>console.log(data))\n    //     let waitlistMapped = waitingsUnfulfilled.map(waiting=>{\n    //         return <li>a</li>\n    //     })\n    let waitingsUnfulfilled = user.waitings.filter(waiting => waiting.fulfilled !== true);\n    waitingsUnfulfilled.map(waiting => {\n      let foundCopy = savedBooks.find(saved_book => saved_book.id = waiting.book_id);\n      waitingsMapped;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profile_pic ? user.profile_pic : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name:\", user.name ? user.name : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"email:\", user.email ? user.email : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"username:\", user.username ? user.username : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bio:\", user.bio ? user.bio : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"waitlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"sponsored list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"received list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(UserPage, \"jbUGyUKxW/ehCG6zMrg0OWKcSXU=\");\n\n_c = UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/UserPage.js"],"names":["React","useState","UserPage","user","userWaitings","setUserWaitings","savedBooks","setSavedBooks","useEffect","fetch","then","response","json","data","waitingsUnfulfilled","waitings","filter","waiting","fulfilled","map","foundCopy","find","saved_book","id","book_id","waitingsMapped","profile_pic","name","email","username","bio"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAyB;AAAA;;AACpC;AAEA,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACAO,EAAAA,SAAS,CAAC,MAAI;AACVC,IAAAA,KAAK,CAAE,6BAAF,CAAL,CACCC,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAEN,aAAa,CAACM,IAAD,CAFzB;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAMA,MAAIV,IAAJ,EAAS;AACL;AACA;AACA;AAIJ;AACA;AACA;AAGA,QAAIW,mBAAmB,GAAGX,IAAI,CAACY,QAAL,CAAcC,MAAd,CAAqBC,OAAO,IAAEA,OAAO,CAACC,SAAR,KAAoB,IAAlD,CAA1B;AACAJ,IAAAA,mBAAmB,CAACK,GAApB,CAAwBF,OAAO,IAAE;AAC7B,UAAIG,SAAS,GAAGd,UAAU,CAACe,IAAX,CAAgBC,UAAU,IAAGA,UAAU,CAACC,EAAX,GAAgBN,OAAO,CAACO,OAArD,CAAhB;AACAC,MAAAA,cAAc;AACjB,KAHD;AAaA,wBACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEtB,IAAI,CAACuB,WAAL,GAAmBvB,IAAI,CAACuB,WAAxB,GAAsC;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,4BAASvB,IAAI,CAACwB,IAAL,GAAYxB,IAAI,CAACwB,IAAjB,GAAwB,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,6BAAUxB,IAAI,CAACyB,KAAL,GAAazB,IAAI,CAACyB,KAAlB,GAA0B,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,gCAAazB,IAAI,CAAC0B,QAAL,GAAgB1B,IAAI,CAAC0B,QAArB,GAAgC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,2BAAQ1B,IAAI,CAAC2B,GAAL,GAAW3B,IAAI,CAAC2B,GAAhB,GAAsB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYE,GAtCF,MAuCI;AACA,WAAO,IAAP;AACH;AACJ;;GArDuB5B,Q;;KAAAA,Q","sourcesContent":["\nimport React, { useState } from \"react\"\n\nexport default function UserPage({user}){\n    debugger\n    \n    const[userWaitings, setUserWaitings] = useState([])\n    const [savedBooks, setSavedBooks] = useState([])\n    useEffect(()=>{\n        fetch(`http://localhost:3000/books`)\n        .then(response=>response.json())\n        .then(data=>setSavedBooks(data))\n    },[])\n\n    if (user){\n        // fetch(`http://localhost:3000/waitings/user/${user.id}`)\n        // .then(response=>response.json())\n        // .then(data=>console.log(data))\n\n\n    \n    //     let waitlistMapped = waitingsUnfulfilled.map(waiting=>{\n    //         return <li>a</li>\n    //     })\n\n        \n    let waitingsUnfulfilled = user.waitings.filter(waiting=>waiting.fulfilled!==true)\n    waitingsUnfulfilled.map(waiting=>{\n        let foundCopy = savedBooks.find(saved_book=> saved_book.id = waiting.book_id)\n        waitingsMapped\n    })\n\n    \n\n\n\n\n    \n\n\n    return(\n        <div> \n            <img src={user.profile_pic ? user.profile_pic : null}></img>\n            <p>name:{user.name ? user.name : null}</p>\n            <p>email:{user.email ? user.email : null}</p>\n            <p>username:{user.username ? user.username : null }</p>\n            <p>bio:{user.bio ? user.bio : null}</p>\n            <p>waitlist</p>\n            <ul></ul>\n            <p>sponsored list</p>\n            <p>received list</p>\n        </div>\n    )}\n    else{\n        return null\n    }\n}"]},"metadata":{},"sourceType":"module"}