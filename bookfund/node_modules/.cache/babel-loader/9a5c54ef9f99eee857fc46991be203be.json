{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Target = void 0;\n\nconst Page_js_1 = require(\"./Page.js\");\n\nconst WebWorker_js_1 = require(\"./WebWorker.js\");\n/**\n * @public\n */\n\n\nclass Target {\n  /**\n   * @internal\n   */\n  constructor(targetInfo, browserContext, sessionFactory, ignoreHTTPSErrors, defaultViewport) {\n    this._targetInfo = targetInfo;\n    this._browserContext = browserContext;\n    this._targetId = targetInfo.targetId;\n    this._sessionFactory = sessionFactory;\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    /** @type {?Promise<!Puppeteer.Page>} */\n\n    this._pagePromise = null;\n    /** @type {?Promise<!WebWorker>} */\n\n    this._workerPromise = null;\n    this._initializedPromise = new Promise(fulfill => this._initializedCallback = fulfill).then(async success => {\n      if (!success) return false;\n      const opener = this.opener();\n      if (!opener || !opener._pagePromise || this.type() !== 'page') return true;\n      const openerPage = await opener._pagePromise;\n      if (!openerPage.listenerCount(\"popup\"\n      /* Popup */\n      )) return true;\n      const popupPage = await this.page();\n      openerPage.emit(\"popup\"\n      /* Popup */\n      , popupPage);\n      return true;\n    });\n    this._isClosedPromise = new Promise(fulfill => this._closedCallback = fulfill);\n    this._isInitialized = this._targetInfo.type !== 'page' || this._targetInfo.url !== '';\n    if (this._isInitialized) this._initializedCallback(true);\n  }\n  /**\n   * Creates a Chrome Devtools Protocol session attached to the target.\n   */\n\n\n  createCDPSession() {\n    return this._sessionFactory();\n  }\n  /**\n   * If the target is not of type `\"page\"` or `\"background_page\"`, returns `null`.\n   */\n\n\n  async page() {\n    if ((this._targetInfo.type === 'page' || this._targetInfo.type === 'background_page' || this._targetInfo.type === 'webview') && !this._pagePromise) {\n      this._pagePromise = this._sessionFactory().then(client => Page_js_1.Page.create(client, this, this._ignoreHTTPSErrors, this._defaultViewport));\n    }\n\n    return this._pagePromise;\n  }\n  /**\n   * If the target is not of type `\"service_worker\"` or `\"shared_worker\"`, returns `null`.\n   */\n\n\n  async worker() {\n    if (this._targetInfo.type !== 'service_worker' && this._targetInfo.type !== 'shared_worker') return null;\n\n    if (!this._workerPromise) {\n      // TODO(einbinder): Make workers send their console logs.\n      this._workerPromise = this._sessionFactory().then(client => new WebWorker_js_1.WebWorker(client, this._targetInfo.url, () => {}\n      /* consoleAPICalled */\n      , () => {}\n      /* exceptionThrown */\n      ));\n    }\n\n    return this._workerPromise;\n  }\n\n  url() {\n    return this._targetInfo.url;\n  }\n  /**\n   * Identifies what kind of target this is.\n   *\n   * @remarks\n   *\n   * See {@link https://developer.chrome.com/extensions/background_pages | docs} for more info about background pages.\n   */\n\n\n  type() {\n    const type = this._targetInfo.type;\n    if (type === 'page' || type === 'background_page' || type === 'service_worker' || type === 'shared_worker' || type === 'browser' || type === 'webview') return type;\n    return 'other';\n  }\n  /**\n   * Get the browser the target belongs to.\n   */\n\n\n  browser() {\n    return this._browserContext.browser();\n  }\n\n  browserContext() {\n    return this._browserContext;\n  }\n  /**\n   * Get the target that opened this target. Top-level targets return `null`.\n   */\n\n\n  opener() {\n    const {\n      openerId\n    } = this._targetInfo;\n    if (!openerId) return null;\n    return this.browser()._targets.get(openerId);\n  }\n  /**\n   * @internal\n   */\n\n\n  _targetInfoChanged(targetInfo) {\n    this._targetInfo = targetInfo;\n\n    if (!this._isInitialized && (this._targetInfo.type !== 'page' || this._targetInfo.url !== '')) {\n      this._isInitialized = true;\n\n      this._initializedCallback(true);\n\n      return;\n    }\n  }\n\n}\n\nexports.Target = Target;","map":{"version":3,"sources":["../../../../src/common/Target.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Target = void 0;\nconst Page_js_1 = require(\"./Page.js\");\nconst WebWorker_js_1 = require(\"./WebWorker.js\");\n/**\n * @public\n */\nclass Target {\n    /**\n     * @internal\n     */\n    constructor(targetInfo, browserContext, sessionFactory, ignoreHTTPSErrors, defaultViewport) {\n        this._targetInfo = targetInfo;\n        this._browserContext = browserContext;\n        this._targetId = targetInfo.targetId;\n        this._sessionFactory = sessionFactory;\n        this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n        this._defaultViewport = defaultViewport;\n        /** @type {?Promise<!Puppeteer.Page>} */\n        this._pagePromise = null;\n        /** @type {?Promise<!WebWorker>} */\n        this._workerPromise = null;\n        this._initializedPromise = new Promise((fulfill) => (this._initializedCallback = fulfill)).then(async (success) => {\n            if (!success)\n                return false;\n            const opener = this.opener();\n            if (!opener || !opener._pagePromise || this.type() !== 'page')\n                return true;\n            const openerPage = await opener._pagePromise;\n            if (!openerPage.listenerCount(\"popup\" /* Popup */))\n                return true;\n            const popupPage = await this.page();\n            openerPage.emit(\"popup\" /* Popup */, popupPage);\n            return true;\n        });\n        this._isClosedPromise = new Promise((fulfill) => (this._closedCallback = fulfill));\n        this._isInitialized =\n            this._targetInfo.type !== 'page' || this._targetInfo.url !== '';\n        if (this._isInitialized)\n            this._initializedCallback(true);\n    }\n    /**\n     * Creates a Chrome Devtools Protocol session attached to the target.\n     */\n    createCDPSession() {\n        return this._sessionFactory();\n    }\n    /**\n     * If the target is not of type `\"page\"` or `\"background_page\"`, returns `null`.\n     */\n    async page() {\n        if ((this._targetInfo.type === 'page' ||\n            this._targetInfo.type === 'background_page' ||\n            this._targetInfo.type === 'webview') &&\n            !this._pagePromise) {\n            this._pagePromise = this._sessionFactory().then((client) => Page_js_1.Page.create(client, this, this._ignoreHTTPSErrors, this._defaultViewport));\n        }\n        return this._pagePromise;\n    }\n    /**\n     * If the target is not of type `\"service_worker\"` or `\"shared_worker\"`, returns `null`.\n     */\n    async worker() {\n        if (this._targetInfo.type !== 'service_worker' &&\n            this._targetInfo.type !== 'shared_worker')\n            return null;\n        if (!this._workerPromise) {\n            // TODO(einbinder): Make workers send their console logs.\n            this._workerPromise = this._sessionFactory().then((client) => new WebWorker_js_1.WebWorker(client, this._targetInfo.url, () => { } /* consoleAPICalled */, () => { } /* exceptionThrown */));\n        }\n        return this._workerPromise;\n    }\n    url() {\n        return this._targetInfo.url;\n    }\n    /**\n     * Identifies what kind of target this is.\n     *\n     * @remarks\n     *\n     * See {@link https://developer.chrome.com/extensions/background_pages | docs} for more info about background pages.\n     */\n    type() {\n        const type = this._targetInfo.type;\n        if (type === 'page' ||\n            type === 'background_page' ||\n            type === 'service_worker' ||\n            type === 'shared_worker' ||\n            type === 'browser' ||\n            type === 'webview')\n            return type;\n        return 'other';\n    }\n    /**\n     * Get the browser the target belongs to.\n     */\n    browser() {\n        return this._browserContext.browser();\n    }\n    browserContext() {\n        return this._browserContext;\n    }\n    /**\n     * Get the target that opened this target. Top-level targets return `null`.\n     */\n    opener() {\n        const { openerId } = this._targetInfo;\n        if (!openerId)\n            return null;\n        return this.browser()._targets.get(openerId);\n    }\n    /**\n     * @internal\n     */\n    _targetInfoChanged(targetInfo) {\n        this._targetInfo = targetInfo;\n        if (!this._isInitialized &&\n            (this._targetInfo.type !== 'page' || this._targetInfo.url !== '')) {\n            this._isInitialized = true;\n            this._initializedCallback(true);\n            return;\n        }\n    }\n}\nexports.Target = Target;\n//# sourceMappingURL=Target.js.map"]},"metadata":{},"sourceType":"script"}