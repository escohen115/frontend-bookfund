{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initializePuppeteerNode = void 0;\n\nconst Puppeteer_js_1 = require(\"./node/Puppeteer.js\");\n\nconst revisions_js_1 = require(\"./revisions.js\");\n\nconst pkg_dir_1 = __importDefault(require(\"pkg-dir\"));\n\nexports.initializePuppeteerNode = packageName => {\n  const puppeteerRootDirectory = pkg_dir_1.default.sync(__dirname);\n  let preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.chromium;\n  const isPuppeteerCore = packageName === 'puppeteer-core'; // puppeteer-core ignores environment variables\n\n  const productName = isPuppeteerCore ? undefined : process.env.PUPPETEER_PRODUCT || process.env.npm_config_puppeteer_product || process.env.npm_package_config_puppeteer_product;\n  if (!isPuppeteerCore && productName === 'firefox') preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.firefox;\n  return new Puppeteer_js_1.PuppeteerNode({\n    projectRoot: puppeteerRootDirectory,\n    preferredRevision,\n    isPuppeteerCore,\n    productName: productName\n  });\n};","map":{"version":3,"sources":["../../../src/initialize-node.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;;;;;;;;AAEH,MAAA,cAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,MAAA,SAAA,GAAA,eAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AAGa,OAAA,CAAA,uBAAA,GAA2B,WAAD,IAAuC;AAC5E,QAAM,sBAAsB,GAAG,SAAA,CAAA,OAAA,CAAO,IAAP,CAAY,SAAZ,CAA/B;AAEA,MAAI,iBAAiB,GAAG,cAAA,CAAA,mBAAA,CAAoB,QAA5C;AACA,QAAM,eAAe,GAAG,WAAW,KAAK,gBAAxC,CAJ4E,CAK5E;;AACA,QAAM,WAAW,GAAG,eAAe,GAC/B,SAD+B,GAE/B,OAAO,CAAC,GAAR,CAAY,iBAAZ,IACA,OAAO,CAAC,GAAR,CAAY,4BADZ,IAEA,OAAO,CAAC,GAAR,CAAY,oCAJhB;AAMA,MAAI,CAAC,eAAD,IAAoB,WAAW,KAAK,SAAxC,EACE,iBAAiB,GAAG,cAAA,CAAA,mBAAA,CAAoB,OAAxC;AAEF,SAAO,IAAI,cAAA,CAAA,aAAJ,CAAkB;AACvB,IAAA,WAAW,EAAE,sBADU;AAEvB,IAAA,iBAFuB;AAGvB,IAAA,eAHuB;AAIvB,IAAA,WAAW,EAAE;AAJU,GAAlB,CAAP;AAMD,CArBY","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initializePuppeteerNode = void 0;\nconst Puppeteer_js_1 = require(\"./node/Puppeteer.js\");\nconst revisions_js_1 = require(\"./revisions.js\");\nconst pkg_dir_1 = __importDefault(require(\"pkg-dir\"));\nexports.initializePuppeteerNode = (packageName) => {\n    const puppeteerRootDirectory = pkg_dir_1.default.sync(__dirname);\n    let preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.chromium;\n    const isPuppeteerCore = packageName === 'puppeteer-core';\n    // puppeteer-core ignores environment variables\n    const productName = isPuppeteerCore\n        ? undefined\n        : process.env.PUPPETEER_PRODUCT ||\n            process.env.npm_config_puppeteer_product ||\n            process.env.npm_package_config_puppeteer_product;\n    if (!isPuppeteerCore && productName === 'firefox')\n        preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.firefox;\n    return new Puppeteer_js_1.PuppeteerNode({\n        projectRoot: puppeteerRootDirectory,\n        preferredRevision,\n        isPuppeteerCore,\n        productName: productName,\n    });\n};\n//# sourceMappingURL=initialize-node.js.map"]},"metadata":{},"sourceType":"script"}