{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/UserPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Timer from './Timer';\nimport BackEndBookCard from '../BookIndex/BackEndBookCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserPage({\n  user,\n  savedBooks,\n  timeLeft,\n  setTimeLeft,\n  reviewLeft,\n  setReviewLeft\n}) {\n  let waitingsMapped = [];\n  let waitingsFulFilledMapped = [];\n  let mostRecent = {};\n  let foundBook = null;\n  let foundReview = null;\n  console.log('hello');\n\n  if (user) {\n    let waitingsUnfulfilled = user.waitings.filter(waiting => waiting.fulfilled !== true); //get all unfulfilled waitings for a user\n\n    for (let i = 0; i < waitingsUnfulfilled.length; i++) {\n      waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id)); //create an array of those books by comparing to saved books\n    }\n\n    let waitlistMapped = waitingsMapped.map(waiting => {\n      //create JSX of books\n      return /*#__PURE__*/_jsxDEV(BackEndBookCard, {\n        book: waiting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this);\n    });\n    let waitingsFulfilled = user.waitings.filter(waiting => waiting.fulfilled === true); //get all fulfilled waitings for a user\n\n    for (let i = 0; i < waitingsFulfilled.length; i++) {\n      waitingsFulFilledMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsFulfilled[i].book_id)); //create an array of those books by comparing to saved books\n    }\n\n    let receivedMapped = waitingsFulFilledMapped.map(waiting => {\n      //create JSX of books\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: waiting.image_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/bookpage/${waiting.api_id}`,\n          children: waiting.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    });\n\n    if (waitingsFulfilled.length > 0) {\n      mostRecent = waitingsFulfilled.sort(function (a, b) {\n        // find most recent waiting\n        return b.id - a.id;\n      })[0];\n      foundBook = savedBooks.find(book => book.id === mostRecent.book_id); // find most recently received book based on most recent waiting\n\n      if (foundBook) {\n        foundReview = foundBook.reviews.find(review => review.user.id === user.id); // check if they left a review on it\n\n        if (foundReview) {\n          setReviewLeft(true);\n        } else {\n          setReviewLeft(false);\n        }\n      } else {\n        setReviewLeft(false);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [waitingsFulfilled.length > 0 ? /*#__PURE__*/_jsxDEV(Timer, {\n        mostRecent: mostRecent,\n        timeLeft: timeLeft,\n        setTimeLeft: setTimeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this) : \"Looks like you're eligible for your next book!\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profile_pic ? user.profile_pic : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name:\", user.name ? user.name : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"email:\", user.email ? user.email : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"username:\", user.username ? user.username : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bio:\", user.bio ? user.bio : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), reviewLeft === false ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"last book received: \", /*#__PURE__*/_jsxDEV(BackEndBookCard, {\n          book: foundBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 64\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"waitlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: waitingsMapped.length > 0 ? waitlistMapped : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"sponsored list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"received list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: waitingsFulFilledMapped.length > 0 ? receivedMapped : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/UserPage.js"],"names":["React","useState","useEffect","Link","Timer","BackEndBookCard","UserPage","user","savedBooks","timeLeft","setTimeLeft","reviewLeft","setReviewLeft","waitingsMapped","waitingsFulFilledMapped","mostRecent","foundBook","foundReview","console","log","waitingsUnfulfilled","waitings","filter","waiting","fulfilled","i","length","push","find","saved_book","id","book_id","waitlistMapped","map","waitingsFulfilled","receivedMapped","image_url","api_id","title","sort","a","b","book","reviews","review","profile_pic","name","email","username","bio"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport Timer from './Timer'\nimport BackEndBookCard from '../BookIndex/BackEndBookCard'\n\nexport default function UserPage({user, savedBooks, timeLeft, setTimeLeft, reviewLeft, setReviewLeft}){\n\n    let waitingsMapped = []\n    let waitingsFulFilledMapped = []\n    let mostRecent = {}\n    let foundBook = null\n    let foundReview = null\n    \n    console.log('hello')\n    \n    if (user){ \n    \n\n        let waitingsUnfulfilled = user.waitings.filter(waiting=>waiting.fulfilled!==true)//get all unfulfilled waitings for a user\n        for(let i=0;i<waitingsUnfulfilled.length;i++){\n            waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id))//create an array of those books by comparing to saved books\n        } \n        let waitlistMapped = waitingsMapped.map(waiting=>{ //create JSX of books\n            return (\n                <BackEndBookCard book={waiting}/>\n            )\n        })\n\n        let waitingsFulfilled = user.waitings.filter(waiting=>waiting.fulfilled===true) //get all fulfilled waitings for a user\n        \n\n        for(let i=0;i<waitingsFulfilled.length;i++){\n            waitingsFulFilledMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsFulfilled[i].book_id)) //create an array of those books by comparing to saved books\n        } \n\n\n        let receivedMapped = waitingsFulFilledMapped.map(waiting=>{ //create JSX of books\n            return (\n            <li>\n                <img src = {waiting.image_url }></img>\n                <Link to={`/bookpage/${waiting.api_id}`}>{waiting.title}</Link>\n            </li>\n            )\n        })\n\n\n        if (waitingsFulfilled.length > 0){\n            mostRecent = (waitingsFulfilled.sort(function (a, b){ // find most recent waiting\n                return b.id - a.id\n            })[0])\n                foundBook = savedBooks.find(book=>book.id===mostRecent.book_id) // find most recently received book based on most recent waiting\n                if (foundBook){\n                    foundReview = foundBook.reviews.find(review=>review.user.id===user.id) // check if they left a review on it\n                    if (foundReview){\n                        setReviewLeft(true)\n                    }\n                    else{\n                        setReviewLeft(false)\n                    }\n                }\n                else{\n                    setReviewLeft(false)\n                }\n        }\n\n        return(\n            <div> \n            {waitingsFulfilled.length > 0 ?\n                <Timer \n                    mostRecent={mostRecent}\n                    timeLeft={timeLeft} \n                    setTimeLeft={setTimeLeft}\n                />\n            : \"Looks like you're eligible for your next book!\"}\n                <img src={user.profile_pic ? user.profile_pic : null}></img>\n                <p>name:{user.name ? user.name : null}</p>\n                <p>email:{user.email ? user.email : null}</p>\n                <p>username:{user.username ? user.username : null }</p>\n                <p>bio:{user.bio ? user.bio : null}</p>\n                {reviewLeft === false ? <p>last book received: <BackEndBookCard book={foundBook}/> </p>: null}\n                <p>waitlist</p>\n                <ul>{waitingsMapped.length>0 ? waitlistMapped:null}</ul>\n                <p>sponsored list</p>\n\n                <p>received list</p>\n                <ul>{waitingsFulFilledMapped.length > 0 ? receivedMapped:null}</ul>\n\n            </div>\n        )\n    }\n    else{\n        return null\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}