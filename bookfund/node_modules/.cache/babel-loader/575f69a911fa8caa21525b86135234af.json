{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/OtherUserPage/OtherUserPage.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Link } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OtherUserPage({\n  savedBooks\n}) {\n  _s();\n\n  const [otherUser, setOtherUser] = useState(null);\n  const params = useParams();\n  let waitingsMapped = [];\n  let waitlistMapped = [];\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${params.id}`).then(response => response.json()).then(data => setOtherUser(data));\n  }, []);\n\n  if (otherUser) {\n    let waitingsUnfulfilled = otherUser.waitings.filter(waiting => waiting.fulfilled !== true);\n\n    for (let i = 0; i < waitingsUnfulfilled.length; i++) {\n      waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id));\n    }\n\n    waitlistMapped = waitingsMapped.map(waiting => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: waiting.image_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/bookpage/${waiting.api_id}`,\n          children: waiting.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: otherUser.profile_pic ? otherUser.profile_pic : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name: \", otherUser.name ? otherUser.name : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"email: \", otherUser.email ? otherUser.email : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"username: \", otherUser.username ? otherUser.username : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bio: \", otherUser.bio ? otherUser.bio : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"waitlist:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: waitingsMapped.length > 0 ? waitlistMapped : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(OtherUserPage, \"TxzcjK+8emY2Jh/C3ivb4xOjt5U=\", false, function () {\n  return [useParams];\n});\n\n_c = OtherUserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherUserPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/OtherUserPage/OtherUserPage.js"],"names":["useParams","Link","React","useEffect","useState","OtherUserPage","savedBooks","otherUser","setOtherUser","params","waitingsMapped","waitlistMapped","fetch","id","then","response","json","data","waitingsUnfulfilled","waitings","filter","waiting","fulfilled","i","length","push","find","saved_book","book_id","map","image_url","api_id","title","profile_pic","name","email","username","bio"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,IAApB,QAA+B,kBAA/B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAoC;AAAA;;AAE/C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMK,MAAM,GAAGT,SAAS,EAAxB;AACA,MAAIU,cAAc,GAAG,EAArB;AACA,MAAIC,cAAc,GAAG,EAArB;AAGAR,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,KAAK,CAAE,+BAA8BH,MAAM,CAACI,EAAG,EAA1C,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAET,YAAY,CAACS,IAAD,CAFxB;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAQA,MAAIV,SAAJ,EAAc;AAEV,QAAIW,mBAAmB,GAAGX,SAAS,CAACY,QAAV,CAAmBC,MAAnB,CAA0BC,OAAO,IAAEA,OAAO,CAACC,SAAR,KAAoB,IAAvD,CAA1B;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,mBAAmB,CAACM,MAAlC,EAAyCD,CAAC,EAA1C,EAA6C;AAC7Cb,MAAAA,cAAc,CAACe,IAAf,CAAoBnB,UAAU,CAACoB,IAAX,CAAgBC,UAAU,IAAIA,UAAU,CAACd,EAAX,KAAkBK,mBAAmB,CAACK,CAAD,CAAnB,CAAuBK,OAAvE,CAApB;AACC;;AACDjB,IAAAA,cAAc,GAAGD,cAAc,CAACmB,GAAf,CAAmBR,OAAO,IAAE;AACzC,0BACA;AAAA,gCACI;AAAK,UAAA,GAAG,EAAIA,OAAO,CAACS;AAApB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,aAAYT,OAAO,CAACU,MAAO,EAAtC;AAAA,oBAA0CV,OAAO,CAACW;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAMH,KAPgB,CAAjB;AASA,wBACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEzB,SAAS,CAAC0B,WAAV,GAAwB1B,SAAS,CAAC0B,WAAlC,GAAgD;AAA1D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,6BAAU1B,SAAS,CAAC2B,IAAV,GAAiB3B,SAAS,CAAC2B,IAA3B,GAAkC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,8BAAW3B,SAAS,CAAC4B,KAAV,GAAkB5B,SAAS,CAAC4B,KAA5B,GAAoC,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,iCAAc5B,SAAS,CAAC6B,QAAV,GAAqB7B,SAAS,CAAC6B,QAA/B,GAA0C,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,4BAAS7B,SAAS,CAAC8B,GAAV,GAAgB9B,SAAS,CAAC8B,GAA1B,GAAgC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,kBAAK3B,cAAc,CAACc,MAAf,GAAwB,CAAxB,GAA4Bb,cAA5B,GAA2C;AAAhD;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GA1BD,MA4BI;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;GAhDuBN,a;UAILL,S;;;KAJKK,a","sourcesContent":["import { useParams, Link} from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\"\n\n\nexport default function OtherUserPage({savedBooks}){\n\n    const [otherUser, setOtherUser] = useState(null)\n\n    const params = useParams()\n    let waitingsMapped = []\n    let waitlistMapped = []\n    \n\n    useEffect(()=>{\n        fetch(`http://localhost:3000/users/${params.id}`)\n        .then(response => response.json())\n        .then(data=>setOtherUser(data))  \n    },[])\n\n\n\n    if (otherUser){  \n        \n        let waitingsUnfulfilled = otherUser.waitings.filter(waiting=>waiting.fulfilled!==true)\n        for(let i=0;i<waitingsUnfulfilled.length;i++){\n        waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id))\n        } \n        waitlistMapped = waitingsMapped.map(waiting=>{\n            return (\n            <li>\n                <img src = {waiting.image_url }></img>\n                <Link to={`/bookpage/${waiting.api_id}`}>{waiting.title}</Link>\n            </li>\n            )\n        })\n \n        return(\n            <div> \n                <img src={otherUser.profile_pic ? otherUser.profile_pic : null}></img>\n                <p>name: {otherUser.name ? otherUser.name : null}</p>\n                <p>email: {otherUser.email ? otherUser.email : null}</p>\n                <p>username: {otherUser.username ? otherUser.username : null }</p>\n                <p>bio: {otherUser.bio ? otherUser.bio : null}</p>\n                <p>waitlist:</p>\n                <ul>{waitingsMapped.length > 0 ? waitlistMapped:null}</ul>\n            </div>\n        )\n    }\n    \n    else{\n        return <p>loading</p>\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}