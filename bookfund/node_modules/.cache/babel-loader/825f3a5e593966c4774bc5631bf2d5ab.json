{"ast":null,"code":"var _jsxFileName = \"/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Timer from './Timer';\nimport BackEndBookCard from '../BookIndex/BackEndBookCard';\nimport { Card } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserPage({\n  user,\n  savedBooks,\n  timeLeft,\n  setTimeLeft,\n  reviewLeft,\n  setReviewLeft\n}) {\n  _s();\n\n  let waitingsMapped = [];\n  let waitingsFulFilledMapped = [];\n  let mostRecent = null;\n  let foundBook = null;\n  let foundReview = null;\n  let receivedMapped = null;\n  let waitlistMapped = null;\n  let displayTimer = false;\n  console.log('hello');\n  useEffect(() => {}, []);\n\n  if (user) {\n    let waitingsUnfulfilled = user.waitings.filter(waiting => waiting.fulfilled !== true); //get all unfulfilled waitings for a user\n\n    for (let i = 0; i < waitingsUnfulfilled.length; i++) {\n      waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id)); //create an array of those books by comparing to saved books\n    }\n\n    if (waitingsMapped.length > 0) {\n      waitlistMapped = waitingsMapped.map(waiting => {\n        //create JSX of books\n        return /*#__PURE__*/_jsxDEV(BackEndBookCard, {\n          book: waiting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this);\n      });\n    }\n\n    let waitingsFulfilled = user.waitings.filter(waiting => waiting.fulfilled === true); //get all fulfilled waitings for a user\n\n    for (let i = 0; i < waitingsFulfilled.length; i++) {\n      waitingsFulFilledMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsFulfilled[i].book_id)); //create an array of those books by comparing to saved books\n    }\n\n    if (savedBooks.length > 0) {\n      receivedMapped = waitingsFulFilledMapped.map(waiting => {\n        //create JSX of books\n        return /*#__PURE__*/_jsxDEV(BackEndBookCard, {\n          book: waiting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this);\n      });\n    }\n\n    if (waitingsFulfilled.length > 0) {\n      mostRecent = waitingsFulfilled.sort(function (a, b) {\n        // find most recent received\n        return b.id - a.id;\n      })[0];\n\n      if (mostRecent) {\n        //check mostRecent.waiting date. if no time left between creation and future deadline, setTimeLeft(false), and vice versa\n        let creationDate = new Date(parseInt(mostRecent.sponsor_date) + 20000).getTime();\n        let now = new Date().getTime();\n\n        if (now < creationDate) {\n          // wait period has not passed\n          displayTimer = true; // console.log('timeleft: ', (now < creationDate))\n        }\n      }\n\n      foundBook = savedBooks.find(book => book.id === mostRecent.book_id); // find most recently received book based on most recent waiting\n\n      if (foundBook) {\n        foundReview = foundBook.reviews.find(review => review.user.id === user.id); // check if they left a review on it\n\n        if (foundReview) {\n          setReviewLeft(true);\n        } else {\n          setReviewLeft(false);\n        }\n      } else {\n        // if no book is on waiting list\n        setReviewLeft(true);\n      }\n    }\n  }\n\n  if (user) {\n    console.log('timeleft:', timeLeft);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [timeLeft ? /*#__PURE__*/_jsxDEV(Timer, {\n        mostRecent: mostRecent,\n        timeLeft: timeLeft,\n        setTimeLeft: setTimeLeft,\n        displayTimer: displayTimer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this) : null, displayTimer === false && reviewLeft === true ? \"Looks like you're eligible for your next book!\" : null, reviewLeft === false && mostRecent !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"please leave a review for: \", /*#__PURE__*/_jsxDEV(BackEndBookCard, {\n          book: foundBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 92\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 62\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profile_pic ? user.profile_pic : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name:\", user.name ? user.name : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"email:\", user.email ? user.email : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"username:\", user.username ? user.username : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bio:\", user.bio ? user.bio : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"waitlist:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), waitingsMapped.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Group, {\n        itemsPerRow: 8,\n        children: waitlistMapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"received:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), waitingsFulFilledMapped.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Group, {\n        itemsPerRow: 8,\n        children: receivedMapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"sponsored list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"please log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(UserPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/Users/simoncohen/Flatiron/code/Mod5/bookfund/frontend-bookfund/bookfund/src/components/pages/UserPage/UserPage.js"],"names":["React","useState","useEffect","Link","Timer","BackEndBookCard","Card","UserPage","user","savedBooks","timeLeft","setTimeLeft","reviewLeft","setReviewLeft","waitingsMapped","waitingsFulFilledMapped","mostRecent","foundBook","foundReview","receivedMapped","waitlistMapped","displayTimer","console","log","waitingsUnfulfilled","waitings","filter","waiting","fulfilled","i","length","push","find","saved_book","id","book_id","map","waitingsFulfilled","sort","a","b","creationDate","Date","parseInt","sponsor_date","getTime","now","book","reviews","review","profile_pic","name","email","username","bio"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport Timer from './Timer'\nimport BackEndBookCard from '../BookIndex/BackEndBookCard'\nimport { Card } from 'semantic-ui-react'\n\nexport default function UserPage({user, savedBooks, timeLeft, setTimeLeft, reviewLeft, setReviewLeft}){\n\n    let waitingsMapped = []\n    let waitingsFulFilledMapped = []\n    let mostRecent = null\n    let foundBook = null\n    let foundReview = null\n    let receivedMapped = null\n    let waitlistMapped = null\n    let displayTimer = false\n    \n    console.log('hello')\n\n    useEffect(()=>{\n        \n    },[])\n    \n    if (user){ \n\n        let waitingsUnfulfilled = user.waitings.filter(waiting=>waiting.fulfilled!==true)//get all unfulfilled waitings for a user\n        for(let i=0;i<waitingsUnfulfilled.length;i++){\n            waitingsMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsUnfulfilled[i].book_id))//create an array of those books by comparing to saved books\n        } \n        if (waitingsMapped.length > 0){\n            waitlistMapped = waitingsMapped.map(waiting=>{ //create JSX of books\n                return (<BackEndBookCard book={waiting}/>)\n            })\n        }\n\n\n        let waitingsFulfilled = user.waitings.filter(waiting=>waiting.fulfilled===true) //get all fulfilled waitings for a user\n        for(let i=0;i<waitingsFulfilled.length;i++){\n            waitingsFulFilledMapped.push(savedBooks.find(saved_book => saved_book.id === waitingsFulfilled[i].book_id)) //create an array of those books by comparing to saved books\n        } \n\n        if (savedBooks.length > 0){\n            receivedMapped = waitingsFulFilledMapped.map(waiting=>{ //create JSX of books\n                return (<BackEndBookCard book={waiting}/>)\n            })\n        }\n\n        if (waitingsFulfilled.length > 0){\n            mostRecent = (waitingsFulfilled.sort(function (a, b){ // find most recent received\n                return b.id - a.id\n            })[0])\n            if (mostRecent){\n                //check mostRecent.waiting date. if no time left between creation and future deadline, setTimeLeft(false), and vice versa\n                let creationDate = new Date(parseInt(mostRecent.sponsor_date)+20000).getTime()\n                let now = new Date().getTime()\n\n                if (now < creationDate){ // wait period has not passed\n                    displayTimer = true\n                    // console.log('timeleft: ', (now < creationDate))\n                }\n\n            }\n                foundBook = savedBooks.find(book=>book.id===mostRecent.book_id) // find most recently received book based on most recent waiting\n                if (foundBook){\n                    foundReview = foundBook.reviews.find(review=>review.user.id===user.id) // check if they left a review on it\n                    if (foundReview){\n                        setReviewLeft(true)\n                    }\n                    else{\n                        setReviewLeft(false)\n                    }\n                    \n                }\n                else{ // if no book is on waiting list\n                    setReviewLeft(true)\n                }\n        }\n\n    }\n    if (user){\n        console.log('timeleft:', timeLeft)\n        return(\n            <div> \n            { timeLeft ?\n                <Timer \n                    mostRecent={mostRecent}\n                    timeLeft={timeLeft} \n                    setTimeLeft={setTimeLeft}\n                    displayTimer={displayTimer}\n                />\n            : null}\n                {displayTimer === false && reviewLeft === true ? \"Looks like you're eligible for your next book!\" : null}\n                {reviewLeft === false && mostRecent!== null? <p>please leave a review for: <BackEndBookCard book={foundBook}/> </p>: null}\n                <img src={user.profile_pic ? user.profile_pic : null}></img>\n                <p>name:{user.name ? user.name : null}</p>\n                <p>email:{user.email ? user.email : null}</p>\n                <p>username:{user.username ? user.username : null }</p>\n                <p>bio:{user.bio ? user.bio : null}</p>\n                <p>waitlist:</p>\n                {waitingsMapped.length>0 ? \n                    <Card.Group itemsPerRow={8}>\n                        {waitlistMapped}  \n                    </Card.Group>\n                :null}\n\n                <p>received:</p>\n                {waitingsFulFilledMapped.length > 0 ? \n                    <Card.Group itemsPerRow={8}>\n                        {receivedMapped}  \n                    </Card.Group>\n                :null}\n                <p>sponsored list</p>\n\n            </div>\n        )\n\n    }\n    else{\n        return <p>please log in</p>\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}