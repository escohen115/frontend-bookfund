{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SecurityDetails = void 0;\n/**\n * The SecurityDetails class represents the security details of a\n * response that was received over a secure connection.\n *\n * @public\n */\n\nclass SecurityDetails {\n  /**\n   * @internal\n   */\n  constructor(securityPayload) {\n    this._subjectName = securityPayload.subjectName;\n    this._issuer = securityPayload.issuer;\n    this._validFrom = securityPayload.validFrom;\n    this._validTo = securityPayload.validTo;\n    this._protocol = securityPayload.protocol;\n    this._sanList = securityPayload.sanList;\n  }\n  /**\n   * @returns The name of the issuer of the certificate.\n   */\n\n\n  issuer() {\n    return this._issuer;\n  }\n  /**\n   * @returns {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the start of the certificate's validity.\n   */\n\n\n  validFrom() {\n    return this._validFrom;\n  }\n  /**\n   * @returns {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the end of the certificate's validity.\n   */\n\n\n  validTo() {\n    return this._validTo;\n  }\n  /**\n   * @returns The security protocol being used, e.g. \"TLS 1.2\".\n   */\n\n\n  protocol() {\n    return this._protocol;\n  }\n  /**\n   * @returns The name of the subject to which the certificate was issued.\n   */\n\n\n  subjectName() {\n    return this._subjectName;\n  }\n  /**\n   * @returns The list of {@link https://en.wikipedia.org/wiki/Subject_Alternative_Name | subject alternative names (SANs)} of the certificate.\n   */\n\n\n  subjectAlternativeNames() {\n    return this._sanList;\n  }\n\n}\n\nexports.SecurityDetails = SecurityDetails;","map":{"version":3,"sources":["../../../../src/common/SecurityDetails.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;AAIH;;;;;AAKG;;AACH,MAAa,eAAb,CAA4B;AAQ1B;;AAEG;AACH,EAAA,WAAA,CAAY,eAAZ,EAA6D;AAC3D,SAAK,YAAL,GAAoB,eAAe,CAAC,WAApC;AACA,SAAK,OAAL,GAAe,eAAe,CAAC,MAA/B;AACA,SAAK,UAAL,GAAkB,eAAe,CAAC,SAAlC;AACA,SAAK,QAAL,GAAgB,eAAe,CAAC,OAAhC;AACA,SAAK,SAAL,GAAiB,eAAe,CAAC,QAAjC;AACA,SAAK,QAAL,GAAgB,eAAe,CAAC,OAAhC;AACD;AAED;;AAEG;;;AACH,EAAA,MAAM,GAAA;AACJ,WAAO,KAAK,OAAZ;AACD;AAED;;;AAGG;;;AACH,EAAA,SAAS,GAAA;AACP,WAAO,KAAK,UAAZ;AACD;AAED;;;AAGG;;;AACH,EAAA,OAAO,GAAA;AACL,WAAO,KAAK,QAAZ;AACD;AAED;;AAEG;;;AACH,EAAA,QAAQ,GAAA;AACN,WAAO,KAAK,SAAZ;AACD;AAED;;AAEG;;;AACH,EAAA,WAAW,GAAA;AACT,WAAO,KAAK,YAAZ;AACD;AAED;;AAEG;;;AACH,EAAA,uBAAuB,GAAA;AACrB,WAAO,KAAK,QAAZ;AACD;;AA9DyB;;AAA5B,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SecurityDetails = void 0;\n/**\n * The SecurityDetails class represents the security details of a\n * response that was received over a secure connection.\n *\n * @public\n */\nclass SecurityDetails {\n    /**\n     * @internal\n     */\n    constructor(securityPayload) {\n        this._subjectName = securityPayload.subjectName;\n        this._issuer = securityPayload.issuer;\n        this._validFrom = securityPayload.validFrom;\n        this._validTo = securityPayload.validTo;\n        this._protocol = securityPayload.protocol;\n        this._sanList = securityPayload.sanList;\n    }\n    /**\n     * @returns The name of the issuer of the certificate.\n     */\n    issuer() {\n        return this._issuer;\n    }\n    /**\n     * @returns {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n     * marking the start of the certificate's validity.\n     */\n    validFrom() {\n        return this._validFrom;\n    }\n    /**\n     * @returns {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n     * marking the end of the certificate's validity.\n     */\n    validTo() {\n        return this._validTo;\n    }\n    /**\n     * @returns The security protocol being used, e.g. \"TLS 1.2\".\n     */\n    protocol() {\n        return this._protocol;\n    }\n    /**\n     * @returns The name of the subject to which the certificate was issued.\n     */\n    subjectName() {\n        return this._subjectName;\n    }\n    /**\n     * @returns The list of {@link https://en.wikipedia.org/wiki/Subject_Alternative_Name | subject alternative names (SANs)} of the certificate.\n     */\n    subjectAlternativeNames() {\n        return this._sanList;\n    }\n}\nexports.SecurityDetails = SecurityDetails;\n//# sourceMappingURL=SecurityDetails.js.map"]},"metadata":{},"sourceType":"script"}